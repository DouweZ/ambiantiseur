ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_adc.c"
  16              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.7.3 20121207 (release) [ARM/embedded-4_7-
  17              	@	compiled by GNU C version 4.2.1-sjlj (mingw32-2), GMP version 4.3.2, MPFR version 2.4.2, MPC vers
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I ./inc -I ./cmsis/core -I ./cmsis/device
  20              	@ -imultilib armv7e-m/fpu
  21              	@ -iprefix c:\gnutoolsarmembedded\4.7-2012q4\bin\../lib/gcc/arm-none-eabi/4.7.3/
  22              	@ -isysroot c:\gnutoolsarmembedded\4.7-2012q4\bin\../arm-none-eabi
  23              	@ -MD cmsis/device/stm32f4xx_adc.d -MF .dep/stm32f4xx_adc.o.d -MP
  24              	@ -MQ cmsis/device/stm32f4xx_adc.o -D__USES_INITFINI__ -D __FPU_USED=1
  25              	@ -D __arm__ -D __ASSEMBLY__ -D USE_STDPERIPH_DRIVER -D STM32F4XX
  26              	@ -D HSE_VALUE=8000000 -D __FPU_PRESENT=1 -D STM32F407VG
  27              	@ -D RUN_FROM_FLASH=1 cmsis/device/stm32f4xx_adc.c -mthumb -mcpu=cortex-m4
  28              	@ -mfloat-abi=hard -mfpu=fpv4-sp-d16
  29              	@ -auxbase-strip cmsis/device/stm32f4xx_adc.o -gdwarf-2 -O2 -Wall
  30              	@ -Wstrict-prototypes -fverbose-asm -ffunction-sections -fdata-sections
  31              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  32              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  33              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdebug-types-section
  34              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  35              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  36              	@ -fforward-propagate -ffunction-cse -ffunction-sections -fgcse -fgcse-lm
  37              	@ -fgnu-runtime -fguess-branch-probability -fident -fif-conversion
  38              	@ -fif-conversion2 -findirect-inlining -finline -finline-atomics
  39              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  40              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  41              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  42              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  43              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  44              	@ -foptimize-register-move -foptimize-sibling-calls -foptimize-strlen
  45              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  46              	@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
  47              	@ -freorder-functions -frerun-cse-after-loop
  48              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  49              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  50              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  51              	@ -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
  52              	@ -fsection-anchors -fshow-column -fshrink-wrap -fsigned-zeros
  53              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstrict-aliasing
  54              	@ -fstrict-overflow -fstrict-volatile-bitfields -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  61              	@ -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  62              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  63              	@ -funit-at-a-time -funroll-loops -fvar-tracking -fvar-tracking-assignments
  64              	@ -fverbose-asm -fweb -fzero-initialized-in-bss -mlittle-endian
  65              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              	.Ltext0:
  69              		.cfi_sections	.debug_frame
  70              		.section	.text.ADC_DeInit,"ax",%progbits
  71              		.align	2
  72              		.global	ADC_DeInit
  73              		.thumb
  74              		.thumb_func
  75              		.type	ADC_DeInit, %function
  76              	ADC_DeInit:
  77              	.LFB110:
  78              		.file 1 "cmsis/device/stm32f4xx_adc.c"
   1:cmsis/device/stm32f4xx_adc.c **** /**
   2:cmsis/device/stm32f4xx_adc.c ****   ******************************************************************************
   3:cmsis/device/stm32f4xx_adc.c ****   * @file    stm32f4xx_adc.c
   4:cmsis/device/stm32f4xx_adc.c ****   * @author  MCD Application Team
   5:cmsis/device/stm32f4xx_adc.c ****   * @version V1.0.0
   6:cmsis/device/stm32f4xx_adc.c ****   * @date    30-September-2011
   7:cmsis/device/stm32f4xx_adc.c ****   * @brief   This file provides firmware functions to manage the following 
   8:cmsis/device/stm32f4xx_adc.c ****   *          functionalities of the Analog to Digital Convertor (ADC) peripheral:
   9:cmsis/device/stm32f4xx_adc.c ****   *           - Initialization and Configuration (in addition to ADC multi mode 
  10:cmsis/device/stm32f4xx_adc.c ****   *             selection)
  11:cmsis/device/stm32f4xx_adc.c ****   *           - Analog Watchdog configuration
  12:cmsis/device/stm32f4xx_adc.c ****   *           - Temperature Sensor & Vrefint (Voltage Reference internal) & VBAT
  13:cmsis/device/stm32f4xx_adc.c ****   *             management 
  14:cmsis/device/stm32f4xx_adc.c ****   *           - Regular Channels Configuration
  15:cmsis/device/stm32f4xx_adc.c ****   *           - Regular Channels DMA Configuration
  16:cmsis/device/stm32f4xx_adc.c ****   *           - Injected channels Configuration
  17:cmsis/device/stm32f4xx_adc.c ****   *           - Interrupts and flags management
  18:cmsis/device/stm32f4xx_adc.c ****   *         
  19:cmsis/device/stm32f4xx_adc.c ****   *  @verbatim
  20:cmsis/device/stm32f4xx_adc.c ****   *
  21:cmsis/device/stm32f4xx_adc.c ****   *          ===================================================================
  22:cmsis/device/stm32f4xx_adc.c ****   *                                   How to use this driver
  23:cmsis/device/stm32f4xx_adc.c ****   *          ===================================================================
  24:cmsis/device/stm32f4xx_adc.c **** 
  25:cmsis/device/stm32f4xx_adc.c ****   *          1.  Enable the ADC interface clock using 
  26:cmsis/device/stm32f4xx_adc.c ****   *                  RCC_APB2PeriphClockCmd(RCC_APB2Periph_ADCx, ENABLE); 
  27:cmsis/device/stm32f4xx_adc.c ****   *     
  28:cmsis/device/stm32f4xx_adc.c ****   *          2. ADC pins configuration
  29:cmsis/device/stm32f4xx_adc.c ****   *               - Enable the clock for the ADC GPIOs using the following function:
  30:cmsis/device/stm32f4xx_adc.c ****   *                   RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOx, ENABLE);   
  31:cmsis/device/stm32f4xx_adc.c ****   *                - Configure these ADC pins in analog mode using GPIO_Init();  
  32:cmsis/device/stm32f4xx_adc.c ****   *
  33:cmsis/device/stm32f4xx_adc.c ****   *          3. Configure the ADC Prescaler, conversion resolution and data 
  34:cmsis/device/stm32f4xx_adc.c ****   *              alignment using the ADC_Init() function.
  35:cmsis/device/stm32f4xx_adc.c ****   *          4. Activate the ADC peripheral using ADC_Cmd() function.
  36:cmsis/device/stm32f4xx_adc.c ****   *
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 3


  37:cmsis/device/stm32f4xx_adc.c ****   *          Regular channels group configuration
  38:cmsis/device/stm32f4xx_adc.c ****   *          ====================================    
  39:cmsis/device/stm32f4xx_adc.c ****   *            - To configure the ADC regular channels group features, use 
  40:cmsis/device/stm32f4xx_adc.c ****   *              ADC_Init() and ADC_RegularChannelConfig() functions.
  41:cmsis/device/stm32f4xx_adc.c ****   *            - To activate the continuous mode, use the ADC_continuousModeCmd()
  42:cmsis/device/stm32f4xx_adc.c ****   *              function.
  43:cmsis/device/stm32f4xx_adc.c ****   *            - To configurate and activate the Discontinuous mode, use the 
  44:cmsis/device/stm32f4xx_adc.c ****   *              ADC_DiscModeChannelCountConfig() and ADC_DiscModeCmd() functions.
  45:cmsis/device/stm32f4xx_adc.c ****   *            - To read the ADC converted values, use the ADC_GetConversionValue()
  46:cmsis/device/stm32f4xx_adc.c ****   *              function.
  47:cmsis/device/stm32f4xx_adc.c ****   *
  48:cmsis/device/stm32f4xx_adc.c ****   *          Multi mode ADCs Regular channels configuration
  49:cmsis/device/stm32f4xx_adc.c ****   *          ===============================================
  50:cmsis/device/stm32f4xx_adc.c ****   *            - Refer to "Regular channels group configuration" description to
  51:cmsis/device/stm32f4xx_adc.c ****   *              configure the ADC1, ADC2 and ADC3 regular channels.        
  52:cmsis/device/stm32f4xx_adc.c ****   *            - Select the Multi mode ADC regular channels features (dual or 
  53:cmsis/device/stm32f4xx_adc.c ****   *              triple mode) using ADC_CommonInit() function and configure 
  54:cmsis/device/stm32f4xx_adc.c ****   *              the DMA mode using ADC_MultiModeDMARequestAfterLastTransferCmd() 
  55:cmsis/device/stm32f4xx_adc.c ****   *              functions.        
  56:cmsis/device/stm32f4xx_adc.c ****   *            - Read the ADCs converted values using the 
  57:cmsis/device/stm32f4xx_adc.c ****   *              ADC_GetMultiModeConversionValue() function.
  58:cmsis/device/stm32f4xx_adc.c ****   *
  59:cmsis/device/stm32f4xx_adc.c ****   *          DMA for Regular channels group features configuration
  60:cmsis/device/stm32f4xx_adc.c ****   *          ====================================================== 
  61:cmsis/device/stm32f4xx_adc.c ****   *           - To enable the DMA mode for regular channels group, use the 
  62:cmsis/device/stm32f4xx_adc.c ****   *             ADC_DMACmd() function.
  63:cmsis/device/stm32f4xx_adc.c ****   *           - To enable the generation of DMA requests continuously at the end
  64:cmsis/device/stm32f4xx_adc.c ****   *             of the last DMA transfer, use the ADC_DMARequestAfterLastTransferCmd() 
  65:cmsis/device/stm32f4xx_adc.c ****   *             function.
  66:cmsis/device/stm32f4xx_adc.c ****   *
  67:cmsis/device/stm32f4xx_adc.c ****   *          Injected channels group configuration
  68:cmsis/device/stm32f4xx_adc.c ****   *          =====================================    
  69:cmsis/device/stm32f4xx_adc.c ****   *            - To configure the ADC Injected channels group features, use 
  70:cmsis/device/stm32f4xx_adc.c ****   *              ADC_InjectedChannelConfig() and  ADC_InjectedSequencerLengthConfig()
  71:cmsis/device/stm32f4xx_adc.c ****   *              functions.
  72:cmsis/device/stm32f4xx_adc.c ****   *            - To activate the continuous mode, use the ADC_continuousModeCmd()
  73:cmsis/device/stm32f4xx_adc.c ****   *              function.
  74:cmsis/device/stm32f4xx_adc.c ****   *            - To activate the Injected Discontinuous mode, use the 
  75:cmsis/device/stm32f4xx_adc.c ****   *              ADC_InjectedDiscModeCmd() function.  
  76:cmsis/device/stm32f4xx_adc.c ****   *            - To activate the AutoInjected mode, use the ADC_AutoInjectedConvCmd() 
  77:cmsis/device/stm32f4xx_adc.c ****   *              function.        
  78:cmsis/device/stm32f4xx_adc.c ****   *            - To read the ADC converted values, use the ADC_GetInjectedConversionValue() 
  79:cmsis/device/stm32f4xx_adc.c ****   *              function.
  80:cmsis/device/stm32f4xx_adc.c ****   *
  81:cmsis/device/stm32f4xx_adc.c ****   *  @endverbatim
  82:cmsis/device/stm32f4xx_adc.c ****   *
  83:cmsis/device/stm32f4xx_adc.c ****   ******************************************************************************
  84:cmsis/device/stm32f4xx_adc.c ****   * @attention
  85:cmsis/device/stm32f4xx_adc.c ****   *
  86:cmsis/device/stm32f4xx_adc.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  87:cmsis/device/stm32f4xx_adc.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  88:cmsis/device/stm32f4xx_adc.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  89:cmsis/device/stm32f4xx_adc.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  90:cmsis/device/stm32f4xx_adc.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  91:cmsis/device/stm32f4xx_adc.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  92:cmsis/device/stm32f4xx_adc.c ****   *
  93:cmsis/device/stm32f4xx_adc.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 4


  94:cmsis/device/stm32f4xx_adc.c ****   ******************************************************************************  
  95:cmsis/device/stm32f4xx_adc.c ****   */ 
  96:cmsis/device/stm32f4xx_adc.c **** 
  97:cmsis/device/stm32f4xx_adc.c **** /* Includes ------------------------------------------------------------------*/
  98:cmsis/device/stm32f4xx_adc.c **** #include "stm32f4xx_adc.h"
  99:cmsis/device/stm32f4xx_adc.c **** #include "stm32f4xx_rcc.h"
 100:cmsis/device/stm32f4xx_adc.c **** 
 101:cmsis/device/stm32f4xx_adc.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 102:cmsis/device/stm32f4xx_adc.c ****   * @{
 103:cmsis/device/stm32f4xx_adc.c ****   */
 104:cmsis/device/stm32f4xx_adc.c **** 
 105:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC 
 106:cmsis/device/stm32f4xx_adc.c ****   * @brief ADC driver modules
 107:cmsis/device/stm32f4xx_adc.c ****   * @{
 108:cmsis/device/stm32f4xx_adc.c ****   */ 
 109:cmsis/device/stm32f4xx_adc.c **** 
 110:cmsis/device/stm32f4xx_adc.c **** /* Private typedef -----------------------------------------------------------*/
 111:cmsis/device/stm32f4xx_adc.c **** /* Private define ------------------------------------------------------------*/ 
 112:cmsis/device/stm32f4xx_adc.c **** 
 113:cmsis/device/stm32f4xx_adc.c **** /* ADC DISCNUM mask */
 114:cmsis/device/stm32f4xx_adc.c **** #define CR1_DISCNUM_RESET         ((uint32_t)0xFFFF1FFF)
 115:cmsis/device/stm32f4xx_adc.c **** 
 116:cmsis/device/stm32f4xx_adc.c **** /* ADC AWDCH mask */
 117:cmsis/device/stm32f4xx_adc.c **** #define CR1_AWDCH_RESET           ((uint32_t)0xFFFFFFE0)   
 118:cmsis/device/stm32f4xx_adc.c **** 
 119:cmsis/device/stm32f4xx_adc.c **** /* ADC Analog watchdog enable mode mask */
 120:cmsis/device/stm32f4xx_adc.c **** #define CR1_AWDMode_RESET         ((uint32_t)0xFF3FFDFF)   
 121:cmsis/device/stm32f4xx_adc.c **** 
 122:cmsis/device/stm32f4xx_adc.c **** /* CR1 register Mask */
 123:cmsis/device/stm32f4xx_adc.c **** #define CR1_CLEAR_MASK            ((uint32_t)0xFCFFFEFF)
 124:cmsis/device/stm32f4xx_adc.c **** 
 125:cmsis/device/stm32f4xx_adc.c **** /* ADC EXTEN mask */
 126:cmsis/device/stm32f4xx_adc.c **** #define CR2_EXTEN_RESET           ((uint32_t)0xCFFFFFFF)  
 127:cmsis/device/stm32f4xx_adc.c **** 
 128:cmsis/device/stm32f4xx_adc.c **** /* ADC JEXTEN mask */
 129:cmsis/device/stm32f4xx_adc.c **** #define CR2_JEXTEN_RESET          ((uint32_t)0xFFCFFFFF)  
 130:cmsis/device/stm32f4xx_adc.c **** 
 131:cmsis/device/stm32f4xx_adc.c **** /* ADC JEXTSEL mask */
 132:cmsis/device/stm32f4xx_adc.c **** #define CR2_JEXTSEL_RESET         ((uint32_t)0xFFF0FFFF)  
 133:cmsis/device/stm32f4xx_adc.c **** 
 134:cmsis/device/stm32f4xx_adc.c **** /* CR2 register Mask */
 135:cmsis/device/stm32f4xx_adc.c **** #define CR2_CLEAR_MASK            ((uint32_t)0xC0FFF7FD)
 136:cmsis/device/stm32f4xx_adc.c **** 
 137:cmsis/device/stm32f4xx_adc.c **** /* ADC SQx mask */
 138:cmsis/device/stm32f4xx_adc.c **** #define SQR3_SQ_SET               ((uint32_t)0x0000001F)  
 139:cmsis/device/stm32f4xx_adc.c **** #define SQR2_SQ_SET               ((uint32_t)0x0000001F)  
 140:cmsis/device/stm32f4xx_adc.c **** #define SQR1_SQ_SET               ((uint32_t)0x0000001F)  
 141:cmsis/device/stm32f4xx_adc.c **** 
 142:cmsis/device/stm32f4xx_adc.c **** /* ADC L Mask */
 143:cmsis/device/stm32f4xx_adc.c **** #define SQR1_L_RESET              ((uint32_t)0xFF0FFFFF) 
 144:cmsis/device/stm32f4xx_adc.c **** 
 145:cmsis/device/stm32f4xx_adc.c **** /* ADC JSQx mask */
 146:cmsis/device/stm32f4xx_adc.c **** #define JSQR_JSQ_SET              ((uint32_t)0x0000001F) 
 147:cmsis/device/stm32f4xx_adc.c **** 
 148:cmsis/device/stm32f4xx_adc.c **** /* ADC JL mask */
 149:cmsis/device/stm32f4xx_adc.c **** #define JSQR_JL_SET               ((uint32_t)0x00300000) 
 150:cmsis/device/stm32f4xx_adc.c **** #define JSQR_JL_RESET             ((uint32_t)0xFFCFFFFF) 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 5


 151:cmsis/device/stm32f4xx_adc.c **** 
 152:cmsis/device/stm32f4xx_adc.c **** /* ADC SMPx mask */
 153:cmsis/device/stm32f4xx_adc.c **** #define SMPR1_SMP_SET             ((uint32_t)0x00000007)  
 154:cmsis/device/stm32f4xx_adc.c **** #define SMPR2_SMP_SET             ((uint32_t)0x00000007) 
 155:cmsis/device/stm32f4xx_adc.c **** 
 156:cmsis/device/stm32f4xx_adc.c **** /* ADC JDRx registers offset */
 157:cmsis/device/stm32f4xx_adc.c **** #define JDR_OFFSET                ((uint8_t)0x28) 
 158:cmsis/device/stm32f4xx_adc.c **** 
 159:cmsis/device/stm32f4xx_adc.c **** /* ADC CDR register base address */
 160:cmsis/device/stm32f4xx_adc.c **** #define CDR_ADDRESS               ((uint32_t)0x40012308)   
 161:cmsis/device/stm32f4xx_adc.c **** 
 162:cmsis/device/stm32f4xx_adc.c **** /* ADC CCR register Mask */
 163:cmsis/device/stm32f4xx_adc.c **** #define CR_CLEAR_MASK             ((uint32_t)0xFFFC30E0)  
 164:cmsis/device/stm32f4xx_adc.c **** 
 165:cmsis/device/stm32f4xx_adc.c **** /* Private macro -------------------------------------------------------------*/
 166:cmsis/device/stm32f4xx_adc.c **** /* Private variables ---------------------------------------------------------*/
 167:cmsis/device/stm32f4xx_adc.c **** /* Private function prototypes -----------------------------------------------*/
 168:cmsis/device/stm32f4xx_adc.c **** /* Private functions ---------------------------------------------------------*/
 169:cmsis/device/stm32f4xx_adc.c **** 
 170:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Private_Functions
 171:cmsis/device/stm32f4xx_adc.c ****   * @{
 172:cmsis/device/stm32f4xx_adc.c ****   */ 
 173:cmsis/device/stm32f4xx_adc.c **** 
 174:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group1 Initialization and Configuration functions
 175:cmsis/device/stm32f4xx_adc.c ****  *  @brief    Initialization and Configuration functions 
 176:cmsis/device/stm32f4xx_adc.c ****  *
 177:cmsis/device/stm32f4xx_adc.c **** @verbatim    
 178:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
 179:cmsis/device/stm32f4xx_adc.c ****                       Initialization and Configuration functions
 180:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
 181:cmsis/device/stm32f4xx_adc.c ****   This section provides functions allowing to:
 182:cmsis/device/stm32f4xx_adc.c ****    - Initialize and configure the ADC Prescaler
 183:cmsis/device/stm32f4xx_adc.c ****    - ADC Conversion Resolution (12bit..6bit)
 184:cmsis/device/stm32f4xx_adc.c ****    - Scan Conversion Mode (multichannels or one channel) for regular group
 185:cmsis/device/stm32f4xx_adc.c ****    - ADC Continuous Conversion Mode (Continuous or Single conversion) for 
 186:cmsis/device/stm32f4xx_adc.c ****      regular group
 187:cmsis/device/stm32f4xx_adc.c ****    - External trigger Edge and source of regular group, 
 188:cmsis/device/stm32f4xx_adc.c ****    - Converted data alignment (left or right)
 189:cmsis/device/stm32f4xx_adc.c ****    - The number of ADC conversions that will be done using the sequencer for 
 190:cmsis/device/stm32f4xx_adc.c ****      regular channel group
 191:cmsis/device/stm32f4xx_adc.c ****    - Multi ADC mode selection
 192:cmsis/device/stm32f4xx_adc.c ****    - Direct memory access mode selection for multi ADC mode  
 193:cmsis/device/stm32f4xx_adc.c ****    - Delay between 2 sampling phases (used in dual or triple interleaved modes)
 194:cmsis/device/stm32f4xx_adc.c ****    - Enable or disable the ADC peripheral
 195:cmsis/device/stm32f4xx_adc.c ****    
 196:cmsis/device/stm32f4xx_adc.c **** @endverbatim
 197:cmsis/device/stm32f4xx_adc.c ****   * @{
 198:cmsis/device/stm32f4xx_adc.c ****   */
 199:cmsis/device/stm32f4xx_adc.c **** 
 200:cmsis/device/stm32f4xx_adc.c **** /**
 201:cmsis/device/stm32f4xx_adc.c ****   * @brief  Deinitializes all ADCs peripherals registers to their default reset 
 202:cmsis/device/stm32f4xx_adc.c ****   *         values.
 203:cmsis/device/stm32f4xx_adc.c ****   * @param  None
 204:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 205:cmsis/device/stm32f4xx_adc.c ****   */
 206:cmsis/device/stm32f4xx_adc.c **** void ADC_DeInit(void)
 207:cmsis/device/stm32f4xx_adc.c **** {
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 6


  79              		.loc 1 207 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 08B5     		push	{r3, lr}	@
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
 208:cmsis/device/stm32f4xx_adc.c ****   /* Enable all ADCs reset state */
 209:cmsis/device/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, ENABLE);
  88              		.loc 1 209 0
  89 0002 0121     		movs	r1, #1	@,
  90 0004 4FF48070 		mov	r0, #256	@,
  91 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd	@
  92              	.LVL0:
 210:cmsis/device/stm32f4xx_adc.c ****   
 211:cmsis/device/stm32f4xx_adc.c ****   /* Release all ADCs from reset state */
 212:cmsis/device/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  93              		.loc 1 212 0
  94 000c 4FF48070 		mov	r0, #256	@,
  95 0010 0021     		movs	r1, #0	@,
 213:cmsis/device/stm32f4xx_adc.c **** }
  96              		.loc 1 213 0
  97 0012 BDE80840 		pop	{r3, lr}	@
 212:cmsis/device/stm32f4xx_adc.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_ADC, DISABLE);
  98              		.loc 1 212 0
  99 0016 FFF7FEBF 		b	RCC_APB2PeriphResetCmd	@
 100              	.LVL1:
 101              		.cfi_endproc
 102              	.LFE110:
 103              		.size	ADC_DeInit, .-ADC_DeInit
 104 001a 00BF     		.section	.text.ADC_Init,"ax",%progbits
 105              		.align	2
 106              		.global	ADC_Init
 107              		.thumb
 108              		.thumb_func
 109              		.type	ADC_Init, %function
 110              	ADC_Init:
 111              	.LFB111:
 214:cmsis/device/stm32f4xx_adc.c **** 
 215:cmsis/device/stm32f4xx_adc.c **** /**
 216:cmsis/device/stm32f4xx_adc.c ****   * @brief  Initializes the ADCx peripheral according to the specified parameters 
 217:cmsis/device/stm32f4xx_adc.c ****   *         in the ADC_InitStruct.
 218:cmsis/device/stm32f4xx_adc.c ****   * @note   This function is used to configure the global features of the ADC ( 
 219:cmsis/device/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 220:cmsis/device/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 221:cmsis/device/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
 222:cmsis/device/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 223:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 224:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure that contains
 225:cmsis/device/stm32f4xx_adc.c ****   *         the configuration information for the specified ADC peripheral.
 226:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 227:cmsis/device/stm32f4xx_adc.c ****   */
 228:cmsis/device/stm32f4xx_adc.c **** void ADC_Init(ADC_TypeDef* ADCx, ADC_InitTypeDef* ADC_InitStruct)
 229:cmsis/device/stm32f4xx_adc.c **** {
 112              		.loc 1 229 0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 7


 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL2:
 230:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 231:cmsis/device/stm32f4xx_adc.c ****   uint8_t tmpreg2 = 0;
 232:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 233:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 234:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_RESOLUTION(ADC_InitStruct->ADC_Resolution)); 
 235:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ScanConvMode));
 236:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(ADC_InitStruct->ADC_ContinuousConvMode)); 
 237:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG_EDGE(ADC_InitStruct->ADC_ExternalTrigConvEdge)); 
 238:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_TRIG(ADC_InitStruct->ADC_ExternalTrigConv));    
 239:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_DATA_ALIGN(ADC_InitStruct->ADC_DataAlign)); 
 240:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_LENGTH(ADC_InitStruct->ADC_NbrOfConversion));
 241:cmsis/device/stm32f4xx_adc.c ****   
 242:cmsis/device/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR1 Configuration -----------------*/
 243:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADCx CR1 value */
 244:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 118              		.loc 1 244 0
 119 0000 4268     		ldr	r2, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 120              	.LVL3:
 245:cmsis/device/stm32f4xx_adc.c ****   
 246:cmsis/device/stm32f4xx_adc.c ****   /* Clear RES and SCAN bits */
 247:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 248:cmsis/device/stm32f4xx_adc.c ****   
 249:cmsis/device/stm32f4xx_adc.c ****   /* Configure ADCx: scan conversion mode and resolution */
 250:cmsis/device/stm32f4xx_adc.c ****   /* Set SCAN bit according to ADC_ScanConvMode value */
 251:cmsis/device/stm32f4xx_adc.c ****   /* Set RES bit according to ADC_Resolution value */ 
 252:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
 121              		.loc 1 252 0
 122 0002 0B79     		ldrb	r3, [r1, #4]	@ zero_extendqisi2	@ ADC_InitStruct_6(D)->ADC_ScanConvMode, ADC_InitStruct_6(D)-
 229:cmsis/device/stm32f4xx_adc.c **** {
 123              		.loc 1 229 0
 124 0004 F0B4     		push	{r4, r5, r6, r7}	@
 125              	.LCFI1:
 126              		.cfi_def_cfa_offset 16
 127              		.cfi_offset 4, -16
 128              		.cfi_offset 5, -12
 129              		.cfi_offset 6, -8
 130              		.cfi_offset 7, -4
 247:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 131              		.loc 1 247 0
 132 0006 22F0407C 		bic	ip, r2, #50331648	@ tmp164, tmpreg1,
 133              		.loc 1 252 0
 134 000a 0E68     		ldr	r6, [r1, #0]	@ ADC_InitStruct_6(D)->ADC_Resolution, ADC_InitStruct_6(D)->ADC_Resolution
 253:cmsis/device/stm32f4xx_adc.c ****                                    ADC_InitStruct->ADC_Resolution);
 254:cmsis/device/stm32f4xx_adc.c ****   /* Write to ADCx CR1 */
 255:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 256:cmsis/device/stm32f4xx_adc.c ****   /*---------------------------- ADCx CR2 Configuration -----------------*/
 257:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADCx CR2 value */
 258:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 259:cmsis/device/stm32f4xx_adc.c ****   
 260:cmsis/device/stm32f4xx_adc.c ****   /* Clear CONT, ALIGN, EXTEN and EXTSEL bits */
 261:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 262:cmsis/device/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 8


 263:cmsis/device/stm32f4xx_adc.c ****   /* Configure ADCx: external trigger event and edge, data alignment and 
 264:cmsis/device/stm32f4xx_adc.c ****      continuous conversion mode */
 265:cmsis/device/stm32f4xx_adc.c ****   /* Set ALIGN bit according to ADC_DataAlign value */
 266:cmsis/device/stm32f4xx_adc.c ****   /* Set EXTEN bits according to ADC_ExternalTrigConvEdge value */ 
 267:cmsis/device/stm32f4xx_adc.c ****   /* Set EXTSEL bits according to ADC_ExternalTrigConv value */
 268:cmsis/device/stm32f4xx_adc.c ****   /* Set CONT bit according to ADC_ContinuousConvMode value */
 269:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 135              		.loc 1 269 0
 136 000c CD68     		ldr	r5, [r1, #12]	@ ADC_InitStruct_6(D)->ADC_ExternalTrigConv, ADC_InitStruct_6(D)->ADC_ExternalTr
 137 000e 0C69     		ldr	r4, [r1, #16]	@ ADC_InitStruct_6(D)->ADC_DataAlign, ADC_InitStruct_6(D)->ADC_DataAlign
 270:cmsis/device/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 271:cmsis/device/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConvEdge | \
 272:cmsis/device/stm32f4xx_adc.c ****                         ((uint32_t)ADC_InitStruct->ADC_ContinuousConvMode << 1));
 138              		.loc 1 272 0
 139 0010 4F79     		ldrb	r7, [r1, #5]	@ zero_extendqisi2	@ ADC_InitStruct_6(D)->ADC_ContinuousConvMode, ADC_InitStruct
 247:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR1_CLEAR_MASK;
 140              		.loc 1 247 0
 141 0012 2CF48072 		bic	r2, ip, #256	@ tmp163, tmp164,
 142              	.LVL4:
 252:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(((uint32_t)ADC_InitStruct->ADC_ScanConvMode << 8) | \
 143              		.loc 1 252 0
 144 0016 1643     		orrs	r6, r6, r2	@, D.6894, ADC_InitStruct_6(D)->ADC_Resolution, tmp163
 145 0018 46EA0323 		orr	r3, r6, r3, lsl #8	@, tmpreg1, D.6894, ADC_InitStruct_6(D)->ADC_ScanConvMode,
 146              	.LVL5:
 255:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 147              		.loc 1 255 0
 148 001c 4360     		str	r3, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 258:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR2;
 149              		.loc 1 258 0
 150 001e 8668     		ldr	r6, [r0, #8]	@ tmpreg1, ADCx_3(D)->CR2
 151              	.LVL6:
 269:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 152              		.loc 1 269 0
 153 0020 2C43     		orrs	r4, r4, r5	@, tmp168, ADC_InitStruct_6(D)->ADC_DataAlign, ADC_InitStruct_6(D)->ADC_ExternalTr
 261:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 154              		.loc 1 261 0
 155 0022 4FF2FD73 		movw	r3, #63485	@ tmp173,
 270:cmsis/device/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 156              		.loc 1 270 0
 157 0026 8D68     		ldr	r5, [r1, #8]	@, ADC_InitStruct_6(D)->ADC_ExternalTrigConvEdge
 261:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 158              		.loc 1 261 0
 159 0028 CCF2FF03 		movt	r3, 49407	@ tmp173,
 270:cmsis/device/stm32f4xx_adc.c ****                         ADC_InitStruct->ADC_ExternalTrigConv | 
 160              		.loc 1 270 0
 161 002c 44EA0502 		orr	r2, r4, r5	@ tmp171, tmp168,
 261:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR2_CLEAR_MASK;
 162              		.loc 1 261 0
 163 0030 3340     		ands	r3, r3, r6	@, tmp173, tmp173, tmpreg1
 269:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_InitStruct->ADC_DataAlign | \
 164              		.loc 1 269 0
 165 0032 1343     		orrs	r3, r3, r2	@, D.6903, tmp173, tmp171
 166 0034 43EA4702 		orr	r2, r3, r7, lsl #1	@, tmpreg1, D.6903, ADC_InitStruct_6(D)->ADC_ContinuousConvMode,
 167              	.LVL7:
 273:cmsis/device/stm32f4xx_adc.c ****                         
 274:cmsis/device/stm32f4xx_adc.c ****   /* Write to ADCx CR2 */
 275:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg1;
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 9


 168              		.loc 1 275 0
 169 0038 8260     		str	r2, [r0, #8]	@ tmpreg1, ADCx_3(D)->CR2
 276:cmsis/device/stm32f4xx_adc.c ****   /*---------------------------- ADCx SQR1 Configuration -----------------*/
 277:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADCx SQR1 value */
 278:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 279:cmsis/device/stm32f4xx_adc.c ****   
 280:cmsis/device/stm32f4xx_adc.c ****   /* Clear L bits */
 281:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 282:cmsis/device/stm32f4xx_adc.c ****   
 283:cmsis/device/stm32f4xx_adc.c ****   /* Configure ADCx: regular channel sequence length */
 284:cmsis/device/stm32f4xx_adc.c ****   /* Set L bits according to ADC_NbrOfConversion value */
 285:cmsis/device/stm32f4xx_adc.c ****   tmpreg2 |= (uint8_t)(ADC_InitStruct->ADC_NbrOfConversion - (uint8_t)1);
 170              		.loc 1 285 0
 171 003a 097D     		ldrb	r1, [r1, #20]	@ zero_extendqisi2	@ ADC_InitStruct_6(D)->ADC_NbrOfConversion, ADC_InitStruct_6
 172              	.LVL8:
 278:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->SQR1;
 173              		.loc 1 278 0
 174 003c C26A     		ldr	r2, [r0, #44]	@ tmpreg1, ADCx_3(D)->SQR1
 175              	.LVL9:
 176              		.loc 1 285 0
 177 003e 4B1E     		subs	r3, r1, #1	@ tmp179, ADC_InitStruct_6(D)->ADC_NbrOfConversion,
 281:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= SQR1_L_RESET;
 178              		.loc 1 281 0
 179 0040 22F47001 		bic	r1, r2, #15728640	@ tmpreg1, tmpreg1,
 180              	.LVL10:
 286:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= ((uint32_t)tmpreg2 << 20);
 181              		.loc 1 286 0
 182 0044 DAB2     		uxtb	r2, r3	@ tmp180, tmp179
 183 0046 41EA0253 		orr	r3, r1, r2, lsl #20	@, tmpreg1, tmpreg1, tmp180,
 184              	.LVL11:
 287:cmsis/device/stm32f4xx_adc.c ****   
 288:cmsis/device/stm32f4xx_adc.c ****   /* Write to ADCx SQR1 */
 289:cmsis/device/stm32f4xx_adc.c ****   ADCx->SQR1 = tmpreg1;
 185              		.loc 1 289 0
 186 004a C362     		str	r3, [r0, #44]	@ tmpreg1, ADCx_3(D)->SQR1
 290:cmsis/device/stm32f4xx_adc.c **** }
 187              		.loc 1 290 0
 188 004c F0BC     		pop	{r4, r5, r6, r7}
 189 004e 7047     		bx	lr
 190              		.cfi_endproc
 191              	.LFE111:
 192              		.size	ADC_Init, .-ADC_Init
 193              		.section	.text.ADC_StructInit,"ax",%progbits
 194              		.align	2
 195              		.global	ADC_StructInit
 196              		.thumb
 197              		.thumb_func
 198              		.type	ADC_StructInit, %function
 199              	ADC_StructInit:
 200              	.LFB112:
 291:cmsis/device/stm32f4xx_adc.c **** 
 292:cmsis/device/stm32f4xx_adc.c **** /**
 293:cmsis/device/stm32f4xx_adc.c ****   * @brief  Fills each ADC_InitStruct member with its default value.
 294:cmsis/device/stm32f4xx_adc.c ****   * @note   This function is used to initialize the global features of the ADC ( 
 295:cmsis/device/stm32f4xx_adc.c ****   *         Resolution and Data Alignment), however, the rest of the configuration
 296:cmsis/device/stm32f4xx_adc.c ****   *         parameters are specific to the regular channels group (scan mode 
 297:cmsis/device/stm32f4xx_adc.c ****   *         activation, continuous mode activation, External trigger source and 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 10


 298:cmsis/device/stm32f4xx_adc.c ****   *         edge, number of conversion in the regular channels group sequencer).  
 299:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_InitStruct: pointer to an ADC_InitTypeDef structure which will 
 300:cmsis/device/stm32f4xx_adc.c ****   *         be initialized.
 301:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 302:cmsis/device/stm32f4xx_adc.c ****   */
 303:cmsis/device/stm32f4xx_adc.c **** void ADC_StructInit(ADC_InitTypeDef* ADC_InitStruct)
 304:cmsis/device/stm32f4xx_adc.c **** {
 201              		.loc 1 304 0
 202              		.cfi_startproc
 203              		@ args = 0, pretend = 0, frame = 0
 204              		@ frame_needed = 0, uses_anonymous_args = 0
 205              		@ link register save eliminated.
 206              	.LVL12:
 305:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 306:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 207              		.loc 1 306 0
 208 0000 0023     		movs	r3, #0	@ tmp135,
 307:cmsis/device/stm32f4xx_adc.c **** 
 308:cmsis/device/stm32f4xx_adc.c ****   /* initialize the ADC_ScanConvMode member */
 309:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 310:cmsis/device/stm32f4xx_adc.c **** 
 311:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_ContinuousConvMode member */
 312:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 313:cmsis/device/stm32f4xx_adc.c **** 
 314:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConvEdge member */
 315:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 316:cmsis/device/stm32f4xx_adc.c **** 
 317:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_ExternalTrigConv member */
 318:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 319:cmsis/device/stm32f4xx_adc.c **** 
 320:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_DataAlign member */
 321:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 322:cmsis/device/stm32f4xx_adc.c **** 
 323:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_NbrOfConversion member */
 324:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_NbrOfConversion = 1;
 209              		.loc 1 324 0
 210 0002 0121     		movs	r1, #1	@ tmp143,
 306:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_Resolution = ADC_Resolution_12b;
 211              		.loc 1 306 0
 212 0004 0360     		str	r3, [r0, #0]	@ tmp135, ADC_InitStruct_1(D)->ADC_Resolution
 309:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ScanConvMode = DISABLE;
 213              		.loc 1 309 0
 214 0006 0371     		strb	r3, [r0, #4]	@ tmp135, ADC_InitStruct_1(D)->ADC_ScanConvMode
 312:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ContinuousConvMode = DISABLE;
 215              		.loc 1 312 0
 216 0008 4371     		strb	r3, [r0, #5]	@ tmp135, ADC_InitStruct_1(D)->ADC_ContinuousConvMode
 315:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConvEdge = ADC_ExternalTrigConvEdge_None;
 217              		.loc 1 315 0
 218 000a 8360     		str	r3, [r0, #8]	@ tmp135, ADC_InitStruct_1(D)->ADC_ExternalTrigConvEdge
 318:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_ExternalTrigConv = ADC_ExternalTrigConv_T1_CC1;
 219              		.loc 1 318 0
 220 000c C360     		str	r3, [r0, #12]	@ tmp135, ADC_InitStruct_1(D)->ADC_ExternalTrigConv
 321:cmsis/device/stm32f4xx_adc.c ****   ADC_InitStruct->ADC_DataAlign = ADC_DataAlign_Right;
 221              		.loc 1 321 0
 222 000e 0361     		str	r3, [r0, #16]	@ tmp135, ADC_InitStruct_1(D)->ADC_DataAlign
 223              		.loc 1 324 0
 224 0010 0175     		strb	r1, [r0, #20]	@ tmp143, ADC_InitStruct_1(D)->ADC_NbrOfConversion
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 11


 225 0012 7047     		bx	lr	@
 226              		.cfi_endproc
 227              	.LFE112:
 228              		.size	ADC_StructInit, .-ADC_StructInit
 229              		.section	.text.ADC_CommonInit,"ax",%progbits
 230              		.align	2
 231              		.global	ADC_CommonInit
 232              		.thumb
 233              		.thumb_func
 234              		.type	ADC_CommonInit, %function
 235              	ADC_CommonInit:
 236              	.LFB113:
 325:cmsis/device/stm32f4xx_adc.c **** }
 326:cmsis/device/stm32f4xx_adc.c **** 
 327:cmsis/device/stm32f4xx_adc.c **** /**
 328:cmsis/device/stm32f4xx_adc.c ****   * @brief  Initializes the ADCs peripherals according to the specified parameters 
 329:cmsis/device/stm32f4xx_adc.c ****   *         in the ADC_CommonInitStruct.
 330:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure 
 331:cmsis/device/stm32f4xx_adc.c ****   *         that contains the configuration information for  All ADCs peripherals.
 332:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 333:cmsis/device/stm32f4xx_adc.c ****   */
 334:cmsis/device/stm32f4xx_adc.c **** void ADC_CommonInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 335:cmsis/device/stm32f4xx_adc.c **** {
 237              		.loc 1 335 0
 238              		.cfi_startproc
 239              		@ args = 0, pretend = 0, frame = 0
 240              		@ frame_needed = 0, uses_anonymous_args = 0
 241              		@ link register save eliminated.
 242              	.LVL13:
 243 0000 70B4     		push	{r4, r5, r6}	@
 244              	.LCFI2:
 245              		.cfi_def_cfa_offset 12
 246              		.cfi_offset 4, -12
 247              		.cfi_offset 5, -8
 248              		.cfi_offset 6, -4
 336:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 337:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 338:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_MODE(ADC_CommonInitStruct->ADC_Mode));
 339:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_PRESCALER(ADC_CommonInitStruct->ADC_Prescaler));
 340:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_DMA_ACCESS_MODE(ADC_CommonInitStruct->ADC_DMAAccessMode));
 341:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLING_DELAY(ADC_CommonInitStruct->ADC_TwoSamplingDelay));
 342:cmsis/device/stm32f4xx_adc.c ****   /*---------------------------- ADC CCR Configuration -----------------*/
 343:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADC CCR value */
 344:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 249              		.loc 1 344 0
 250 0002 4FF40C52 		mov	r2, #8960	@ tmp145,
 345:cmsis/device/stm32f4xx_adc.c ****   
 346:cmsis/device/stm32f4xx_adc.c ****   /* Clear MULTI, DELAY, DMA and ADCPRE bits */
 347:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 348:cmsis/device/stm32f4xx_adc.c ****   
 349:cmsis/device/stm32f4xx_adc.c ****   /* Configure ADCx: Multi mode, Delay between two sampling time, ADC prescaler,
 350:cmsis/device/stm32f4xx_adc.c ****      and DMA access mode for multimode */
 351:cmsis/device/stm32f4xx_adc.c ****   /* Set MULTI bits according to ADC_Mode value */
 352:cmsis/device/stm32f4xx_adc.c ****   /* Set ADCPRE bits according to ADC_Prescaler value */
 353:cmsis/device/stm32f4xx_adc.c ****   /* Set DMA bits according to ADC_DMAAccessMode value */
 354:cmsis/device/stm32f4xx_adc.c ****   /* Set DELAY bits according to ADC_TwoSamplingDelay value */    
 355:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 12


 251              		.loc 1 355 0
 252 0006 90E84200 		ldmia	r0, {r1, r6}	@ ADC_CommonInitStruct,,
 344:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 253              		.loc 1 344 0
 254 000a C4F20102 		movt	r2, 16385	@ tmp145,
 356:cmsis/device/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_Prescaler | 
 255              		.loc 1 356 0
 256 000e 8568     		ldr	r5, [r0, #8]	@ ADC_CommonInitStruct_5(D)->ADC_DMAAccessMode, ADC_CommonInitStruct_5(D)->ADC_DM
 344:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADC->CCR;
 257              		.loc 1 344 0
 258 0010 5468     		ldr	r4, [r2, #4]	@ tmpreg1, MEM[(struct ADC_Common_TypeDef *)1073816320B].CCR
 259              	.LVL14:
 355:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 260              		.loc 1 355 0
 261 0012 C068     		ldr	r0, [r0, #12]	@ ADC_CommonInitStruct_5(D)->ADC_TwoSamplingDelay, ADC_CommonInitStruct_5(D)->AD
 262              	.LVL15:
 347:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 263              		.loc 1 347 0
 264 0014 43F2E003 		movw	r3, #12512	@ tmpreg1,
 355:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 265              		.loc 1 355 0
 266 0018 3143     		orrs	r1, r1, r6	@, tmp147, ADC_CommonInitStruct_5(D)->ADC_Mode, ADC_CommonInitStruct_5(D)->ADC_Pre
 347:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 267              		.loc 1 347 0
 268 001a CFF6FC73 		movt	r3, 65532	@ tmpreg1,
 269              	.LVL16:
 270              		.loc 1 356 0
 271 001e 2943     		orrs	r1, r1, r5	@, tmp150, tmp147, ADC_CommonInitStruct_5(D)->ADC_DMAAccessMode
 347:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR_CLEAR_MASK;
 272              		.loc 1 347 0
 273 0020 2340     		ands	r3, r3, r4	@, tmpreg1, tmpreg1, tmpreg1
 274              	.LVL17:
 355:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= (uint32_t)(ADC_CommonInitStruct->ADC_Mode | 
 275              		.loc 1 355 0
 276 0022 0143     		orrs	r1, r1, r0	@, tmp152, tmp150, ADC_CommonInitStruct_5(D)->ADC_TwoSamplingDelay
 277 0024 41EA0300 		orr	r0, r1, r3	@ tmpreg1, tmp152, tmpreg1
 278              	.LVL18:
 357:cmsis/device/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_DMAAccessMode | 
 358:cmsis/device/stm32f4xx_adc.c ****                         ADC_CommonInitStruct->ADC_TwoSamplingDelay);
 359:cmsis/device/stm32f4xx_adc.c ****                         
 360:cmsis/device/stm32f4xx_adc.c ****   /* Write to ADC CCR */
 361:cmsis/device/stm32f4xx_adc.c ****   ADC->CCR = tmpreg1;
 279              		.loc 1 361 0
 280 0028 5060     		str	r0, [r2, #4]	@ tmpreg1, MEM[(struct ADC_Common_TypeDef *)1073816320B].CCR
 362:cmsis/device/stm32f4xx_adc.c **** }
 281              		.loc 1 362 0
 282 002a 70BC     		pop	{r4, r5, r6}
 283 002c 7047     		bx	lr
 284              		.cfi_endproc
 285              	.LFE113:
 286              		.size	ADC_CommonInit, .-ADC_CommonInit
 287 002e 00BF     		.section	.text.ADC_CommonStructInit,"ax",%progbits
 288              		.align	2
 289              		.global	ADC_CommonStructInit
 290              		.thumb
 291              		.thumb_func
 292              		.type	ADC_CommonStructInit, %function
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 13


 293              	ADC_CommonStructInit:
 294              	.LFB114:
 363:cmsis/device/stm32f4xx_adc.c **** 
 364:cmsis/device/stm32f4xx_adc.c **** /**
 365:cmsis/device/stm32f4xx_adc.c ****   * @brief  Fills each ADC_CommonInitStruct member with its default value.
 366:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_CommonInitStruct: pointer to an ADC_CommonInitTypeDef structure
 367:cmsis/device/stm32f4xx_adc.c ****   *         which will be initialized.
 368:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 369:cmsis/device/stm32f4xx_adc.c ****   */
 370:cmsis/device/stm32f4xx_adc.c **** void ADC_CommonStructInit(ADC_CommonInitTypeDef* ADC_CommonInitStruct)
 371:cmsis/device/stm32f4xx_adc.c **** {
 295              		.loc 1 371 0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299              		@ link register save eliminated.
 300              	.LVL19:
 372:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_Mode member */
 373:cmsis/device/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Mode = ADC_Mode_Independent;
 301              		.loc 1 373 0
 302 0000 0023     		movs	r3, #0	@ tmp135,
 303 0002 0360     		str	r3, [r0, #0]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_Mode
 374:cmsis/device/stm32f4xx_adc.c **** 
 375:cmsis/device/stm32f4xx_adc.c ****   /* initialize the ADC_Prescaler member */
 376:cmsis/device/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_Prescaler = ADC_Prescaler_Div2;
 304              		.loc 1 376 0
 305 0004 4360     		str	r3, [r0, #4]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_Prescaler
 377:cmsis/device/stm32f4xx_adc.c **** 
 378:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_DMAAccessMode member */
 379:cmsis/device/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_DMAAccessMode = ADC_DMAAccessMode_Disabled;
 306              		.loc 1 379 0
 307 0006 8360     		str	r3, [r0, #8]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_DMAAccessMode
 380:cmsis/device/stm32f4xx_adc.c **** 
 381:cmsis/device/stm32f4xx_adc.c ****   /* Initialize the ADC_TwoSamplingDelay member */
 382:cmsis/device/stm32f4xx_adc.c ****   ADC_CommonInitStruct->ADC_TwoSamplingDelay = ADC_TwoSamplingDelay_5Cycles;
 308              		.loc 1 382 0
 309 0008 C360     		str	r3, [r0, #12]	@ tmp135, ADC_CommonInitStruct_1(D)->ADC_TwoSamplingDelay
 310 000a 7047     		bx	lr	@
 311              		.cfi_endproc
 312              	.LFE114:
 313              		.size	ADC_CommonStructInit, .-ADC_CommonStructInit
 314              		.section	.text.ADC_Cmd,"ax",%progbits
 315              		.align	2
 316              		.global	ADC_Cmd
 317              		.thumb
 318              		.thumb_func
 319              		.type	ADC_Cmd, %function
 320              	ADC_Cmd:
 321              	.LFB115:
 383:cmsis/device/stm32f4xx_adc.c **** }
 384:cmsis/device/stm32f4xx_adc.c **** 
 385:cmsis/device/stm32f4xx_adc.c **** /**
 386:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC peripheral.
 387:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 388:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the ADCx peripheral. 
 389:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 390:cmsis/device/stm32f4xx_adc.c ****   * @retval None
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 14


 391:cmsis/device/stm32f4xx_adc.c ****   */
 392:cmsis/device/stm32f4xx_adc.c **** void ADC_Cmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 393:cmsis/device/stm32f4xx_adc.c **** {
 322              		.loc 1 393 0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
 327              	.LVL20:
 394:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 395:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 396:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 397:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 398:cmsis/device/stm32f4xx_adc.c ****   {
 399:cmsis/device/stm32f4xx_adc.c ****     /* Set the ADON bit to wake up the ADC from power down mode */
 400:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_ADON;
 328              		.loc 1 400 0
 329 0000 8368     		ldr	r3, [r0, #8]	@ D.6877,
 397:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 330              		.loc 1 397 0
 331 0002 19B9     		cbnz	r1, .L10	@ NewState,
 401:cmsis/device/stm32f4xx_adc.c ****   }
 402:cmsis/device/stm32f4xx_adc.c ****   else
 403:cmsis/device/stm32f4xx_adc.c ****   {
 404:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC peripheral */
 405:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_ADON);
 332              		.loc 1 405 0
 333 0004 23F00101 		bic	r1, r3, #1	@ D.6881, D.6880,
 334              	.LVL21:
 335 0008 8160     		str	r1, [r0, #8]	@ D.6881,
 336 000a 7047     		bx	lr	@
 337              	.LVL22:
 338              	.L10:
 400:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_ADON;
 339              		.loc 1 400 0
 340 000c 43F00102 		orr	r2, r3, #1	@ D.6878, D.6877,
 341 0010 8260     		str	r2, [r0, #8]	@ D.6878,
 342 0012 7047     		bx	lr	@
 343              		.cfi_endproc
 344              	.LFE115:
 345              		.size	ADC_Cmd, .-ADC_Cmd
 346              		.section	.text.ADC_AnalogWatchdogCmd,"ax",%progbits
 347              		.align	2
 348              		.global	ADC_AnalogWatchdogCmd
 349              		.thumb
 350              		.thumb_func
 351              		.type	ADC_AnalogWatchdogCmd, %function
 352              	ADC_AnalogWatchdogCmd:
 353              	.LFB116:
 406:cmsis/device/stm32f4xx_adc.c ****   }
 407:cmsis/device/stm32f4xx_adc.c **** }
 408:cmsis/device/stm32f4xx_adc.c **** /**
 409:cmsis/device/stm32f4xx_adc.c ****   * @}
 410:cmsis/device/stm32f4xx_adc.c ****   */
 411:cmsis/device/stm32f4xx_adc.c **** 
 412:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group2 Analog Watchdog configuration functions
 413:cmsis/device/stm32f4xx_adc.c ****  *  @brief    Analog Watchdog configuration functions 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 15


 414:cmsis/device/stm32f4xx_adc.c ****  *
 415:cmsis/device/stm32f4xx_adc.c **** @verbatim   
 416:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
 417:cmsis/device/stm32f4xx_adc.c ****                     Analog Watchdog configuration functions
 418:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
 419:cmsis/device/stm32f4xx_adc.c **** 
 420:cmsis/device/stm32f4xx_adc.c ****   This section provides functions allowing to configure the Analog Watchdog
 421:cmsis/device/stm32f4xx_adc.c ****   (AWD) feature in the ADC.
 422:cmsis/device/stm32f4xx_adc.c ****   
 423:cmsis/device/stm32f4xx_adc.c ****   A typical configuration Analog Watchdog is done following these steps :
 424:cmsis/device/stm32f4xx_adc.c ****    1. the ADC guarded channel(s) is (are) selected using the 
 425:cmsis/device/stm32f4xx_adc.c ****       ADC_AnalogWatchdogSingleChannelConfig() function.
 426:cmsis/device/stm32f4xx_adc.c ****    2. The Analog watchdog lower and higher threshold are configured using the  
 427:cmsis/device/stm32f4xx_adc.c ****      ADC_AnalogWatchdogThresholdsConfig() function.
 428:cmsis/device/stm32f4xx_adc.c ****    3. The Analog watchdog is enabled and configured to enable the check, on one
 429:cmsis/device/stm32f4xx_adc.c ****       or more channels, using the  ADC_AnalogWatchdogCmd() function.
 430:cmsis/device/stm32f4xx_adc.c **** 
 431:cmsis/device/stm32f4xx_adc.c **** @endverbatim
 432:cmsis/device/stm32f4xx_adc.c ****   * @{
 433:cmsis/device/stm32f4xx_adc.c ****   */
 434:cmsis/device/stm32f4xx_adc.c ****   
 435:cmsis/device/stm32f4xx_adc.c **** /**
 436:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the analog watchdog on single/all regular or 
 437:cmsis/device/stm32f4xx_adc.c ****   *         injected channels
 438:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 439:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_AnalogWatchdog: the ADC analog watchdog configuration.
 440:cmsis/device/stm32f4xx_adc.c ****   *         This parameter can be one of the following values:
 441:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegEnable: Analog watchdog on a single regular channel
 442:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleInjecEnable: Analog watchdog on a single injected chan
 443:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_SingleRegOrInjecEnable: Analog watchdog on a single regular 
 444:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegEnable: Analog watchdog on all regular channel
 445:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllInjecEnable: Analog watchdog on all injected channel
 446:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_AllRegAllInjecEnable: Analog watchdog on all regular and inj
 447:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_AnalogWatchdog_None: No channel guarded by the analog watchdog
 448:cmsis/device/stm32f4xx_adc.c ****   * @retval None	  
 449:cmsis/device/stm32f4xx_adc.c ****   */
 450:cmsis/device/stm32f4xx_adc.c **** void ADC_AnalogWatchdogCmd(ADC_TypeDef* ADCx, uint32_t ADC_AnalogWatchdog)
 451:cmsis/device/stm32f4xx_adc.c **** {
 354              		.loc 1 451 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 0, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359              	.LVL23:
 452:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 453:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 454:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 455:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ANALOG_WATCHDOG(ADC_AnalogWatchdog));
 456:cmsis/device/stm32f4xx_adc.c ****   
 457:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
 458:cmsis/device/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 360              		.loc 1 458 0
 361 0000 4368     		ldr	r3, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 362              	.LVL24:
 459:cmsis/device/stm32f4xx_adc.c ****   
 460:cmsis/device/stm32f4xx_adc.c ****   /* Clear AWDEN, JAWDEN and AWDSGL bits */
 461:cmsis/device/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDMode_RESET;
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 16


 363              		.loc 1 461 0
 364 0002 23F44002 		bic	r2, r3, #12582912	@ tmp139, tmpreg,
 365 0006 22F40073 		bic	r3, r2, #512	@ tmpreg, tmp139,
 366              	.LVL25:
 462:cmsis/device/stm32f4xx_adc.c ****   
 463:cmsis/device/stm32f4xx_adc.c ****   /* Set the analog watchdog enable mode */
 464:cmsis/device/stm32f4xx_adc.c ****   tmpreg |= ADC_AnalogWatchdog;
 367              		.loc 1 464 0
 368 000a 1943     		orrs	r1, r1, r3	@, tmpreg, ADC_AnalogWatchdog, tmpreg
 369              	.LVL26:
 465:cmsis/device/stm32f4xx_adc.c ****   
 466:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
 467:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 370              		.loc 1 467 0
 371 000c 4160     		str	r1, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 372 000e 7047     		bx	lr	@
 373              		.cfi_endproc
 374              	.LFE116:
 375              		.size	ADC_AnalogWatchdogCmd, .-ADC_AnalogWatchdogCmd
 376              		.section	.text.ADC_AnalogWatchdogThresholdsConfig,"ax",%progbits
 377              		.align	2
 378              		.global	ADC_AnalogWatchdogThresholdsConfig
 379              		.thumb
 380              		.thumb_func
 381              		.type	ADC_AnalogWatchdogThresholdsConfig, %function
 382              	ADC_AnalogWatchdogThresholdsConfig:
 383              	.LFB117:
 468:cmsis/device/stm32f4xx_adc.c **** }
 469:cmsis/device/stm32f4xx_adc.c **** 
 470:cmsis/device/stm32f4xx_adc.c **** /**
 471:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures the high and low thresholds of the analog watchdog.
 472:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 473:cmsis/device/stm32f4xx_adc.c ****   * @param  HighThreshold: the ADC analog watchdog High threshold value.
 474:cmsis/device/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 475:cmsis/device/stm32f4xx_adc.c ****   * @param  LowThreshold:  the ADC analog watchdog Low threshold value.
 476:cmsis/device/stm32f4xx_adc.c ****   *          This parameter must be a 12-bit value.
 477:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 478:cmsis/device/stm32f4xx_adc.c ****   */
 479:cmsis/device/stm32f4xx_adc.c **** void ADC_AnalogWatchdogThresholdsConfig(ADC_TypeDef* ADCx, uint16_t HighThreshold,
 480:cmsis/device/stm32f4xx_adc.c ****                                         uint16_t LowThreshold)
 481:cmsis/device/stm32f4xx_adc.c **** {
 384              		.loc 1 481 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389              	.LVL27:
 482:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 483:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 484:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(HighThreshold));
 485:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_THRESHOLD(LowThreshold));
 486:cmsis/device/stm32f4xx_adc.c ****   
 487:cmsis/device/stm32f4xx_adc.c ****   /* Set the ADCx high threshold */
 488:cmsis/device/stm32f4xx_adc.c ****   ADCx->HTR = HighThreshold;
 390              		.loc 1 488 0
 391 0000 4162     		str	r1, [r0, #36]	@ HighThreshold, ADCx_3(D)->HTR
 489:cmsis/device/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 17


 490:cmsis/device/stm32f4xx_adc.c ****   /* Set the ADCx low threshold */
 491:cmsis/device/stm32f4xx_adc.c ****   ADCx->LTR = LowThreshold;
 392              		.loc 1 491 0
 393 0002 8262     		str	r2, [r0, #40]	@ LowThreshold, ADCx_3(D)->LTR
 394 0004 7047     		bx	lr	@
 395              		.cfi_endproc
 396              	.LFE117:
 397              		.size	ADC_AnalogWatchdogThresholdsConfig, .-ADC_AnalogWatchdogThresholdsConfig
 398 0006 00BF     		.section	.text.ADC_AnalogWatchdogSingleChannelConfig,"ax",%progbits
 399              		.align	2
 400              		.global	ADC_AnalogWatchdogSingleChannelConfig
 401              		.thumb
 402              		.thumb_func
 403              		.type	ADC_AnalogWatchdogSingleChannelConfig, %function
 404              	ADC_AnalogWatchdogSingleChannelConfig:
 405              	.LFB118:
 492:cmsis/device/stm32f4xx_adc.c **** }
 493:cmsis/device/stm32f4xx_adc.c **** 
 494:cmsis/device/stm32f4xx_adc.c **** /**
 495:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures the analog watchdog guarded single channel
 496:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 497:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure for the analog watchdog. 
 498:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 499:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 500:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 501:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 502:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 503:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 504:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 505:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 506:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 507:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 508:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 509:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 510:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 511:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 512:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 513:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 514:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 515:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 516:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 517:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected
 518:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 519:cmsis/device/stm32f4xx_adc.c ****   */
 520:cmsis/device/stm32f4xx_adc.c **** void ADC_AnalogWatchdogSingleChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel)
 521:cmsis/device/stm32f4xx_adc.c **** {
 406              		.loc 1 521 0
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 0
 409              		@ frame_needed = 0, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411              	.LVL28:
 522:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
 523:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 524:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 525:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 526:cmsis/device/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 18


 527:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
 528:cmsis/device/stm32f4xx_adc.c ****   tmpreg = ADCx->CR1;
 412              		.loc 1 528 0
 413 0000 4368     		ldr	r3, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 414              	.LVL29:
 529:cmsis/device/stm32f4xx_adc.c ****   
 530:cmsis/device/stm32f4xx_adc.c ****   /* Clear the Analog watchdog channel select bits */
 531:cmsis/device/stm32f4xx_adc.c ****   tmpreg &= CR1_AWDCH_RESET;
 415              		.loc 1 531 0
 416 0002 23F01F02 		bic	r2, r3, #31	@ tmpreg, tmpreg,
 417              	.LVL30:
 532:cmsis/device/stm32f4xx_adc.c ****   
 533:cmsis/device/stm32f4xx_adc.c ****   /* Set the Analog watchdog channel */
 534:cmsis/device/stm32f4xx_adc.c ****   tmpreg |= ADC_Channel;
 418              		.loc 1 534 0
 419 0006 1143     		orrs	r1, r1, r2	@, tmpreg, ADC_Channel, tmpreg
 420              	.LVL31:
 535:cmsis/device/stm32f4xx_adc.c ****   
 536:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
 537:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg;
 421              		.loc 1 537 0
 422 0008 4160     		str	r1, [r0, #4]	@ tmpreg, ADCx_2(D)->CR1
 423 000a 7047     		bx	lr	@
 424              		.cfi_endproc
 425              	.LFE118:
 426              		.size	ADC_AnalogWatchdogSingleChannelConfig, .-ADC_AnalogWatchdogSingleChannelConfig
 427              		.section	.text.ADC_TempSensorVrefintCmd,"ax",%progbits
 428              		.align	2
 429              		.global	ADC_TempSensorVrefintCmd
 430              		.thumb
 431              		.thumb_func
 432              		.type	ADC_TempSensorVrefintCmd, %function
 433              	ADC_TempSensorVrefintCmd:
 434              	.LFB119:
 538:cmsis/device/stm32f4xx_adc.c **** }
 539:cmsis/device/stm32f4xx_adc.c **** /**
 540:cmsis/device/stm32f4xx_adc.c ****   * @}
 541:cmsis/device/stm32f4xx_adc.c ****   */
 542:cmsis/device/stm32f4xx_adc.c **** 
 543:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group3 Temperature Sensor, Vrefint (Voltage Reference internal) 
 544:cmsis/device/stm32f4xx_adc.c ****  *            and VBAT (Voltage BATtery) management functions
 545:cmsis/device/stm32f4xx_adc.c ****  *  @brief   Temperature Sensor, Vrefint and VBAT management functions 
 546:cmsis/device/stm32f4xx_adc.c ****  *
 547:cmsis/device/stm32f4xx_adc.c **** @verbatim   
 548:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
 549:cmsis/device/stm32f4xx_adc.c ****                Temperature Sensor, Vrefint and VBAT management functions
 550:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
 551:cmsis/device/stm32f4xx_adc.c **** 
 552:cmsis/device/stm32f4xx_adc.c ****   This section provides functions allowing to enable/ disable the internal 
 553:cmsis/device/stm32f4xx_adc.c ****   connections between the ADC and the Temperature Sensor, the Vrefint and the
 554:cmsis/device/stm32f4xx_adc.c ****   Vbat sources.
 555:cmsis/device/stm32f4xx_adc.c ****      
 556:cmsis/device/stm32f4xx_adc.c ****   A typical configuration to get the Temperature sensor and Vrefint channels 
 557:cmsis/device/stm32f4xx_adc.c ****   voltages is done following these steps :
 558:cmsis/device/stm32f4xx_adc.c ****    1. Enable the internal connection of Temperature sensor and Vrefint sources 
 559:cmsis/device/stm32f4xx_adc.c ****       with the ADC channels using ADC_TempSensorVrefintCmd() function. 
 560:cmsis/device/stm32f4xx_adc.c ****    2. Select the ADC_Channel_TempSensor and/or ADC_Channel_Vrefint using 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 19


 561:cmsis/device/stm32f4xx_adc.c ****       ADC_RegularChannelConfig() or  ADC_InjectedChannelConfig() functions 
 562:cmsis/device/stm32f4xx_adc.c ****    3. Get the voltage values, using ADC_GetConversionValue() or  
 563:cmsis/device/stm32f4xx_adc.c ****       ADC_GetInjectedConversionValue().
 564:cmsis/device/stm32f4xx_adc.c **** 
 565:cmsis/device/stm32f4xx_adc.c ****   A typical configuration to get the VBAT channel voltage is done following 
 566:cmsis/device/stm32f4xx_adc.c ****   these steps :
 567:cmsis/device/stm32f4xx_adc.c ****    1. Enable the internal connection of VBAT source with the ADC channel using 
 568:cmsis/device/stm32f4xx_adc.c ****       ADC_VBATCmd() function. 
 569:cmsis/device/stm32f4xx_adc.c ****    2. Select the ADC_Channel_Vbat using ADC_RegularChannelConfig() or  
 570:cmsis/device/stm32f4xx_adc.c ****       ADC_InjectedChannelConfig() functions 
 571:cmsis/device/stm32f4xx_adc.c ****    3. Get the voltage value, using ADC_GetConversionValue() or  
 572:cmsis/device/stm32f4xx_adc.c ****       ADC_GetInjectedConversionValue().
 573:cmsis/device/stm32f4xx_adc.c ****  
 574:cmsis/device/stm32f4xx_adc.c **** @endverbatim
 575:cmsis/device/stm32f4xx_adc.c ****   * @{
 576:cmsis/device/stm32f4xx_adc.c ****   */
 577:cmsis/device/stm32f4xx_adc.c ****   
 578:cmsis/device/stm32f4xx_adc.c ****   
 579:cmsis/device/stm32f4xx_adc.c **** /**
 580:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the temperature sensor and Vrefint channels.
 581:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the temperature sensor and Vrefint channels.
 582:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 583:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 584:cmsis/device/stm32f4xx_adc.c ****   */
 585:cmsis/device/stm32f4xx_adc.c **** void ADC_TempSensorVrefintCmd(FunctionalState NewState)                
 586:cmsis/device/stm32f4xx_adc.c **** {
 435              		.loc 1 586 0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		@ link register save eliminated.
 440              	.LVL32:
 587:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 588:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 589:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 590:cmsis/device/stm32f4xx_adc.c ****   {
 591:cmsis/device/stm32f4xx_adc.c ****     /* Enable the temperature sensor and Vrefint channel*/
 592:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSVREFE;
 441              		.loc 1 592 0
 442 0000 4FF40C53 		mov	r3, #8960	@ tmp139,
 443 0004 C4F20103 		movt	r3, 16385	@ tmp139,
 444 0008 5A68     		ldr	r2, [r3, #4]	@ D.6867,
 589:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 445              		.loc 1 589 0
 446 000a 18B9     		cbnz	r0, .L17	@ NewState,
 593:cmsis/device/stm32f4xx_adc.c ****   }
 594:cmsis/device/stm32f4xx_adc.c ****   else
 595:cmsis/device/stm32f4xx_adc.c ****   {
 596:cmsis/device/stm32f4xx_adc.c ****     /* Disable the temperature sensor and Vrefint channel*/
 597:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_TSVREFE);
 447              		.loc 1 597 0
 448 000c 22F40000 		bic	r0, r2, #8388608	@ D.6871, D.6870,
 449              	.LVL33:
 450 0010 5860     		str	r0, [r3, #4]	@ D.6871,
 451 0012 7047     		bx	lr	@
 452              	.LVL34:
 453              	.L17:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 20


 592:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_TSVREFE;
 454              		.loc 1 592 0
 455 0014 42F40001 		orr	r1, r2, #8388608	@ D.6868, D.6867,
 456 0018 5960     		str	r1, [r3, #4]	@ D.6868,
 457 001a 7047     		bx	lr	@
 458              		.cfi_endproc
 459              	.LFE119:
 460              		.size	ADC_TempSensorVrefintCmd, .-ADC_TempSensorVrefintCmd
 461              		.section	.text.ADC_VBATCmd,"ax",%progbits
 462              		.align	2
 463              		.global	ADC_VBATCmd
 464              		.thumb
 465              		.thumb_func
 466              		.type	ADC_VBATCmd, %function
 467              	ADC_VBATCmd:
 468              	.LFB120:
 598:cmsis/device/stm32f4xx_adc.c ****   }
 599:cmsis/device/stm32f4xx_adc.c **** }
 600:cmsis/device/stm32f4xx_adc.c **** 
 601:cmsis/device/stm32f4xx_adc.c **** /**
 602:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the VBAT (Voltage Battery) channel.
 603:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the VBAT channel.
 604:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 605:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 606:cmsis/device/stm32f4xx_adc.c ****   */
 607:cmsis/device/stm32f4xx_adc.c **** void ADC_VBATCmd(FunctionalState NewState)                             
 608:cmsis/device/stm32f4xx_adc.c **** {
 469              		.loc 1 608 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 0
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473              		@ link register save eliminated.
 474              	.LVL35:
 609:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 610:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 611:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 612:cmsis/device/stm32f4xx_adc.c ****   {
 613:cmsis/device/stm32f4xx_adc.c ****     /* Enable the VBAT channel*/
 614:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATE;
 475              		.loc 1 614 0
 476 0000 4FF40C53 		mov	r3, #8960	@ tmp139,
 477 0004 C4F20103 		movt	r3, 16385	@ tmp139,
 478 0008 5A68     		ldr	r2, [r3, #4]	@ D.6859,
 611:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 479              		.loc 1 611 0
 480 000a 18B9     		cbnz	r0, .L21	@ NewState,
 615:cmsis/device/stm32f4xx_adc.c ****   }
 616:cmsis/device/stm32f4xx_adc.c ****   else
 617:cmsis/device/stm32f4xx_adc.c ****   {
 618:cmsis/device/stm32f4xx_adc.c ****     /* Disable the VBAT channel*/
 619:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_VBATE);
 481              		.loc 1 619 0
 482 000c 22F48000 		bic	r0, r2, #4194304	@ D.6863, D.6862,
 483              	.LVL36:
 484 0010 5860     		str	r0, [r3, #4]	@ D.6863,
 485 0012 7047     		bx	lr	@
 486              	.LVL37:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 21


 487              	.L21:
 614:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_VBATE;
 488              		.loc 1 614 0
 489 0014 42F48001 		orr	r1, r2, #4194304	@ D.6860, D.6859,
 490 0018 5960     		str	r1, [r3, #4]	@ D.6860,
 491 001a 7047     		bx	lr	@
 492              		.cfi_endproc
 493              	.LFE120:
 494              		.size	ADC_VBATCmd, .-ADC_VBATCmd
 495              		.section	.text.ADC_RegularChannelConfig,"ax",%progbits
 496              		.align	2
 497              		.global	ADC_RegularChannelConfig
 498              		.thumb
 499              		.thumb_func
 500              		.type	ADC_RegularChannelConfig, %function
 501              	ADC_RegularChannelConfig:
 502              	.LFB121:
 620:cmsis/device/stm32f4xx_adc.c ****   }
 621:cmsis/device/stm32f4xx_adc.c **** }
 622:cmsis/device/stm32f4xx_adc.c **** 
 623:cmsis/device/stm32f4xx_adc.c **** /**
 624:cmsis/device/stm32f4xx_adc.c ****   * @}
 625:cmsis/device/stm32f4xx_adc.c ****   */
 626:cmsis/device/stm32f4xx_adc.c **** 
 627:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group4 Regular Channels Configuration functions
 628:cmsis/device/stm32f4xx_adc.c ****  *  @brief   Regular Channels Configuration functions 
 629:cmsis/device/stm32f4xx_adc.c ****  *
 630:cmsis/device/stm32f4xx_adc.c **** @verbatim   
 631:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
 632:cmsis/device/stm32f4xx_adc.c ****                   Regular Channels Configuration functions
 633:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
 634:cmsis/device/stm32f4xx_adc.c **** 
 635:cmsis/device/stm32f4xx_adc.c ****   This section provides functions allowing to manage the ADC's regular channels,
 636:cmsis/device/stm32f4xx_adc.c ****   it is composed of 2 sub sections : 
 637:cmsis/device/stm32f4xx_adc.c ****   
 638:cmsis/device/stm32f4xx_adc.c ****   1. Configuration and management functions for regular channels: This subsection 
 639:cmsis/device/stm32f4xx_adc.c ****      provides functions allowing to configure the ADC regular channels :    
 640:cmsis/device/stm32f4xx_adc.c ****           - Configure the rank in the regular group sequencer for each channel
 641:cmsis/device/stm32f4xx_adc.c ****           - Configure the sampling time for each channel
 642:cmsis/device/stm32f4xx_adc.c ****           - select the conversion Trigger for regular channels
 643:cmsis/device/stm32f4xx_adc.c ****           - select the desired EOC event behavior configuration
 644:cmsis/device/stm32f4xx_adc.c ****           - Activate the continuous Mode  (*)
 645:cmsis/device/stm32f4xx_adc.c ****           - Activate the Discontinuous Mode 
 646:cmsis/device/stm32f4xx_adc.c ****      Please Note that the following features for regular channels are configurated
 647:cmsis/device/stm32f4xx_adc.c ****      using the ADC_Init() function : 
 648:cmsis/device/stm32f4xx_adc.c ****           - scan mode activation 
 649:cmsis/device/stm32f4xx_adc.c ****           - continuous mode activation (**) 
 650:cmsis/device/stm32f4xx_adc.c ****           - External trigger source  
 651:cmsis/device/stm32f4xx_adc.c ****           - External trigger edge 
 652:cmsis/device/stm32f4xx_adc.c ****           - number of conversion in the regular channels group sequencer.
 653:cmsis/device/stm32f4xx_adc.c ****      
 654:cmsis/device/stm32f4xx_adc.c ****      @note (*) and (**) are performing the same configuration
 655:cmsis/device/stm32f4xx_adc.c ****      
 656:cmsis/device/stm32f4xx_adc.c ****   2. Get the conversion data: This subsection provides an important function in 
 657:cmsis/device/stm32f4xx_adc.c ****      the ADC peripheral since it returns the converted data of the current 
 658:cmsis/device/stm32f4xx_adc.c ****      regular channel. When the Conversion value is read, the EOC Flag is 
 659:cmsis/device/stm32f4xx_adc.c ****      automatically cleared.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 22


 660:cmsis/device/stm32f4xx_adc.c ****      
 661:cmsis/device/stm32f4xx_adc.c ****      @note For multi ADC mode, the last ADC1, ADC2 and ADC3 regular conversions 
 662:cmsis/device/stm32f4xx_adc.c ****            results data (in the selected multi mode) can be returned in the same 
 663:cmsis/device/stm32f4xx_adc.c ****            time using ADC_GetMultiModeConversionValue() function. 
 664:cmsis/device/stm32f4xx_adc.c ****        
 665:cmsis/device/stm32f4xx_adc.c ****   
 666:cmsis/device/stm32f4xx_adc.c **** @endverbatim
 667:cmsis/device/stm32f4xx_adc.c ****   * @{
 668:cmsis/device/stm32f4xx_adc.c ****   */
 669:cmsis/device/stm32f4xx_adc.c **** /**
 670:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC regular channel its corresponding
 671:cmsis/device/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
 672:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 673:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
 674:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 675:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
 676:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
 677:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
 678:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
 679:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
 680:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
 681:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
 682:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
 683:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
 684:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
 685:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
 686:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
 687:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
 688:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
 689:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
 690:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
 691:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
 692:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
 693:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
 694:cmsis/device/stm32f4xx_adc.c ****   * @param  Rank: The rank in the regular group sequencer.
 695:cmsis/device/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 16.
 696:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
 697:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
 698:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
 699:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
 700:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
 701:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
 702:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
 703:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
 704:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
 705:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
 706:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 707:cmsis/device/stm32f4xx_adc.c ****   */
 708:cmsis/device/stm32f4xx_adc.c **** void ADC_RegularChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sam
 709:cmsis/device/stm32f4xx_adc.c **** {
 503              		.loc 1 709 0
 504              		.cfi_startproc
 505              		@ args = 0, pretend = 0, frame = 0
 506              		@ frame_needed = 0, uses_anonymous_args = 0
 507              		@ link register save eliminated.
 508              	.LVL38:
 710:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0;
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 23


 711:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 712:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 713:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
 714:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_RANK(Rank));
 715:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
 716:cmsis/device/stm32f4xx_adc.c ****   
 717:cmsis/device/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
 718:cmsis/device/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 509              		.loc 1 718 0
 510 0000 0929     		cmp	r1, #9	@ ADC_Channel,
 709:cmsis/device/stm32f4xx_adc.c **** {
 511              		.loc 1 709 0
 512 0002 70B4     		push	{r4, r5, r6}	@
 513              	.LCFI3:
 514              		.cfi_def_cfa_offset 12
 515              		.cfi_offset 4, -12
 516              		.cfi_offset 5, -8
 517              		.cfi_offset 6, -4
 518              		.loc 1 718 0
 519 0004 20D9     		bls	.L23	@,
 719:cmsis/device/stm32f4xx_adc.c ****   {
 720:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
 721:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 722:cmsis/device/stm32f4xx_adc.c ****     
 723:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 724:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3 * (ADC_Channel - 10));
 520              		.loc 1 724 0
 521 0006 01EB4104 		add	r4, r1, r1, lsl #1	@, tmp198, ADC_Channel, ADC_Channel,
 522 000a 1E3C     		subs	r4, r4, #30	@ D.6839, tmp198,
 721:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 523              		.loc 1 721 0
 524 000c C668     		ldr	r6, [r0, #12]	@ tmpreg1, ADCx_4(D)->SMPR1
 525              	.LVL39:
 526              		.loc 1 724 0
 527 000e 0725     		movs	r5, #7	@ tmp200,
 528 0010 05FA04F5 		lsl	r5, r5, r4	@ tmp199, tmp200, D.6839
 529              	.LVL40:
 725:cmsis/device/stm32f4xx_adc.c ****     
 726:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old sample time */
 727:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 530              		.loc 1 727 0
 531 0014 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp199
 532              	.LVL41:
 728:cmsis/device/stm32f4xx_adc.c ****     
 729:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 730:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * (ADC_Channel - 10));
 533              		.loc 1 730 0
 534 0018 03FA04F3 		lsl	r3, r3, r4	@ tmp202, ADC_SampleTime, D.6839
 535              	.LVL42:
 731:cmsis/device/stm32f4xx_adc.c ****     
 732:cmsis/device/stm32f4xx_adc.c ****     /* Set the new sample time */
 733:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 536              		.loc 1 733 0
 537 001c 45EA0304 		orr	r4, r5, r3	@ tmpreg1, tmpreg1, tmp202
 538              	.LVL43:
 734:cmsis/device/stm32f4xx_adc.c ****     
 735:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 24


 736:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 737:cmsis/device/stm32f4xx_adc.c ****   }
 738:cmsis/device/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
 739:cmsis/device/stm32f4xx_adc.c ****   {
 740:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
 741:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 742:cmsis/device/stm32f4xx_adc.c ****     
 743:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 744:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 745:cmsis/device/stm32f4xx_adc.c ****     
 746:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old sample time */
 747:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 748:cmsis/device/stm32f4xx_adc.c ****     
 749:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 750:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 751:cmsis/device/stm32f4xx_adc.c ****     
 752:cmsis/device/stm32f4xx_adc.c ****     /* Set the new sample time */
 753:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 754:cmsis/device/stm32f4xx_adc.c ****     
 755:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
 756:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 757:cmsis/device/stm32f4xx_adc.c ****   }
 758:cmsis/device/stm32f4xx_adc.c ****   /* For Rank 1 to 6 */
 759:cmsis/device/stm32f4xx_adc.c ****   if (Rank < 7)
 539              		.loc 1 759 0
 540 0020 062A     		cmp	r2, #6	@ Rank,
 736:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 541              		.loc 1 736 0
 542 0022 C460     		str	r4, [r0, #12]	@ tmpreg1, ADCx_4(D)->SMPR1
 543              		.loc 1 759 0
 544 0024 1FD9     		bls	.L28	@,
 545              	.L25:
 760:cmsis/device/stm32f4xx_adc.c ****   {
 761:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
 762:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 763:cmsis/device/stm32f4xx_adc.c ****     
 764:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 765:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 766:cmsis/device/stm32f4xx_adc.c ****     
 767:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 768:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 769:cmsis/device/stm32f4xx_adc.c ****     
 770:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 771:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 772:cmsis/device/stm32f4xx_adc.c ****     
 773:cmsis/device/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 774:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 775:cmsis/device/stm32f4xx_adc.c ****     
 776:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
 777:cmsis/device/stm32f4xx_adc.c ****     ADCx->SQR3 = tmpreg1;
 778:cmsis/device/stm32f4xx_adc.c ****   }
 779:cmsis/device/stm32f4xx_adc.c ****   /* For Rank 7 to 12 */
 780:cmsis/device/stm32f4xx_adc.c ****   else if (Rank < 13)
 546              		.loc 1 780 0
 547 0026 0C2A     		cmp	r2, #12	@ Rank,
 781:cmsis/device/stm32f4xx_adc.c ****   {
 782:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 25


 783:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
 784:cmsis/device/stm32f4xx_adc.c ****     
 785:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 786:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 548              		.loc 1 786 0
 549 0028 02EB8202 		add	r2, r2, r2, lsl #2	@, tmp222, Rank, Rank,
 550              	.LVL44:
 780:cmsis/device/stm32f4xx_adc.c ****   else if (Rank < 13)
 551              		.loc 1 780 0
 552 002c 29D9     		bls	.L29	@,
 787:cmsis/device/stm32f4xx_adc.c ****     
 788:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 789:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 790:cmsis/device/stm32f4xx_adc.c ****     
 791:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 792:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 793:cmsis/device/stm32f4xx_adc.c ****     
 794:cmsis/device/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 795:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 796:cmsis/device/stm32f4xx_adc.c ****     
 797:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
 798:cmsis/device/stm32f4xx_adc.c ****     ADCx->SQR2 = tmpreg1;
 799:cmsis/device/stm32f4xx_adc.c ****   }
 800:cmsis/device/stm32f4xx_adc.c ****   /* For Rank 13 to 16 */
 801:cmsis/device/stm32f4xx_adc.c ****   else
 802:cmsis/device/stm32f4xx_adc.c ****   {
 803:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
 804:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR1;
 553              		.loc 1 804 0
 554 002e C46A     		ldr	r4, [r0, #44]	@ tmpreg1, ADCx_4(D)->SQR1
 555              	.LVL45:
 805:cmsis/device/stm32f4xx_adc.c ****     
 806:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
 807:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR1_SQ_SET << (5 * (Rank - 13));
 556              		.loc 1 807 0
 557 0030 413A     		subs	r2, r2, #65	@ D.6855, tmp230,
 558              	.LVL46:
 559 0032 1F23     		movs	r3, #31	@ tmp232,
 560 0034 03FA02F3 		lsl	r3, r3, r2	@ tmp231, tmp232, D.6855
 561              	.LVL47:
 808:cmsis/device/stm32f4xx_adc.c ****     
 809:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old SQx bits for the selected rank */
 810:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 562              		.loc 1 810 0
 563 0038 24EA0303 		bic	r3, r4, r3	@ tmpreg1, tmpreg1, tmp231
 564              	.LVL48:
 811:cmsis/device/stm32f4xx_adc.c ****     
 812:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
 813:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 13));
 565              		.loc 1 813 0
 566 003c 01FA02F1 		lsl	r1, r1, r2	@ tmp234, ADC_Channel, D.6855
 567              	.LVL49:
 814:cmsis/device/stm32f4xx_adc.c ****     
 815:cmsis/device/stm32f4xx_adc.c ****     /* Set the SQx bits for the selected rank */
 816:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 568              		.loc 1 816 0
 569 0040 1943     		orrs	r1, r1, r3	@, tmpreg1, tmp234, tmpreg1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 26


 570              	.LVL50:
 817:cmsis/device/stm32f4xx_adc.c ****     
 818:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
 819:cmsis/device/stm32f4xx_adc.c ****     ADCx->SQR1 = tmpreg1;
 571              		.loc 1 819 0
 572 0042 C162     		str	r1, [r0, #44]	@ tmpreg1, ADCx_4(D)->SQR1
 573              	.LVL51:
 574              	.L22:
 820:cmsis/device/stm32f4xx_adc.c ****   }
 821:cmsis/device/stm32f4xx_adc.c **** }
 575              		.loc 1 821 0
 576 0044 70BC     		pop	{r4, r5, r6}
 577 0046 7047     		bx	lr
 578              	.LVL52:
 579              	.L23:
 744:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 580              		.loc 1 744 0
 581 0048 01EB4104 		add	r4, r1, r1, lsl #1	@, tmp206, ADC_Channel, ADC_Channel,
 741:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 582              		.loc 1 741 0
 583 004c 0669     		ldr	r6, [r0, #16]	@ tmpreg1, ADCx_4(D)->SMPR2
 584              	.LVL53:
 744:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 585              		.loc 1 744 0
 586 004e 0725     		movs	r5, #7	@ tmp208,
 587 0050 05FA04F5 		lsl	r5, r5, r4	@ tmp207, tmp208, tmp206
 588              	.LVL54:
 747:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 589              		.loc 1 747 0
 590 0054 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp207
 591              	.LVL55:
 750:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 592              		.loc 1 750 0
 593 0058 03FA04F3 		lsl	r3, r3, r4	@ tmp210, ADC_SampleTime, tmp206
 594              	.LVL56:
 753:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 595              		.loc 1 753 0
 596 005c 45EA0304 		orr	r4, r5, r3	@ tmpreg1, tmpreg1, tmp210
 597              	.LVL57:
 759:cmsis/device/stm32f4xx_adc.c ****   if (Rank < 7)
 598              		.loc 1 759 0
 599 0060 062A     		cmp	r2, #6	@ Rank,
 756:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 600              		.loc 1 756 0
 601 0062 0461     		str	r4, [r0, #16]	@ tmpreg1, ADCx_4(D)->SMPR2
 759:cmsis/device/stm32f4xx_adc.c ****   if (Rank < 7)
 602              		.loc 1 759 0
 603 0064 DFD8     		bhi	.L25	@,
 604              	.L28:
 765:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 605              		.loc 1 765 0
 606 0066 531E     		subs	r3, r2, #1	@ tmp211, Rank,
 607 0068 03EB8302 		add	r2, r3, r3, lsl #2	@, tmp214, tmp211, tmp211,
 608              	.LVL58:
 762:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR3;
 609              		.loc 1 762 0
 610 006c 446B     		ldr	r4, [r0, #52]	@ tmpreg1, ADCx_4(D)->SQR3
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 27


 611              	.LVL59:
 765:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR3_SQ_SET << (5 * (Rank - 1));
 612              		.loc 1 765 0
 613 006e 1F23     		movs	r3, #31	@ tmp216,
 614 0070 03FA02F3 		lsl	r3, r3, r2	@ tmp215, tmp216, tmp214
 615              	.LVL60:
 768:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 616              		.loc 1 768 0
 617 0074 24EA0303 		bic	r3, r4, r3	@ tmpreg1, tmpreg1, tmp215
 618              	.LVL61:
 771:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 1));
 619              		.loc 1 771 0
 620 0078 01FA02F1 		lsl	r1, r1, r2	@ tmp218, ADC_Channel, tmp214
 621              	.LVL62:
 774:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 622              		.loc 1 774 0
 623 007c 1943     		orrs	r1, r1, r3	@, tmpreg1, tmp218, tmpreg1
 624              	.LVL63:
 777:cmsis/device/stm32f4xx_adc.c ****     ADCx->SQR3 = tmpreg1;
 625              		.loc 1 777 0
 626 007e 4163     		str	r1, [r0, #52]	@ tmpreg1, ADCx_4(D)->SQR3
 627 0080 E0E7     		b	.L22	@
 628              	.LVL64:
 629              	.L29:
 786:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 630              		.loc 1 786 0
 631 0082 233A     		subs	r2, r2, #35	@ D.6853, tmp222,
 783:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SQR2;
 632              		.loc 1 783 0
 633 0084 046B     		ldr	r4, [r0, #48]	@ tmpreg1, ADCx_4(D)->SQR2
 634              	.LVL65:
 786:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SQR2_SQ_SET << (5 * (Rank - 7));
 635              		.loc 1 786 0
 636 0086 1F23     		movs	r3, #31	@ tmp224,
 637 0088 03FA02F3 		lsl	r3, r3, r2	@ tmp223, tmp224, D.6853
 638              	.LVL66:
 789:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 639              		.loc 1 789 0
 640 008c 24EA0303 		bic	r3, r4, r3	@ tmpreg1, tmpreg1, tmp223
 641              	.LVL67:
 792:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_Channel << (5 * (Rank - 7));
 642              		.loc 1 792 0
 643 0090 01FA02F1 		lsl	r1, r1, r2	@ tmp226, ADC_Channel, D.6853
 644              	.LVL68:
 795:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 645              		.loc 1 795 0
 646 0094 43EA0102 		orr	r2, r3, r1	@ tmpreg1, tmpreg1, tmp226
 647              	.LVL69:
 798:cmsis/device/stm32f4xx_adc.c ****     ADCx->SQR2 = tmpreg1;
 648              		.loc 1 798 0
 649 0098 0263     		str	r2, [r0, #48]	@ tmpreg1, ADCx_4(D)->SQR2
 650 009a D3E7     		b	.L22	@
 651              		.cfi_endproc
 652              	.LFE121:
 653              		.size	ADC_RegularChannelConfig, .-ADC_RegularChannelConfig
 654              		.section	.text.ADC_SoftwareStartConv,"ax",%progbits
 655              		.align	2
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 28


 656              		.global	ADC_SoftwareStartConv
 657              		.thumb
 658              		.thumb_func
 659              		.type	ADC_SoftwareStartConv, %function
 660              	ADC_SoftwareStartConv:
 661              	.LFB122:
 822:cmsis/device/stm32f4xx_adc.c **** 
 823:cmsis/device/stm32f4xx_adc.c **** /**
 824:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the regular channels.
 825:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 826:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 827:cmsis/device/stm32f4xx_adc.c ****   */
 828:cmsis/device/stm32f4xx_adc.c **** void ADC_SoftwareStartConv(ADC_TypeDef* ADCx)
 829:cmsis/device/stm32f4xx_adc.c **** {
 662              		.loc 1 829 0
 663              		.cfi_startproc
 664              		@ args = 0, pretend = 0, frame = 0
 665              		@ frame_needed = 0, uses_anonymous_args = 0
 666              		@ link register save eliminated.
 667              	.LVL70:
 830:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 831:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 832:cmsis/device/stm32f4xx_adc.c ****   
 833:cmsis/device/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for regular group */
 834:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 668              		.loc 1 834 0
 669 0000 8368     		ldr	r3, [r0, #8]	@ D.6833, ADCx_1(D)->CR2
 670 0002 43F08041 		orr	r1, r3, #1073741824	@ D.6834, D.6833,
 671 0006 8160     		str	r1, [r0, #8]	@ D.6834, ADCx_1(D)->CR2
 672 0008 7047     		bx	lr	@
 673              		.cfi_endproc
 674              	.LFE122:
 675              		.size	ADC_SoftwareStartConv, .-ADC_SoftwareStartConv
 676 000a 00BF     		.section	.text.ADC_GetSoftwareStartConvStatus,"ax",%progbits
 677              		.align	2
 678              		.global	ADC_GetSoftwareStartConvStatus
 679              		.thumb
 680              		.thumb_func
 681              		.type	ADC_GetSoftwareStartConvStatus, %function
 682              	ADC_GetSoftwareStartConvStatus:
 683              	.LFB123:
 835:cmsis/device/stm32f4xx_adc.c **** }
 836:cmsis/device/stm32f4xx_adc.c **** 
 837:cmsis/device/stm32f4xx_adc.c **** /**
 838:cmsis/device/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start regular conversion Status.
 839:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 840:cmsis/device/stm32f4xx_adc.c ****   * @retval The new state of ADC software start conversion (SET or RESET).
 841:cmsis/device/stm32f4xx_adc.c ****   */
 842:cmsis/device/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartConvStatus(ADC_TypeDef* ADCx)
 843:cmsis/device/stm32f4xx_adc.c **** {
 684              		.loc 1 843 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LVL71:
 844:cmsis/device/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 29


 845:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 846:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 847:cmsis/device/stm32f4xx_adc.c ****   
 848:cmsis/device/stm32f4xx_adc.c ****   /* Check the status of SWSTART bit */
 849:cmsis/device/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 690              		.loc 1 849 0
 691 0000 8068     		ldr	r0, [r0, #8]	@ D.6826, ADCx_3(D)->CR2
 692              	.LVL72:
 850:cmsis/device/stm32f4xx_adc.c ****   {
 851:cmsis/device/stm32f4xx_adc.c ****     /* SWSTART bit is set */
 852:cmsis/device/stm32f4xx_adc.c ****     bitstatus = SET;
 853:cmsis/device/stm32f4xx_adc.c ****   }
 854:cmsis/device/stm32f4xx_adc.c ****   else
 855:cmsis/device/stm32f4xx_adc.c ****   {
 856:cmsis/device/stm32f4xx_adc.c ****     /* SWSTART bit is reset */
 857:cmsis/device/stm32f4xx_adc.c ****     bitstatus = RESET;
 858:cmsis/device/stm32f4xx_adc.c ****   }
 859:cmsis/device/stm32f4xx_adc.c ****   
 860:cmsis/device/stm32f4xx_adc.c ****   /* Return the SWSTART bit status */
 861:cmsis/device/stm32f4xx_adc.c ****   return  bitstatus;
 862:cmsis/device/stm32f4xx_adc.c **** }
 693              		.loc 1 862 0
 694 0002 C0F38050 		ubfx	r0, r0, #22, #1	@, D.6826,,
 695              	.LVL73:
 696 0006 7047     		bx	lr	@
 697              		.cfi_endproc
 698              	.LFE123:
 699              		.size	ADC_GetSoftwareStartConvStatus, .-ADC_GetSoftwareStartConvStatus
 700              		.section	.text.ADC_EOCOnEachRegularChannelCmd,"ax",%progbits
 701              		.align	2
 702              		.global	ADC_EOCOnEachRegularChannelCmd
 703              		.thumb
 704              		.thumb_func
 705              		.type	ADC_EOCOnEachRegularChannelCmd, %function
 706              	ADC_EOCOnEachRegularChannelCmd:
 707              	.LFB124:
 863:cmsis/device/stm32f4xx_adc.c **** 
 864:cmsis/device/stm32f4xx_adc.c **** 
 865:cmsis/device/stm32f4xx_adc.c **** /**
 866:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the EOC on each regular channel conversion
 867:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 868:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC EOC flag rising
 869:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 870:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 871:cmsis/device/stm32f4xx_adc.c ****   */
 872:cmsis/device/stm32f4xx_adc.c **** void ADC_EOCOnEachRegularChannelCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 873:cmsis/device/stm32f4xx_adc.c **** {
 708              		.loc 1 873 0
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 0
 711              		@ frame_needed = 0, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713              	.LVL74:
 874:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 875:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 876:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 877:cmsis/device/stm32f4xx_adc.c ****   
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 30


 878:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 879:cmsis/device/stm32f4xx_adc.c ****   {
 880:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC EOC rising on each regular channel conversion */
 881:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_EOCS;
 714              		.loc 1 881 0
 715 0000 8368     		ldr	r3, [r0, #8]	@ D.6821,
 878:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 716              		.loc 1 878 0
 717 0002 19B9     		cbnz	r1, .L35	@ NewState,
 882:cmsis/device/stm32f4xx_adc.c ****   }
 883:cmsis/device/stm32f4xx_adc.c ****   else
 884:cmsis/device/stm32f4xx_adc.c ****   {
 885:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC EOC rising on each regular channel conversion */
 886:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_EOCS);
 718              		.loc 1 886 0
 719 0004 23F48061 		bic	r1, r3, #1024	@ D.6825, D.6824,
 720              	.LVL75:
 721 0008 8160     		str	r1, [r0, #8]	@ D.6825,
 722 000a 7047     		bx	lr	@
 723              	.LVL76:
 724              	.L35:
 881:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_EOCS;
 725              		.loc 1 881 0
 726 000c 43F48062 		orr	r2, r3, #1024	@ D.6822, D.6821,
 727 0010 8260     		str	r2, [r0, #8]	@ D.6822,
 728 0012 7047     		bx	lr	@
 729              		.cfi_endproc
 730              	.LFE124:
 731              		.size	ADC_EOCOnEachRegularChannelCmd, .-ADC_EOCOnEachRegularChannelCmd
 732              		.section	.text.ADC_ContinuousModeCmd,"ax",%progbits
 733              		.align	2
 734              		.global	ADC_ContinuousModeCmd
 735              		.thumb
 736              		.thumb_func
 737              		.type	ADC_ContinuousModeCmd, %function
 738              	ADC_ContinuousModeCmd:
 739              	.LFB125:
 887:cmsis/device/stm32f4xx_adc.c ****   }
 888:cmsis/device/stm32f4xx_adc.c **** }
 889:cmsis/device/stm32f4xx_adc.c **** 
 890:cmsis/device/stm32f4xx_adc.c **** /**
 891:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC continuous conversion mode 
 892:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 893:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC continuous conversion mode
 894:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 895:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 896:cmsis/device/stm32f4xx_adc.c ****   */
 897:cmsis/device/stm32f4xx_adc.c **** void ADC_ContinuousModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 898:cmsis/device/stm32f4xx_adc.c **** {
 740              		.loc 1 898 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 0, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745              	.LVL77:
 899:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 900:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 31


 901:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 902:cmsis/device/stm32f4xx_adc.c ****   
 903:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 904:cmsis/device/stm32f4xx_adc.c ****   {
 905:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC continuous conversion mode */
 906:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_CONT;
 746              		.loc 1 906 0
 747 0000 8368     		ldr	r3, [r0, #8]	@ D.6814,
 903:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 748              		.loc 1 903 0
 749 0002 19B9     		cbnz	r1, .L39	@ NewState,
 907:cmsis/device/stm32f4xx_adc.c ****   }
 908:cmsis/device/stm32f4xx_adc.c ****   else
 909:cmsis/device/stm32f4xx_adc.c ****   {
 910:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC continuous conversion mode */
 911:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_CONT);
 750              		.loc 1 911 0
 751 0004 23F00201 		bic	r1, r3, #2	@ D.6818, D.6817,
 752              	.LVL78:
 753 0008 8160     		str	r1, [r0, #8]	@ D.6818,
 754 000a 7047     		bx	lr	@
 755              	.LVL79:
 756              	.L39:
 906:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_CONT;
 757              		.loc 1 906 0
 758 000c 43F00202 		orr	r2, r3, #2	@ D.6815, D.6814,
 759 0010 8260     		str	r2, [r0, #8]	@ D.6815,
 760 0012 7047     		bx	lr	@
 761              		.cfi_endproc
 762              	.LFE125:
 763              		.size	ADC_ContinuousModeCmd, .-ADC_ContinuousModeCmd
 764              		.section	.text.ADC_DiscModeChannelCountConfig,"ax",%progbits
 765              		.align	2
 766              		.global	ADC_DiscModeChannelCountConfig
 767              		.thumb
 768              		.thumb_func
 769              		.type	ADC_DiscModeChannelCountConfig, %function
 770              	ADC_DiscModeChannelCountConfig:
 771              	.LFB126:
 912:cmsis/device/stm32f4xx_adc.c ****   }
 913:cmsis/device/stm32f4xx_adc.c **** }
 914:cmsis/device/stm32f4xx_adc.c **** 
 915:cmsis/device/stm32f4xx_adc.c **** /**
 916:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures the discontinuous mode for the selected ADC regular group 
 917:cmsis/device/stm32f4xx_adc.c ****   *         channel.
 918:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 919:cmsis/device/stm32f4xx_adc.c ****   * @param  Number: specifies the discontinuous mode regular channel count value.
 920:cmsis/device/stm32f4xx_adc.c ****   *          This number must be between 1 and 8.
 921:cmsis/device/stm32f4xx_adc.c ****   * @retval None
 922:cmsis/device/stm32f4xx_adc.c ****   */
 923:cmsis/device/stm32f4xx_adc.c **** void ADC_DiscModeChannelCountConfig(ADC_TypeDef* ADCx, uint8_t Number)
 924:cmsis/device/stm32f4xx_adc.c **** {
 772              		.loc 1 924 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 32


 777              	.LVL80:
 925:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
 926:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
 927:cmsis/device/stm32f4xx_adc.c ****   
 928:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 929:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 930:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_REGULAR_DISC_NUMBER(Number));
 931:cmsis/device/stm32f4xx_adc.c ****   
 932:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
 933:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->CR1;
 778              		.loc 1 933 0
 779 0000 4368     		ldr	r3, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 780              	.LVL81:
 934:cmsis/device/stm32f4xx_adc.c ****   
 935:cmsis/device/stm32f4xx_adc.c ****   /* Clear the old discontinuous mode channel count */
 936:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 937:cmsis/device/stm32f4xx_adc.c ****   
 938:cmsis/device/stm32f4xx_adc.c ****   /* Set the discontinuous mode channel count */
 939:cmsis/device/stm32f4xx_adc.c ****   tmpreg2 = Number - 1;
 781              		.loc 1 939 0
 782 0002 0139     		subs	r1, r1, #1	@ tmp143, Number,
 783              	.LVL82:
 936:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= CR1_DISCNUM_RESET;
 784              		.loc 1 936 0
 785 0004 23F46042 		bic	r2, r3, #57344	@ tmpreg1, tmpreg1,
 786              	.LVL83:
 940:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 13;
 787              		.loc 1 940 0
 788 0008 42EA4131 		orr	r1, r2, r1, lsl #13	@, tmpreg1, tmpreg1, tmp143,
 789              	.LVL84:
 941:cmsis/device/stm32f4xx_adc.c ****   
 942:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
 943:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR1 = tmpreg1;
 790              		.loc 1 943 0
 791 000c 4160     		str	r1, [r0, #4]	@ tmpreg1, ADCx_3(D)->CR1
 792 000e 7047     		bx	lr	@
 793              		.cfi_endproc
 794              	.LFE126:
 795              		.size	ADC_DiscModeChannelCountConfig, .-ADC_DiscModeChannelCountConfig
 796              		.section	.text.ADC_DiscModeCmd,"ax",%progbits
 797              		.align	2
 798              		.global	ADC_DiscModeCmd
 799              		.thumb
 800              		.thumb_func
 801              		.type	ADC_DiscModeCmd, %function
 802              	ADC_DiscModeCmd:
 803              	.LFB127:
 944:cmsis/device/stm32f4xx_adc.c **** }
 945:cmsis/device/stm32f4xx_adc.c **** 
 946:cmsis/device/stm32f4xx_adc.c **** /**
 947:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode on regular group channel 
 948:cmsis/device/stm32f4xx_adc.c ****   *         for the specified ADC
 949:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 950:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on 
 951:cmsis/device/stm32f4xx_adc.c ****   *         regular group channel.
 952:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
 953:cmsis/device/stm32f4xx_adc.c ****   * @retval None
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 33


 954:cmsis/device/stm32f4xx_adc.c ****   */
 955:cmsis/device/stm32f4xx_adc.c **** void ADC_DiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
 956:cmsis/device/stm32f4xx_adc.c **** {
 804              		.loc 1 956 0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 808              		@ link register save eliminated.
 809              	.LVL85:
 957:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 958:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 959:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 960:cmsis/device/stm32f4xx_adc.c ****   
 961:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 962:cmsis/device/stm32f4xx_adc.c ****   {
 963:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC regular discontinuous mode */
 964:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 810              		.loc 1 964 0
 811 0000 4368     		ldr	r3, [r0, #4]	@ D.6804,
 961:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 812              		.loc 1 961 0
 813 0002 19B9     		cbnz	r1, .L44	@ NewState,
 965:cmsis/device/stm32f4xx_adc.c ****   }
 966:cmsis/device/stm32f4xx_adc.c ****   else
 967:cmsis/device/stm32f4xx_adc.c ****   {
 968:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC regular discontinuous mode */
 969:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_DISCEN);
 814              		.loc 1 969 0
 815 0004 23F40061 		bic	r1, r3, #2048	@ D.6808, D.6807,
 816              	.LVL86:
 817 0008 4160     		str	r1, [r0, #4]	@ D.6808,
 818 000a 7047     		bx	lr	@
 819              	.LVL87:
 820              	.L44:
 964:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 821              		.loc 1 964 0
 822 000c 43F40062 		orr	r2, r3, #2048	@ D.6805, D.6804,
 823 0010 4260     		str	r2, [r0, #4]	@ D.6805,
 824 0012 7047     		bx	lr	@
 825              		.cfi_endproc
 826              	.LFE127:
 827              		.size	ADC_DiscModeCmd, .-ADC_DiscModeCmd
 828              		.section	.text.ADC_GetConversionValue,"ax",%progbits
 829              		.align	2
 830              		.global	ADC_GetConversionValue
 831              		.thumb
 832              		.thumb_func
 833              		.type	ADC_GetConversionValue, %function
 834              	ADC_GetConversionValue:
 835              	.LFB128:
 970:cmsis/device/stm32f4xx_adc.c ****   }
 971:cmsis/device/stm32f4xx_adc.c **** }
 972:cmsis/device/stm32f4xx_adc.c **** 
 973:cmsis/device/stm32f4xx_adc.c **** /**
 974:cmsis/device/stm32f4xx_adc.c ****   * @brief  Returns the last ADCx conversion result data for regular channel.
 975:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
 976:cmsis/device/stm32f4xx_adc.c ****   * @retval The Data conversion value.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 34


 977:cmsis/device/stm32f4xx_adc.c ****   */
 978:cmsis/device/stm32f4xx_adc.c **** uint16_t ADC_GetConversionValue(ADC_TypeDef* ADCx)
 979:cmsis/device/stm32f4xx_adc.c **** {
 836              		.loc 1 979 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 0
 839              		@ frame_needed = 0, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841              	.LVL88:
 980:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
 981:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
 982:cmsis/device/stm32f4xx_adc.c ****   
 983:cmsis/device/stm32f4xx_adc.c ****   /* Return the selected ADC conversion value */
 984:cmsis/device/stm32f4xx_adc.c ****   return (uint16_t) ADCx->DR;
 842              		.loc 1 984 0
 843 0000 C06C     		ldr	r0, [r0, #76]	@ D.6800, ADCx_1(D)->DR
 844              	.LVL89:
 985:cmsis/device/stm32f4xx_adc.c **** }
 845              		.loc 1 985 0
 846 0002 80B2     		uxth	r0, r0	@, D.6800
 847 0004 7047     		bx	lr	@
 848              		.cfi_endproc
 849              	.LFE128:
 850              		.size	ADC_GetConversionValue, .-ADC_GetConversionValue
 851 0006 00BF     		.section	.text.ADC_GetMultiModeConversionValue,"ax",%progbits
 852              		.align	2
 853              		.global	ADC_GetMultiModeConversionValue
 854              		.thumb
 855              		.thumb_func
 856              		.type	ADC_GetMultiModeConversionValue, %function
 857              	ADC_GetMultiModeConversionValue:
 858              	.LFB129:
 986:cmsis/device/stm32f4xx_adc.c **** 
 987:cmsis/device/stm32f4xx_adc.c **** /**
 988:cmsis/device/stm32f4xx_adc.c ****   * @brief  Returns the last ADC1, ADC2 and ADC3 regular conversions results 
 989:cmsis/device/stm32f4xx_adc.c ****   *         data in the selected multi mode.
 990:cmsis/device/stm32f4xx_adc.c ****   * @param  None  
 991:cmsis/device/stm32f4xx_adc.c ****   * @retval The Data conversion value.
 992:cmsis/device/stm32f4xx_adc.c ****   * @note   In dual mode, the value returned by this function is as following
 993:cmsis/device/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain the regular data of ADC1.
 994:cmsis/device/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain the regular data of ADC2.
 995:cmsis/device/stm32f4xx_adc.c ****   * @note   In triple mode, the value returned by this function is as following
 996:cmsis/device/stm32f4xx_adc.c ****   *           Data[15:0] : these bits contain alternatively the regular data of ADC1, ADC3 and ADC2
 997:cmsis/device/stm32f4xx_adc.c ****   *           Data[31:16]: these bits contain alternatively the regular data of ADC2, ADC1 and ADC3
 998:cmsis/device/stm32f4xx_adc.c ****   */
 999:cmsis/device/stm32f4xx_adc.c **** uint32_t ADC_GetMultiModeConversionValue(void)
1000:cmsis/device/stm32f4xx_adc.c **** {
 859              		.loc 1 1000 0
 860              		.cfi_startproc
 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              		@ link register save eliminated.
1001:cmsis/device/stm32f4xx_adc.c ****   /* Return the multi mode conversion value */
1002:cmsis/device/stm32f4xx_adc.c ****   return (*(__IO uint32_t *) CDR_ADDRESS);
 864              		.loc 1 1002 0
 865 0000 42F20833 		movw	r3, #8968	@ tmp136,
 866 0004 C4F20103 		movt	r3, 16385	@ tmp136,
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 35


 867 0008 1868     		ldr	r0, [r3, #0]	@ D.6796, MEM[(volatile uint32_t *)1073816328B]
1003:cmsis/device/stm32f4xx_adc.c **** }
 868              		.loc 1 1003 0
 869 000a 7047     		bx	lr	@
 870              		.cfi_endproc
 871              	.LFE129:
 872              		.size	ADC_GetMultiModeConversionValue, .-ADC_GetMultiModeConversionValue
 873              		.section	.text.ADC_DMACmd,"ax",%progbits
 874              		.align	2
 875              		.global	ADC_DMACmd
 876              		.thumb
 877              		.thumb_func
 878              		.type	ADC_DMACmd, %function
 879              	ADC_DMACmd:
 880              	.LFB130:
1004:cmsis/device/stm32f4xx_adc.c **** /**
1005:cmsis/device/stm32f4xx_adc.c ****   * @}
1006:cmsis/device/stm32f4xx_adc.c ****   */
1007:cmsis/device/stm32f4xx_adc.c **** 
1008:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group5 Regular Channels DMA Configuration functions
1009:cmsis/device/stm32f4xx_adc.c ****  *  @brief   Regular Channels DMA Configuration functions 
1010:cmsis/device/stm32f4xx_adc.c ****  *
1011:cmsis/device/stm32f4xx_adc.c **** @verbatim   
1012:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
1013:cmsis/device/stm32f4xx_adc.c ****                    Regular Channels DMA Configuration functions
1014:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
1015:cmsis/device/stm32f4xx_adc.c **** 
1016:cmsis/device/stm32f4xx_adc.c ****   This section provides functions allowing to configure the DMA for ADC regular 
1017:cmsis/device/stm32f4xx_adc.c ****   channels.
1018:cmsis/device/stm32f4xx_adc.c ****   Since converted regular channel values are stored into a unique data register, 
1019:cmsis/device/stm32f4xx_adc.c ****   it is useful to use DMA for conversion of more than one regular channel. This 
1020:cmsis/device/stm32f4xx_adc.c ****   avoids the loss of the data already stored in the ADC Data register. 
1021:cmsis/device/stm32f4xx_adc.c ****   
1022:cmsis/device/stm32f4xx_adc.c ****   When the DMA mode is enabled (using the ADC_DMACmd() function), after each
1023:cmsis/device/stm32f4xx_adc.c ****   conversion of a regular channel, a DMA request is generated.
1024:cmsis/device/stm32f4xx_adc.c ****   
1025:cmsis/device/stm32f4xx_adc.c ****   Depending on the "DMA disable selection for Independent ADC mode" 
1026:cmsis/device/stm32f4xx_adc.c ****   configuration (using the ADC_DMARequestAfterLastTransferCmd() function), 
1027:cmsis/device/stm32f4xx_adc.c ****   at the end of the last DMA transfer, two possibilities are allowed:
1028:cmsis/device/stm32f4xx_adc.c ****   - No new DMA request is issued to the DMA controller (feature DISABLED) 
1029:cmsis/device/stm32f4xx_adc.c ****   - Requests can continue to be generated (feature ENABLED).
1030:cmsis/device/stm32f4xx_adc.c ****   
1031:cmsis/device/stm32f4xx_adc.c ****   Depending on the "DMA disable selection for multi ADC mode" configuration 
1032:cmsis/device/stm32f4xx_adc.c ****   (using the void ADC_MultiModeDMARequestAfterLastTransferCmd() function), 
1033:cmsis/device/stm32f4xx_adc.c ****   at the end of the last DMA transfer, two possibilities are allowed:
1034:cmsis/device/stm32f4xx_adc.c ****   - No new DMA request is issued to the DMA controller (feature DISABLED) 
1035:cmsis/device/stm32f4xx_adc.c ****   - Requests can continue to be generated (feature ENABLED).
1036:cmsis/device/stm32f4xx_adc.c **** 
1037:cmsis/device/stm32f4xx_adc.c **** @endverbatim
1038:cmsis/device/stm32f4xx_adc.c ****   * @{
1039:cmsis/device/stm32f4xx_adc.c ****   */
1040:cmsis/device/stm32f4xx_adc.c ****   
1041:cmsis/device/stm32f4xx_adc.c ****  /**
1042:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC DMA request.
1043:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1044:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA transfer.
1045:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 36


1046:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1047:cmsis/device/stm32f4xx_adc.c ****   */
1048:cmsis/device/stm32f4xx_adc.c **** void ADC_DMACmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1049:cmsis/device/stm32f4xx_adc.c **** {
 881              		.loc 1 1049 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886              	.LVL90:
1050:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1051:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1052:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1053:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1054:cmsis/device/stm32f4xx_adc.c ****   {
1055:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request */
1056:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DMA;
 887              		.loc 1 1056 0
 888 0000 8368     		ldr	r3, [r0, #8]	@ D.6791,
1053:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 889              		.loc 1 1053 0
 890 0002 19B9     		cbnz	r1, .L50	@ NewState,
1057:cmsis/device/stm32f4xx_adc.c ****   }
1058:cmsis/device/stm32f4xx_adc.c ****   else
1059:cmsis/device/stm32f4xx_adc.c ****   {
1060:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request */
1061:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DMA);
 891              		.loc 1 1061 0
 892 0004 23F48071 		bic	r1, r3, #256	@ D.6795, D.6794,
 893              	.LVL91:
 894 0008 8160     		str	r1, [r0, #8]	@ D.6795,
 895 000a 7047     		bx	lr	@
 896              	.LVL92:
 897              	.L50:
1056:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DMA;
 898              		.loc 1 1056 0
 899 000c 43F48072 		orr	r2, r3, #256	@ D.6792, D.6791,
 900 0010 8260     		str	r2, [r0, #8]	@ D.6792,
 901 0012 7047     		bx	lr	@
 902              		.cfi_endproc
 903              	.LFE130:
 904              		.size	ADC_DMACmd, .-ADC_DMACmd
 905              		.section	.text.ADC_DMARequestAfterLastTransferCmd,"ax",%progbits
 906              		.align	2
 907              		.global	ADC_DMARequestAfterLastTransferCmd
 908              		.thumb
 909              		.thumb_func
 910              		.type	ADC_DMARequestAfterLastTransferCmd, %function
 911              	ADC_DMARequestAfterLastTransferCmd:
 912              	.LFB131:
1062:cmsis/device/stm32f4xx_adc.c ****   }
1063:cmsis/device/stm32f4xx_adc.c **** }
1064:cmsis/device/stm32f4xx_adc.c **** 
1065:cmsis/device/stm32f4xx_adc.c **** /**
1066:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer (Single-ADC mode)  
1067:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1068:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 37


1069:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1070:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1071:cmsis/device/stm32f4xx_adc.c ****   */
1072:cmsis/device/stm32f4xx_adc.c **** void ADC_DMARequestAfterLastTransferCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1073:cmsis/device/stm32f4xx_adc.c **** {
 913              		.loc 1 1073 0
 914              		.cfi_startproc
 915              		@ args = 0, pretend = 0, frame = 0
 916              		@ frame_needed = 0, uses_anonymous_args = 0
 917              		@ link register save eliminated.
 918              	.LVL93:
1074:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1075:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1076:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1077:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1078:cmsis/device/stm32f4xx_adc.c ****   {
1079:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1080:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DDS;
 919              		.loc 1 1080 0
 920 0000 8368     		ldr	r3, [r0, #8]	@ D.6784,
1077:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 921              		.loc 1 1077 0
 922 0002 19B9     		cbnz	r1, .L54	@ NewState,
1081:cmsis/device/stm32f4xx_adc.c ****   }
1082:cmsis/device/stm32f4xx_adc.c ****   else
1083:cmsis/device/stm32f4xx_adc.c ****   {
1084:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1085:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 &= (uint32_t)(~ADC_CR2_DDS);
 923              		.loc 1 1085 0
 924 0004 23F40071 		bic	r1, r3, #512	@ D.6788, D.6787,
 925              	.LVL94:
 926 0008 8160     		str	r1, [r0, #8]	@ D.6788,
 927 000a 7047     		bx	lr	@
 928              	.LVL95:
 929              	.L54:
1080:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR2 |= (uint32_t)ADC_CR2_DDS;
 930              		.loc 1 1080 0
 931 000c 43F40072 		orr	r2, r3, #512	@ D.6785, D.6784,
 932 0010 8260     		str	r2, [r0, #8]	@ D.6785,
 933 0012 7047     		bx	lr	@
 934              		.cfi_endproc
 935              	.LFE131:
 936              		.size	ADC_DMARequestAfterLastTransferCmd, .-ADC_DMARequestAfterLastTransferCmd
 937              		.section	.text.ADC_MultiModeDMARequestAfterLastTransferCmd,"ax",%progbits
 938              		.align	2
 939              		.global	ADC_MultiModeDMARequestAfterLastTransferCmd
 940              		.thumb
 941              		.thumb_func
 942              		.type	ADC_MultiModeDMARequestAfterLastTransferCmd, %function
 943              	ADC_MultiModeDMARequestAfterLastTransferCmd:
 944              	.LFB132:
1086:cmsis/device/stm32f4xx_adc.c ****   }
1087:cmsis/device/stm32f4xx_adc.c **** }
1088:cmsis/device/stm32f4xx_adc.c **** 
1089:cmsis/device/stm32f4xx_adc.c **** /**
1090:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the ADC DMA request after last transfer in multi ADC mode       
1091:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC DMA request after last transfer.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 38


1092:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1093:cmsis/device/stm32f4xx_adc.c ****   * @note   if Enabled, DMA requests are issued as long as data are converted and 
1094:cmsis/device/stm32f4xx_adc.c ****   *         DMA mode for multi ADC mode (selected using ADC_CommonInit() function 
1095:cmsis/device/stm32f4xx_adc.c ****   *         by ADC_CommonInitStruct.ADC_DMAAccessMode structure member) is 
1096:cmsis/device/stm32f4xx_adc.c ****   *          ADC_DMAAccessMode_1, ADC_DMAAccessMode_2 or ADC_DMAAccessMode_3.     
1097:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1098:cmsis/device/stm32f4xx_adc.c ****   */
1099:cmsis/device/stm32f4xx_adc.c **** void ADC_MultiModeDMARequestAfterLastTransferCmd(FunctionalState NewState)
1100:cmsis/device/stm32f4xx_adc.c **** {
 945              		.loc 1 1100 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 950              	.LVL96:
1101:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1102:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1103:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1104:cmsis/device/stm32f4xx_adc.c ****   {
1105:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC DMA request after last transfer */
1106:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_DDS;
 951              		.loc 1 1106 0
 952 0000 4FF40C53 		mov	r3, #8960	@ tmp139,
 953 0004 C4F20103 		movt	r3, 16385	@ tmp139,
 954 0008 5A68     		ldr	r2, [r3, #4]	@ D.6777,
1103:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 955              		.loc 1 1103 0
 956 000a 18B9     		cbnz	r0, .L58	@ NewState,
1107:cmsis/device/stm32f4xx_adc.c ****   }
1108:cmsis/device/stm32f4xx_adc.c ****   else
1109:cmsis/device/stm32f4xx_adc.c ****   {
1110:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC DMA request after last transfer */
1111:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR &= (uint32_t)(~ADC_CCR_DDS);
 957              		.loc 1 1111 0
 958 000c 22F40050 		bic	r0, r2, #8192	@ D.6781, D.6780,
 959              	.LVL97:
 960 0010 5860     		str	r0, [r3, #4]	@ D.6781,
 961 0012 7047     		bx	lr	@
 962              	.LVL98:
 963              	.L58:
1106:cmsis/device/stm32f4xx_adc.c ****     ADC->CCR |= (uint32_t)ADC_CCR_DDS;
 964              		.loc 1 1106 0
 965 0014 42F40051 		orr	r1, r2, #8192	@ D.6778, D.6777,
 966 0018 5960     		str	r1, [r3, #4]	@ D.6778,
 967 001a 7047     		bx	lr	@
 968              		.cfi_endproc
 969              	.LFE132:
 970              		.size	ADC_MultiModeDMARequestAfterLastTransferCmd, .-ADC_MultiModeDMARequestAfterLastTransferCmd
 971              		.section	.text.ADC_InjectedChannelConfig,"ax",%progbits
 972              		.align	2
 973              		.global	ADC_InjectedChannelConfig
 974              		.thumb
 975              		.thumb_func
 976              		.type	ADC_InjectedChannelConfig, %function
 977              	ADC_InjectedChannelConfig:
 978              	.LFB133:
1112:cmsis/device/stm32f4xx_adc.c ****   }
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 39


1113:cmsis/device/stm32f4xx_adc.c **** }
1114:cmsis/device/stm32f4xx_adc.c **** /**
1115:cmsis/device/stm32f4xx_adc.c ****   * @}
1116:cmsis/device/stm32f4xx_adc.c ****   */
1117:cmsis/device/stm32f4xx_adc.c **** 
1118:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group6 Injected channels Configuration functions
1119:cmsis/device/stm32f4xx_adc.c ****  *  @brief   Injected channels Configuration functions 
1120:cmsis/device/stm32f4xx_adc.c ****  *
1121:cmsis/device/stm32f4xx_adc.c **** @verbatim   
1122:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
1123:cmsis/device/stm32f4xx_adc.c ****                      Injected channels Configuration functions
1124:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
1125:cmsis/device/stm32f4xx_adc.c **** 
1126:cmsis/device/stm32f4xx_adc.c ****   This section provide functions allowing to configure the ADC Injected channels,
1127:cmsis/device/stm32f4xx_adc.c ****   it is composed of 2 sub sections : 
1128:cmsis/device/stm32f4xx_adc.c ****     
1129:cmsis/device/stm32f4xx_adc.c ****   1. Configuration functions for Injected channels: This subsection provides 
1130:cmsis/device/stm32f4xx_adc.c ****      functions allowing to configure the ADC injected channels :    
1131:cmsis/device/stm32f4xx_adc.c ****     - Configure the rank in the injected group sequencer for each channel
1132:cmsis/device/stm32f4xx_adc.c ****     - Configure the sampling time for each channel    
1133:cmsis/device/stm32f4xx_adc.c ****     - Activate the Auto injected Mode  
1134:cmsis/device/stm32f4xx_adc.c ****     - Activate the Discontinuous Mode 
1135:cmsis/device/stm32f4xx_adc.c ****     - scan mode activation  
1136:cmsis/device/stm32f4xx_adc.c ****     - External/software trigger source   
1137:cmsis/device/stm32f4xx_adc.c ****     - External trigger edge 
1138:cmsis/device/stm32f4xx_adc.c ****     - injected channels sequencer.
1139:cmsis/device/stm32f4xx_adc.c ****     
1140:cmsis/device/stm32f4xx_adc.c ****    2. Get the Specified Injected channel conversion data: This subsection 
1141:cmsis/device/stm32f4xx_adc.c ****       provides an important function in the ADC peripheral since it returns the 
1142:cmsis/device/stm32f4xx_adc.c ****       converted data of the specific injected channel.
1143:cmsis/device/stm32f4xx_adc.c **** 
1144:cmsis/device/stm32f4xx_adc.c **** @endverbatim
1145:cmsis/device/stm32f4xx_adc.c ****   * @{
1146:cmsis/device/stm32f4xx_adc.c ****   */ 
1147:cmsis/device/stm32f4xx_adc.c **** /**
1148:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures for the selected ADC injected channel its corresponding
1149:cmsis/device/stm32f4xx_adc.c ****   *         rank in the sequencer and its sample time.
1150:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1151:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_Channel: the ADC channel to configure. 
1152:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1153:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_0: ADC Channel0 selected
1154:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_1: ADC Channel1 selected
1155:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_2: ADC Channel2 selected
1156:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_3: ADC Channel3 selected
1157:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_4: ADC Channel4 selected
1158:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_5: ADC Channel5 selected
1159:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_6: ADC Channel6 selected
1160:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_7: ADC Channel7 selected
1161:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_8: ADC Channel8 selected
1162:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_9: ADC Channel9 selected
1163:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_10: ADC Channel10 selected
1164:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_11: ADC Channel11 selected
1165:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_12: ADC Channel12 selected
1166:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_13: ADC Channel13 selected
1167:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_14: ADC Channel14 selected
1168:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_15: ADC Channel15 selected
1169:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_16: ADC Channel16 selected
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 40


1170:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_17: ADC Channel17 selected
1171:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_Channel_18: ADC Channel18 selected                       
1172:cmsis/device/stm32f4xx_adc.c ****   * @param  Rank: The rank in the injected group sequencer. 
1173:cmsis/device/stm32f4xx_adc.c ****   *          This parameter must be between 1 to 4.
1174:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_SampleTime: The sample time value to be set for the selected channel. 
1175:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1176:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_3Cycles: Sample time equal to 3 cycles
1177:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_15Cycles: Sample time equal to 15 cycles
1178:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_28Cycles: Sample time equal to 28 cycles
1179:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_56Cycles: Sample time equal to 56 cycles	
1180:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_84Cycles: Sample time equal to 84 cycles	
1181:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_112Cycles: Sample time equal to 112 cycles	
1182:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_144Cycles: Sample time equal to 144 cycles	
1183:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_SampleTime_480Cycles: Sample time equal to 480 cycles	
1184:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1185:cmsis/device/stm32f4xx_adc.c ****   */
1186:cmsis/device/stm32f4xx_adc.c **** void ADC_InjectedChannelConfig(ADC_TypeDef* ADCx, uint8_t ADC_Channel, uint8_t Rank, uint8_t ADC_Sa
1187:cmsis/device/stm32f4xx_adc.c **** {
 979              		.loc 1 1187 0
 980              		.cfi_startproc
 981              		@ args = 0, pretend = 0, frame = 0
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984              	.LVL99:
1188:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0, tmpreg2 = 0, tmpreg3 = 0;
1189:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1190:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1191:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_CHANNEL(ADC_Channel));
1192:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_RANK(Rank));
1193:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_SAMPLE_TIME(ADC_SampleTime));
1194:cmsis/device/stm32f4xx_adc.c ****   /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
1195:cmsis/device/stm32f4xx_adc.c ****   if (ADC_Channel > ADC_Channel_9)
 985              		.loc 1 1195 0
 986 0000 0929     		cmp	r1, #9	@ ADC_Channel,
1187:cmsis/device/stm32f4xx_adc.c **** {
 987              		.loc 1 1187 0
 988 0002 70B4     		push	{r4, r5, r6}	@
 989              	.LCFI4:
 990              		.cfi_def_cfa_offset 12
 991              		.cfi_offset 4, -12
 992              		.cfi_offset 5, -8
 993              		.cfi_offset 6, -4
 994              		.loc 1 1195 0
 995 0004 1FD8     		bhi	.L62	@,
1196:cmsis/device/stm32f4xx_adc.c ****   {
1197:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
1198:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
1199:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1200:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
1201:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old sample time */
1202:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
1203:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1204:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
1205:cmsis/device/stm32f4xx_adc.c ****     /* Set the new sample time */
1206:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
1207:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
1208:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 41


1209:cmsis/device/stm32f4xx_adc.c ****   }
1210:cmsis/device/stm32f4xx_adc.c ****   else /* ADC_Channel include in ADC_Channel_[0..9] */
1211:cmsis/device/stm32f4xx_adc.c ****   {
1212:cmsis/device/stm32f4xx_adc.c ****     /* Get the old register value */
1213:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
1214:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to clear */
1215:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR2_SMP_SET << (3 * ADC_Channel);
 996              		.loc 1 1215 0
 997 0006 01EB4104 		add	r4, r1, r1, lsl #1	@, tmp189, ADC_Channel, ADC_Channel,
1213:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR2;
 998              		.loc 1 1213 0
 999 000a 0669     		ldr	r6, [r0, #16]	@ tmpreg1, ADCx_5(D)->SMPR2
 1000              	.LVL100:
 1001              		.loc 1 1215 0
 1002 000c 0725     		movs	r5, #7	@ tmp191,
 1003 000e 05FA04F5 		lsl	r5, r5, r4	@ tmp190, tmp191, tmp189
 1004              	.LVL101:
1216:cmsis/device/stm32f4xx_adc.c ****     /* Clear the old sample time */
1217:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1005              		.loc 1 1217 0
 1006 0012 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp190
 1007              	.LVL102:
1218:cmsis/device/stm32f4xx_adc.c ****     /* Calculate the mask to set */
1219:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3 * ADC_Channel);
 1008              		.loc 1 1219 0
 1009 0016 03FA04F3 		lsl	r3, r3, r4	@ tmp193, ADC_SampleTime, tmp189
 1010              	.LVL103:
1220:cmsis/device/stm32f4xx_adc.c ****     /* Set the new sample time */
1221:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1011              		.loc 1 1221 0
 1012 001a 45EA0304 		orr	r4, r5, r3	@ tmpreg1, tmpreg1, tmp193
 1013              	.LVL104:
1222:cmsis/device/stm32f4xx_adc.c ****     /* Store the new register value */
1223:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR2 = tmpreg1;
 1014              		.loc 1 1223 0
 1015 001e 0461     		str	r4, [r0, #16]	@ tmpreg1, ADCx_5(D)->SMPR2
 1016              	.L61:
1224:cmsis/device/stm32f4xx_adc.c ****   }
1225:cmsis/device/stm32f4xx_adc.c ****   /* Rank configuration */
1226:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
1227:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1017              		.loc 1 1227 0
 1018 0020 846B     		ldr	r4, [r0, #56]	@ tmpreg1, ADCx_5(D)->JSQR
 1019              	.LVL105:
1228:cmsis/device/stm32f4xx_adc.c ****   /* Get JL value: Number = JL+1 */
1229:cmsis/device/stm32f4xx_adc.c ****   tmpreg3 =  (tmpreg1 & JSQR_JL_SET)>> 20;
 1020              		.loc 1 1229 0
 1021 0022 C4F30153 		ubfx	r3, r4, #20, #2	@ tmp195, tmpreg1,,
1230:cmsis/device/stm32f4xx_adc.c ****   /* Calculate the mask to clear: ((Rank-1)+(4-JL-1)) */
1231:cmsis/device/stm32f4xx_adc.c ****   tmpreg2 = JSQR_JSQ_SET << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1022              		.loc 1 1231 0
 1023 0026 D21A     		subs	r2, r2, r3	@ tmp199, Rank, tmp195
 1024              	.LVL106:
 1025 0028 931C     		adds	r3, r2, #2	@ tmp201, tmp199,
 1026 002a DAB2     		uxtb	r2, r3	@ D.6770, tmp201
 1027 002c 02EB8203 		add	r3, r2, r2, lsl #2	@, tmp205, D.6770, D.6770,
 1028              	.LVL107:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 42


 1029 0030 1F22     		movs	r2, #31	@ tmp207,
 1030 0032 02FA03F2 		lsl	r2, r2, r3	@ tmp206, tmp207, tmp205
 1031              	.LVL108:
1232:cmsis/device/stm32f4xx_adc.c ****   /* Clear the old JSQx bits for the selected rank */
1233:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= ~tmpreg2;
 1032              		.loc 1 1233 0
 1033 0036 24EA0204 		bic	r4, r4, r2	@ tmpreg1, tmpreg1, tmp206
 1034              	.LVL109:
1234:cmsis/device/stm32f4xx_adc.c ****   /* Calculate the mask to set: ((Rank-1)+(4-JL-1)) */
1235:cmsis/device/stm32f4xx_adc.c ****   tmpreg2 = (uint32_t)ADC_Channel << (5 * (uint8_t)((Rank + 3) - (tmpreg3 + 1)));
 1035              		.loc 1 1235 0
 1036 003a 01FA03F1 		lsl	r1, r1, r3	@ tmp209, ADC_Channel, tmp205
 1037              	.LVL110:
1236:cmsis/device/stm32f4xx_adc.c ****   /* Set the JSQx bits for the selected rank */
1237:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2;
 1038              		.loc 1 1237 0
 1039 003e 2143     		orrs	r1, r1, r4	@, tmpreg1, tmp209, tmpreg1
 1040              	.LVL111:
1238:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
1239:cmsis/device/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1041              		.loc 1 1239 0
 1042 0040 8163     		str	r1, [r0, #56]	@ tmpreg1, ADCx_5(D)->JSQR
1240:cmsis/device/stm32f4xx_adc.c **** }
 1043              		.loc 1 1240 0
 1044 0042 70BC     		pop	{r4, r5, r6}
 1045 0044 7047     		bx	lr
 1046              	.LVL112:
 1047              	.L62:
1200:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
 1048              		.loc 1 1200 0
 1049 0046 01EB4104 		add	r4, r1, r1, lsl #1	@, tmp181, ADC_Channel, ADC_Channel,
 1050 004a 1E3C     		subs	r4, r4, #30	@ D.6762, tmp181,
1198:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 = ADCx->SMPR1;
 1051              		.loc 1 1198 0
 1052 004c C668     		ldr	r6, [r0, #12]	@ tmpreg1, ADCx_5(D)->SMPR1
 1053              	.LVL113:
1200:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = SMPR1_SMP_SET << (3*(ADC_Channel - 10));
 1054              		.loc 1 1200 0
 1055 004e 0725     		movs	r5, #7	@ tmp183,
 1056 0050 05FA04F5 		lsl	r5, r5, r4	@ tmp182, tmp183, D.6762
 1057              	.LVL114:
1202:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 &= ~tmpreg2;
 1058              		.loc 1 1202 0
 1059 0054 26EA0505 		bic	r5, r6, r5	@ tmpreg1, tmpreg1, tmp182
 1060              	.LVL115:
1204:cmsis/device/stm32f4xx_adc.c ****     tmpreg2 = (uint32_t)ADC_SampleTime << (3*(ADC_Channel - 10));
 1061              		.loc 1 1204 0
 1062 0058 03FA04F3 		lsl	r3, r3, r4	@ tmp185, ADC_SampleTime, D.6762
 1063              	.LVL116:
1206:cmsis/device/stm32f4xx_adc.c ****     tmpreg1 |= tmpreg2;
 1064              		.loc 1 1206 0
 1065 005c 45EA0304 		orr	r4, r5, r3	@ tmpreg1, tmpreg1, tmp185
 1066              	.LVL117:
1208:cmsis/device/stm32f4xx_adc.c ****     ADCx->SMPR1 = tmpreg1;
 1067              		.loc 1 1208 0
 1068 0060 C460     		str	r4, [r0, #12]	@ tmpreg1, ADCx_5(D)->SMPR1
 1069 0062 DDE7     		b	.L61	@
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 43


 1070              		.cfi_endproc
 1071              	.LFE133:
 1072              		.size	ADC_InjectedChannelConfig, .-ADC_InjectedChannelConfig
 1073              		.section	.text.ADC_InjectedSequencerLengthConfig,"ax",%progbits
 1074              		.align	2
 1075              		.global	ADC_InjectedSequencerLengthConfig
 1076              		.thumb
 1077              		.thumb_func
 1078              		.type	ADC_InjectedSequencerLengthConfig, %function
 1079              	ADC_InjectedSequencerLengthConfig:
 1080              	.LFB134:
1241:cmsis/device/stm32f4xx_adc.c **** 
1242:cmsis/device/stm32f4xx_adc.c **** /**
1243:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures the sequencer length for injected channels
1244:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1245:cmsis/device/stm32f4xx_adc.c ****   * @param  Length: The sequencer length. 
1246:cmsis/device/stm32f4xx_adc.c ****   *          This parameter must be a number between 1 to 4.
1247:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1248:cmsis/device/stm32f4xx_adc.c ****   */
1249:cmsis/device/stm32f4xx_adc.c **** void ADC_InjectedSequencerLengthConfig(ADC_TypeDef* ADCx, uint8_t Length)
1250:cmsis/device/stm32f4xx_adc.c **** {
 1081              		.loc 1 1250 0
 1082              		.cfi_startproc
 1083              		@ args = 0, pretend = 0, frame = 0
 1084              		@ frame_needed = 0, uses_anonymous_args = 0
 1085              		@ link register save eliminated.
 1086              	.LVL118:
1251:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg1 = 0;
1252:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg2 = 0;
1253:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1254:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1255:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_LENGTH(Length));
1256:cmsis/device/stm32f4xx_adc.c ****   
1257:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
1258:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 = ADCx->JSQR;
 1087              		.loc 1 1258 0
 1088 0000 836B     		ldr	r3, [r0, #56]	@ tmpreg1, ADCx_3(D)->JSQR
 1089              	.LVL119:
1259:cmsis/device/stm32f4xx_adc.c ****   
1260:cmsis/device/stm32f4xx_adc.c ****   /* Clear the old injected sequence length JL bits */
1261:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
1262:cmsis/device/stm32f4xx_adc.c ****   
1263:cmsis/device/stm32f4xx_adc.c ****   /* Set the injected sequence length JL bits */
1264:cmsis/device/stm32f4xx_adc.c ****   tmpreg2 = Length - 1; 
 1090              		.loc 1 1264 0
 1091 0002 0139     		subs	r1, r1, #1	@ tmp143, Length,
 1092              	.LVL120:
1261:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 &= JSQR_JL_RESET;
 1093              		.loc 1 1261 0
 1094 0004 23F44012 		bic	r2, r3, #3145728	@ tmpreg1, tmpreg1,
 1095              	.LVL121:
1265:cmsis/device/stm32f4xx_adc.c ****   tmpreg1 |= tmpreg2 << 20;
 1096              		.loc 1 1265 0
 1097 0008 42EA0151 		orr	r1, r2, r1, lsl #20	@, tmpreg1, tmpreg1, tmp143,
 1098              	.LVL122:
1266:cmsis/device/stm32f4xx_adc.c ****   
1267:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 44


1268:cmsis/device/stm32f4xx_adc.c ****   ADCx->JSQR = tmpreg1;
 1099              		.loc 1 1268 0
 1100 000c 8163     		str	r1, [r0, #56]	@ tmpreg1, ADCx_3(D)->JSQR
 1101 000e 7047     		bx	lr	@
 1102              		.cfi_endproc
 1103              	.LFE134:
 1104              		.size	ADC_InjectedSequencerLengthConfig, .-ADC_InjectedSequencerLengthConfig
 1105              		.section	.text.ADC_SetInjectedOffset,"ax",%progbits
 1106              		.align	2
 1107              		.global	ADC_SetInjectedOffset
 1108              		.thumb
 1109              		.thumb_func
 1110              		.type	ADC_SetInjectedOffset, %function
 1111              	ADC_SetInjectedOffset:
 1112              	.LFB135:
1269:cmsis/device/stm32f4xx_adc.c **** }
1270:cmsis/device/stm32f4xx_adc.c **** 
1271:cmsis/device/stm32f4xx_adc.c **** /**
1272:cmsis/device/stm32f4xx_adc.c ****   * @brief  Set the injected channels conversion value offset
1273:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1274:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the ADC injected channel to set its offset. 
1275:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1276:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1277:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1278:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1279:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1280:cmsis/device/stm32f4xx_adc.c ****   * @param  Offset: the offset value for the selected ADC injected channel
1281:cmsis/device/stm32f4xx_adc.c ****   *          This parameter must be a 12bit value.
1282:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1283:cmsis/device/stm32f4xx_adc.c ****   */
1284:cmsis/device/stm32f4xx_adc.c **** void ADC_SetInjectedOffset(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel, uint16_t Offset)
1285:cmsis/device/stm32f4xx_adc.c **** {
 1113              		.loc 1 1285 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 8
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117              		@ link register save eliminated.
 1118              	.LVL123:
 1119 0000 82B0     		sub	sp, sp, #8	@,,
 1120              	.LCFI5:
 1121              		.cfi_def_cfa_offset 8
1286:cmsis/device/stm32f4xx_adc.c ****     __IO uint32_t tmp = 0;
 1122              		.loc 1 1286 0
 1123 0002 0023     		movs	r3, #0	@ tmp144,
 1124 0004 0193     		str	r3, [sp, #4]	@ tmp144, tmp
 1125              	.LVL124:
1287:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1288:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1289:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1290:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_OFFSET(Offset));
1291:cmsis/device/stm32f4xx_adc.c ****   
1292:cmsis/device/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1126              		.loc 1 1292 0
 1127 0006 0190     		str	r0, [sp, #4]	@ ADCx, tmp
1293:cmsis/device/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel;
 1128              		.loc 1 1293 0
 1129 0008 0198     		ldr	r0, [sp, #4]	@ tmp.7, tmp
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 45


 1130              	.LVL125:
 1131 000a 0918     		adds	r1, r1, r0	@ tmp.8, ADC_InjectedChannel, tmp.7
 1132              	.LVL126:
 1133 000c 0191     		str	r1, [sp, #4]	@ tmp.8, tmp
 1134              	.LVL127:
1294:cmsis/device/stm32f4xx_adc.c ****   
1295:cmsis/device/stm32f4xx_adc.c ****   /* Set the selected injected channel data offset */
1296:cmsis/device/stm32f4xx_adc.c ****  *(__IO uint32_t *) tmp = (uint32_t)Offset;
 1135              		.loc 1 1296 0
 1136 000e 019B     		ldr	r3, [sp, #4]	@ tmp.9, tmp
 1137 0010 1A60     		str	r2, [r3, #0]	@ Offset, *tmp.10_8
1297:cmsis/device/stm32f4xx_adc.c **** }
 1138              		.loc 1 1297 0
 1139 0012 02B0     		add	sp, sp, #8	@,,
 1140 0014 7047     		bx	lr
 1141              		.cfi_endproc
 1142              	.LFE135:
 1143              		.size	ADC_SetInjectedOffset, .-ADC_SetInjectedOffset
 1144 0016 00BF     		.section	.text.ADC_ExternalTrigInjectedConvConfig,"ax",%progbits
 1145              		.align	2
 1146              		.global	ADC_ExternalTrigInjectedConvConfig
 1147              		.thumb
 1148              		.thumb_func
 1149              		.type	ADC_ExternalTrigInjectedConvConfig, %function
 1150              	ADC_ExternalTrigInjectedConvConfig:
 1151              	.LFB136:
1298:cmsis/device/stm32f4xx_adc.c **** 
1299:cmsis/device/stm32f4xx_adc.c ****  /**
1300:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger for injected channels conversion.
1301:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1302:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConv: specifies the ADC trigger to start injected conversion.
1303:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:                    
1304:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_CC4: Timer1 capture compare4 selected 
1305:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T1_TRGO: Timer1 TRGO event selected 
1306:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_CC1: Timer2 capture compare1 selected 
1307:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T2_TRGO: Timer2 TRGO event selected 
1308:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC2: Timer3 capture compare2 selected 
1309:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T3_CC4: Timer3 capture compare4 selected 
1310:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC1: Timer4 capture compare1 selected             
1311:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC2: Timer4 capture compare2 selected 
1312:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_CC3: Timer4 capture compare3 selected             
1313:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T4_TRGO: Timer4 TRGO event selected 
1314:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_CC4: Timer5 capture compare4 selected             
1315:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T5_TRGO: Timer5 TRGO event selected                  
1316:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC2: Timer8 capture compare2 selected
1317:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC3: Timer8 capture compare3 selected             
1318:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_T8_CC4: Timer8 capture compare4 selected 
1319:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConv_Ext_IT15: External interrupt line 15 event selected  
1320:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1321:cmsis/device/stm32f4xx_adc.c ****   */
1322:cmsis/device/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConv)
1323:cmsis/device/stm32f4xx_adc.c **** {
 1152              		.loc 1 1323 0
 1153              		.cfi_startproc
 1154              		@ args = 0, pretend = 0, frame = 0
 1155              		@ frame_needed = 0, uses_anonymous_args = 0
 1156              		@ link register save eliminated.
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 46


 1157              	.LVL128:
1324:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
1325:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1326:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1327:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG(ADC_ExternalTrigInjecConv));
1328:cmsis/device/stm32f4xx_adc.c ****   
1329:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
1330:cmsis/device/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1158              		.loc 1 1330 0
 1159 0000 8368     		ldr	r3, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1160              	.LVL129:
1331:cmsis/device/stm32f4xx_adc.c ****   
1332:cmsis/device/stm32f4xx_adc.c ****   /* Clear the old external event selection for injected group */
1333:cmsis/device/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTSEL_RESET;
 1161              		.loc 1 1333 0
 1162 0002 23F47022 		bic	r2, r3, #983040	@ tmpreg, tmpreg,
 1163              	.LVL130:
1334:cmsis/device/stm32f4xx_adc.c ****   
1335:cmsis/device/stm32f4xx_adc.c ****   /* Set the external event selection for injected group */
1336:cmsis/device/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConv;
 1164              		.loc 1 1336 0
 1165 0006 1143     		orrs	r1, r1, r2	@, tmpreg, ADC_ExternalTrigInjecConv, tmpreg
 1166              	.LVL131:
1337:cmsis/device/stm32f4xx_adc.c ****   
1338:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
1339:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1167              		.loc 1 1339 0
 1168 0008 8160     		str	r1, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1169 000a 7047     		bx	lr	@
 1170              		.cfi_endproc
 1171              	.LFE136:
 1172              		.size	ADC_ExternalTrigInjectedConvConfig, .-ADC_ExternalTrigInjectedConvConfig
 1173              		.section	.text.ADC_ExternalTrigInjectedConvEdgeConfig,"ax",%progbits
 1174              		.align	2
 1175              		.global	ADC_ExternalTrigInjectedConvEdgeConfig
 1176              		.thumb
 1177              		.thumb_func
 1178              		.type	ADC_ExternalTrigInjectedConvEdgeConfig, %function
 1179              	ADC_ExternalTrigInjectedConvEdgeConfig:
 1180              	.LFB137:
1340:cmsis/device/stm32f4xx_adc.c **** }
1341:cmsis/device/stm32f4xx_adc.c **** 
1342:cmsis/device/stm32f4xx_adc.c **** /**
1343:cmsis/device/stm32f4xx_adc.c ****   * @brief  Configures the ADCx external trigger edge for injected channels conversion.
1344:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1345:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_ExternalTrigInjecConvEdge: specifies the ADC external trigger edge
1346:cmsis/device/stm32f4xx_adc.c ****   *         to start injected conversion. 
1347:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1348:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_None: external trigger disabled for 
1349:cmsis/device/stm32f4xx_adc.c ****   *                                                     injected conversion
1350:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Rising: detection on rising edge
1351:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_Falling: detection on falling edge
1352:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_ExternalTrigInjecConvEdge_RisingFalling: detection on both rising 
1353:cmsis/device/stm32f4xx_adc.c ****   *                                                               and falling edge
1354:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1355:cmsis/device/stm32f4xx_adc.c ****   */
1356:cmsis/device/stm32f4xx_adc.c **** void ADC_ExternalTrigInjectedConvEdgeConfig(ADC_TypeDef* ADCx, uint32_t ADC_ExternalTrigInjecConvEd
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 47


1357:cmsis/device/stm32f4xx_adc.c **** {
 1181              		.loc 1 1357 0
 1182              		.cfi_startproc
 1183              		@ args = 0, pretend = 0, frame = 0
 1184              		@ frame_needed = 0, uses_anonymous_args = 0
 1185              		@ link register save eliminated.
 1186              	.LVL132:
1358:cmsis/device/stm32f4xx_adc.c ****   uint32_t tmpreg = 0;
1359:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1360:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1361:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_EXT_INJEC_TRIG_EDGE(ADC_ExternalTrigInjecConvEdge));
1362:cmsis/device/stm32f4xx_adc.c ****   /* Get the old register value */
1363:cmsis/device/stm32f4xx_adc.c ****   tmpreg = ADCx->CR2;
 1187              		.loc 1 1363 0
 1188 0000 8368     		ldr	r3, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1189              	.LVL133:
1364:cmsis/device/stm32f4xx_adc.c ****   /* Clear the old external trigger edge for injected group */
1365:cmsis/device/stm32f4xx_adc.c ****   tmpreg &= CR2_JEXTEN_RESET;
 1190              		.loc 1 1365 0
 1191 0002 23F44012 		bic	r2, r3, #3145728	@ tmpreg, tmpreg,
 1192              	.LVL134:
1366:cmsis/device/stm32f4xx_adc.c ****   /* Set the new external trigger edge for injected group */
1367:cmsis/device/stm32f4xx_adc.c ****   tmpreg |= ADC_ExternalTrigInjecConvEdge;
 1193              		.loc 1 1367 0
 1194 0006 1143     		orrs	r1, r1, r2	@, tmpreg, ADC_ExternalTrigInjecConvEdge, tmpreg
 1195              	.LVL135:
1368:cmsis/device/stm32f4xx_adc.c ****   /* Store the new register value */
1369:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR2 = tmpreg;
 1196              		.loc 1 1369 0
 1197 0008 8160     		str	r1, [r0, #8]	@ tmpreg, ADCx_2(D)->CR2
 1198 000a 7047     		bx	lr	@
 1199              		.cfi_endproc
 1200              	.LFE137:
 1201              		.size	ADC_ExternalTrigInjectedConvEdgeConfig, .-ADC_ExternalTrigInjectedConvEdgeConfig
 1202              		.section	.text.ADC_SoftwareStartInjectedConv,"ax",%progbits
 1203              		.align	2
 1204              		.global	ADC_SoftwareStartInjectedConv
 1205              		.thumb
 1206              		.thumb_func
 1207              		.type	ADC_SoftwareStartInjectedConv, %function
 1208              	ADC_SoftwareStartInjectedConv:
 1209              	.LFB138:
1370:cmsis/device/stm32f4xx_adc.c **** }
1371:cmsis/device/stm32f4xx_adc.c **** 
1372:cmsis/device/stm32f4xx_adc.c **** /**
1373:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables the selected ADC software start conversion of the injected channels.
1374:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1375:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1376:cmsis/device/stm32f4xx_adc.c ****   */
1377:cmsis/device/stm32f4xx_adc.c **** void ADC_SoftwareStartInjectedConv(ADC_TypeDef* ADCx)
1378:cmsis/device/stm32f4xx_adc.c **** {
 1210              		.loc 1 1378 0
 1211              		.cfi_startproc
 1212              		@ args = 0, pretend = 0, frame = 0
 1213              		@ frame_needed = 0, uses_anonymous_args = 0
 1214              		@ link register save eliminated.
 1215              	.LVL136:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 48


1379:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1380:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1381:cmsis/device/stm32f4xx_adc.c ****   /* Enable the selected ADC conversion for injected group */
1382:cmsis/device/stm32f4xx_adc.c ****   ADCx->CR2 |= (uint32_t)ADC_CR2_JSWSTART;
 1216              		.loc 1 1382 0
 1217 0000 8368     		ldr	r3, [r0, #8]	@ D.6746, ADCx_1(D)->CR2
 1218 0002 43F48001 		orr	r1, r3, #4194304	@ D.6747, D.6746,
 1219 0006 8160     		str	r1, [r0, #8]	@ D.6747, ADCx_1(D)->CR2
 1220 0008 7047     		bx	lr	@
 1221              		.cfi_endproc
 1222              	.LFE138:
 1223              		.size	ADC_SoftwareStartInjectedConv, .-ADC_SoftwareStartInjectedConv
 1224 000a 00BF     		.section	.text.ADC_GetSoftwareStartInjectedConvCmdStatus,"ax",%progbits
 1225              		.align	2
 1226              		.global	ADC_GetSoftwareStartInjectedConvCmdStatus
 1227              		.thumb
 1228              		.thumb_func
 1229              		.type	ADC_GetSoftwareStartInjectedConvCmdStatus, %function
 1230              	ADC_GetSoftwareStartInjectedConvCmdStatus:
 1231              	.LFB139:
1383:cmsis/device/stm32f4xx_adc.c **** }
1384:cmsis/device/stm32f4xx_adc.c **** 
1385:cmsis/device/stm32f4xx_adc.c **** /**
1386:cmsis/device/stm32f4xx_adc.c ****   * @brief  Gets the selected ADC Software start injected conversion Status.
1387:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1388:cmsis/device/stm32f4xx_adc.c ****   * @retval The new state of ADC software start injected conversion (SET or RESET).
1389:cmsis/device/stm32f4xx_adc.c ****   */
1390:cmsis/device/stm32f4xx_adc.c **** FlagStatus ADC_GetSoftwareStartInjectedConvCmdStatus(ADC_TypeDef* ADCx)
1391:cmsis/device/stm32f4xx_adc.c **** {
 1232              		.loc 1 1391 0
 1233              		.cfi_startproc
 1234              		@ args = 0, pretend = 0, frame = 0
 1235              		@ frame_needed = 0, uses_anonymous_args = 0
 1236              		@ link register save eliminated.
 1237              	.LVL137:
1392:cmsis/device/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
1393:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1394:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1395:cmsis/device/stm32f4xx_adc.c ****   
1396:cmsis/device/stm32f4xx_adc.c ****   /* Check the status of JSWSTART bit */
1397:cmsis/device/stm32f4xx_adc.c ****   if ((ADCx->CR2 & ADC_CR2_JSWSTART) != (uint32_t)RESET)
 1238              		.loc 1 1397 0
 1239 0000 8068     		ldr	r0, [r0, #8]	@ D.6739, ADCx_3(D)->CR2
 1240              	.LVL138:
1398:cmsis/device/stm32f4xx_adc.c ****   {
1399:cmsis/device/stm32f4xx_adc.c ****     /* JSWSTART bit is set */
1400:cmsis/device/stm32f4xx_adc.c ****     bitstatus = SET;
1401:cmsis/device/stm32f4xx_adc.c ****   }
1402:cmsis/device/stm32f4xx_adc.c ****   else
1403:cmsis/device/stm32f4xx_adc.c ****   {
1404:cmsis/device/stm32f4xx_adc.c ****     /* JSWSTART bit is reset */
1405:cmsis/device/stm32f4xx_adc.c ****     bitstatus = RESET;
1406:cmsis/device/stm32f4xx_adc.c ****   }
1407:cmsis/device/stm32f4xx_adc.c ****   /* Return the JSWSTART bit status */
1408:cmsis/device/stm32f4xx_adc.c ****   return  bitstatus;
1409:cmsis/device/stm32f4xx_adc.c **** }
 1241              		.loc 1 1409 0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 49


 1242 0002 C0F38050 		ubfx	r0, r0, #22, #1	@, D.6739,,
 1243              	.LVL139:
 1244 0006 7047     		bx	lr	@
 1245              		.cfi_endproc
 1246              	.LFE139:
 1247              		.size	ADC_GetSoftwareStartInjectedConvCmdStatus, .-ADC_GetSoftwareStartInjectedConvCmdStatus
 1248              		.section	.text.ADC_AutoInjectedConvCmd,"ax",%progbits
 1249              		.align	2
 1250              		.global	ADC_AutoInjectedConvCmd
 1251              		.thumb
 1252              		.thumb_func
 1253              		.type	ADC_AutoInjectedConvCmd, %function
 1254              	ADC_AutoInjectedConvCmd:
 1255              	.LFB140:
1410:cmsis/device/stm32f4xx_adc.c **** 
1411:cmsis/device/stm32f4xx_adc.c **** /**
1412:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the selected ADC automatic injected group 
1413:cmsis/device/stm32f4xx_adc.c ****   *         conversion after regular one.
1414:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1415:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC auto injected conversion
1416:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1417:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1418:cmsis/device/stm32f4xx_adc.c ****   */
1419:cmsis/device/stm32f4xx_adc.c **** void ADC_AutoInjectedConvCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1420:cmsis/device/stm32f4xx_adc.c **** {
 1256              		.loc 1 1420 0
 1257              		.cfi_startproc
 1258              		@ args = 0, pretend = 0, frame = 0
 1259              		@ frame_needed = 0, uses_anonymous_args = 0
 1260              		@ link register save eliminated.
 1261              	.LVL140:
1421:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1422:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1423:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1424:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1425:cmsis/device/stm32f4xx_adc.c ****   {
1426:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC automatic injected group conversion */
1427:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JAUTO;
 1262              		.loc 1 1427 0
 1263 0000 4368     		ldr	r3, [r0, #4]	@ D.6734,
1424:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1264              		.loc 1 1424 0
 1265 0002 19B9     		cbnz	r1, .L72	@ NewState,
1428:cmsis/device/stm32f4xx_adc.c ****   }
1429:cmsis/device/stm32f4xx_adc.c ****   else
1430:cmsis/device/stm32f4xx_adc.c ****   {
1431:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC automatic injected group conversion */
1432:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JAUTO);
 1266              		.loc 1 1432 0
 1267 0004 23F48061 		bic	r1, r3, #1024	@ D.6738, D.6737,
 1268              	.LVL141:
 1269 0008 4160     		str	r1, [r0, #4]	@ D.6738,
 1270 000a 7047     		bx	lr	@
 1271              	.LVL142:
 1272              	.L72:
1427:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JAUTO;
 1273              		.loc 1 1427 0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 50


 1274 000c 43F48062 		orr	r2, r3, #1024	@ D.6735, D.6734,
 1275 0010 4260     		str	r2, [r0, #4]	@ D.6735,
 1276 0012 7047     		bx	lr	@
 1277              		.cfi_endproc
 1278              	.LFE140:
 1279              		.size	ADC_AutoInjectedConvCmd, .-ADC_AutoInjectedConvCmd
 1280              		.section	.text.ADC_InjectedDiscModeCmd,"ax",%progbits
 1281              		.align	2
 1282              		.global	ADC_InjectedDiscModeCmd
 1283              		.thumb
 1284              		.thumb_func
 1285              		.type	ADC_InjectedDiscModeCmd, %function
 1286              	ADC_InjectedDiscModeCmd:
 1287              	.LFB141:
1433:cmsis/device/stm32f4xx_adc.c ****   }
1434:cmsis/device/stm32f4xx_adc.c **** }
1435:cmsis/device/stm32f4xx_adc.c **** 
1436:cmsis/device/stm32f4xx_adc.c **** /**
1437:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the discontinuous mode for injected group 
1438:cmsis/device/stm32f4xx_adc.c ****   *         channel for the specified ADC
1439:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1440:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the selected ADC discontinuous mode on injected
1441:cmsis/device/stm32f4xx_adc.c ****   *         group channel.
1442:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1443:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1444:cmsis/device/stm32f4xx_adc.c ****   */
1445:cmsis/device/stm32f4xx_adc.c **** void ADC_InjectedDiscModeCmd(ADC_TypeDef* ADCx, FunctionalState NewState)
1446:cmsis/device/stm32f4xx_adc.c **** {
 1288              		.loc 1 1446 0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 1292              		@ link register save eliminated.
 1293              	.LVL143:
1447:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1448:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1449:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1450:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1451:cmsis/device/stm32f4xx_adc.c ****   {
1452:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC injected discontinuous mode */
1453:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JDISCEN;
 1294              		.loc 1 1453 0
 1295 0000 4368     		ldr	r3, [r0, #4]	@ D.6727,
1450:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1296              		.loc 1 1450 0
 1297 0002 19B9     		cbnz	r1, .L76	@ NewState,
1454:cmsis/device/stm32f4xx_adc.c ****   }
1455:cmsis/device/stm32f4xx_adc.c ****   else
1456:cmsis/device/stm32f4xx_adc.c ****   {
1457:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC injected discontinuous mode */
1458:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 &= (uint32_t)(~ADC_CR1_JDISCEN);
 1298              		.loc 1 1458 0
 1299 0004 23F48051 		bic	r1, r3, #4096	@ D.6731, D.6730,
 1300              	.LVL144:
 1301 0008 4160     		str	r1, [r0, #4]	@ D.6731,
 1302 000a 7047     		bx	lr	@
 1303              	.LVL145:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 51


 1304              	.L76:
1453:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= (uint32_t)ADC_CR1_JDISCEN;
 1305              		.loc 1 1453 0
 1306 000c 43F48052 		orr	r2, r3, #4096	@ D.6728, D.6727,
 1307 0010 4260     		str	r2, [r0, #4]	@ D.6728,
 1308 0012 7047     		bx	lr	@
 1309              		.cfi_endproc
 1310              	.LFE141:
 1311              		.size	ADC_InjectedDiscModeCmd, .-ADC_InjectedDiscModeCmd
 1312              		.section	.text.ADC_GetInjectedConversionValue,"ax",%progbits
 1313              		.align	2
 1314              		.global	ADC_GetInjectedConversionValue
 1315              		.thumb
 1316              		.thumb_func
 1317              		.type	ADC_GetInjectedConversionValue, %function
 1318              	ADC_GetInjectedConversionValue:
 1319              	.LFB142:
1459:cmsis/device/stm32f4xx_adc.c ****   }
1460:cmsis/device/stm32f4xx_adc.c **** }
1461:cmsis/device/stm32f4xx_adc.c **** 
1462:cmsis/device/stm32f4xx_adc.c **** /**
1463:cmsis/device/stm32f4xx_adc.c ****   * @brief  Returns the ADC injected channel conversion result
1464:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1465:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_InjectedChannel: the converted ADC injected channel.
1466:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1467:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_1: Injected Channel1 selected
1468:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_2: Injected Channel2 selected
1469:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_3: Injected Channel3 selected
1470:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_InjectedChannel_4: Injected Channel4 selected
1471:cmsis/device/stm32f4xx_adc.c ****   * @retval The Data conversion value.
1472:cmsis/device/stm32f4xx_adc.c ****   */
1473:cmsis/device/stm32f4xx_adc.c **** uint16_t ADC_GetInjectedConversionValue(ADC_TypeDef* ADCx, uint8_t ADC_InjectedChannel)
1474:cmsis/device/stm32f4xx_adc.c **** {
 1320              		.loc 1 1474 0
 1321              		.cfi_startproc
 1322              		@ args = 0, pretend = 0, frame = 8
 1323              		@ frame_needed = 0, uses_anonymous_args = 0
 1324              		@ link register save eliminated.
 1325              	.LVL146:
 1326 0000 82B0     		sub	sp, sp, #8	@,,
 1327              	.LCFI6:
 1328              		.cfi_def_cfa_offset 8
1475:cmsis/device/stm32f4xx_adc.c ****   __IO uint32_t tmp = 0;
 1329              		.loc 1 1475 0
 1330 0002 0023     		movs	r3, #0	@ tmp146,
 1331 0004 0193     		str	r3, [sp, #4]	@ tmp146, tmp
 1332              	.LVL147:
1476:cmsis/device/stm32f4xx_adc.c ****   
1477:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1478:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1479:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_INJECTED_CHANNEL(ADC_InjectedChannel));
1480:cmsis/device/stm32f4xx_adc.c **** 
1481:cmsis/device/stm32f4xx_adc.c ****   tmp = (uint32_t)ADCx;
 1333              		.loc 1 1481 0
 1334 0006 0190     		str	r0, [sp, #4]	@ ADCx, tmp
1482:cmsis/device/stm32f4xx_adc.c ****   tmp += ADC_InjectedChannel + JDR_OFFSET;
 1335              		.loc 1 1482 0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 52


 1336 0008 0198     		ldr	r0, [sp, #4]	@ tmp.2, tmp
 1337              	.LVL148:
 1338 000a 2830     		adds	r0, r0, #40	@ tmp147, tmp.2,
 1339 000c 4118     		adds	r1, r0, r1	@ tmp.3, tmp147, ADC_InjectedChannel
 1340              	.LVL149:
 1341 000e 0191     		str	r1, [sp, #4]	@ tmp.3, tmp
 1342              	.LVL150:
1483:cmsis/device/stm32f4xx_adc.c ****   
1484:cmsis/device/stm32f4xx_adc.c ****   /* Returns the selected injected channel conversion data value */
1485:cmsis/device/stm32f4xx_adc.c ****   return (uint16_t) (*(__IO uint32_t*)  tmp); 
 1343              		.loc 1 1485 0
 1344 0010 019A     		ldr	r2, [sp, #4]	@ tmp.4, tmp
 1345 0012 1368     		ldr	r3, [r2, #0]	@ D.6723, *tmp.5_9
1486:cmsis/device/stm32f4xx_adc.c **** }
 1346              		.loc 1 1486 0
 1347 0014 98B2     		uxth	r0, r3	@, D.6723
 1348 0016 02B0     		add	sp, sp, #8	@,,
 1349 0018 7047     		bx	lr
 1350              		.cfi_endproc
 1351              	.LFE142:
 1352              		.size	ADC_GetInjectedConversionValue, .-ADC_GetInjectedConversionValue
 1353 001a 00BF     		.section	.text.ADC_ITConfig,"ax",%progbits
 1354              		.align	2
 1355              		.global	ADC_ITConfig
 1356              		.thumb
 1357              		.thumb_func
 1358              		.type	ADC_ITConfig, %function
 1359              	ADC_ITConfig:
 1360              	.LFB143:
1487:cmsis/device/stm32f4xx_adc.c **** /**
1488:cmsis/device/stm32f4xx_adc.c ****   * @}
1489:cmsis/device/stm32f4xx_adc.c ****   */
1490:cmsis/device/stm32f4xx_adc.c **** 
1491:cmsis/device/stm32f4xx_adc.c **** /** @defgroup ADC_Group7 Interrupts and flags management functions
1492:cmsis/device/stm32f4xx_adc.c ****  *  @brief   Interrupts and flags management functions
1493:cmsis/device/stm32f4xx_adc.c ****  *
1494:cmsis/device/stm32f4xx_adc.c **** @verbatim   
1495:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================
1496:cmsis/device/stm32f4xx_adc.c ****                    Interrupts and flags management functions
1497:cmsis/device/stm32f4xx_adc.c ****  ===============================================================================  
1498:cmsis/device/stm32f4xx_adc.c **** 
1499:cmsis/device/stm32f4xx_adc.c ****   This section provides functions allowing to configure the ADC Interrupts and 
1500:cmsis/device/stm32f4xx_adc.c ****   to get the status and clear flags and Interrupts pending bits.
1501:cmsis/device/stm32f4xx_adc.c ****   
1502:cmsis/device/stm32f4xx_adc.c ****   Each ADC provides 4 Interrupts sources and 6 Flags which can be divided into 
1503:cmsis/device/stm32f4xx_adc.c ****   3 groups:
1504:cmsis/device/stm32f4xx_adc.c ****   
1505:cmsis/device/stm32f4xx_adc.c ****   I. Flags and Interrupts for ADC regular channels
1506:cmsis/device/stm32f4xx_adc.c ****   =================================================
1507:cmsis/device/stm32f4xx_adc.c ****   Flags :
1508:cmsis/device/stm32f4xx_adc.c ****   ---------- 
1509:cmsis/device/stm32f4xx_adc.c ****      1. ADC_FLAG_OVR : Overrun detection when regular converted data are lost
1510:cmsis/device/stm32f4xx_adc.c **** 
1511:cmsis/device/stm32f4xx_adc.c ****      2. ADC_FLAG_EOC : Regular channel end of conversion ==> to indicate (depending 
1512:cmsis/device/stm32f4xx_adc.c ****               on EOCS bit, managed by ADC_EOCOnEachRegularChannelCmd() ) the end of:
1513:cmsis/device/stm32f4xx_adc.c ****                ==> a regular CHANNEL conversion 
1514:cmsis/device/stm32f4xx_adc.c ****                ==> sequence of regular GROUP conversions .
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 53


1515:cmsis/device/stm32f4xx_adc.c **** 
1516:cmsis/device/stm32f4xx_adc.c ****      3. ADC_FLAG_STRT: Regular channel start ==> to indicate when regular CHANNEL 
1517:cmsis/device/stm32f4xx_adc.c ****               conversion starts.
1518:cmsis/device/stm32f4xx_adc.c **** 
1519:cmsis/device/stm32f4xx_adc.c ****   Interrupts :
1520:cmsis/device/stm32f4xx_adc.c ****   ------------
1521:cmsis/device/stm32f4xx_adc.c ****      1. ADC_IT_OVR : specifies the interrupt source for Overrun detection event.  
1522:cmsis/device/stm32f4xx_adc.c ****      2. ADC_IT_EOC : specifies the interrupt source for Regular channel end of 
1523:cmsis/device/stm32f4xx_adc.c ****                      conversion event.
1524:cmsis/device/stm32f4xx_adc.c ****   
1525:cmsis/device/stm32f4xx_adc.c ****   
1526:cmsis/device/stm32f4xx_adc.c ****   II. Flags and Interrupts for ADC Injected channels
1527:cmsis/device/stm32f4xx_adc.c ****   =================================================
1528:cmsis/device/stm32f4xx_adc.c ****   Flags :
1529:cmsis/device/stm32f4xx_adc.c ****   ---------- 
1530:cmsis/device/stm32f4xx_adc.c ****      1. ADC_FLAG_JEOC : Injected channel end of conversion ==> to indicate at 
1531:cmsis/device/stm32f4xx_adc.c ****                the end of injected GROUP conversion  
1532:cmsis/device/stm32f4xx_adc.c ****               
1533:cmsis/device/stm32f4xx_adc.c ****      2. ADC_FLAG_JSTRT: Injected channel start ==> to indicate hardware when 
1534:cmsis/device/stm32f4xx_adc.c ****                injected GROUP conversion starts.
1535:cmsis/device/stm32f4xx_adc.c **** 
1536:cmsis/device/stm32f4xx_adc.c ****   Interrupts :
1537:cmsis/device/stm32f4xx_adc.c ****   ------------
1538:cmsis/device/stm32f4xx_adc.c ****      1. ADC_IT_JEOC : specifies the interrupt source for Injected channel end of 
1539:cmsis/device/stm32f4xx_adc.c ****                       conversion event.     
1540:cmsis/device/stm32f4xx_adc.c **** 
1541:cmsis/device/stm32f4xx_adc.c ****   III. General Flags and Interrupts for the ADC
1542:cmsis/device/stm32f4xx_adc.c ****   ================================================= 
1543:cmsis/device/stm32f4xx_adc.c ****   Flags :
1544:cmsis/device/stm32f4xx_adc.c ****   ---------- 
1545:cmsis/device/stm32f4xx_adc.c ****      1. ADC_FLAG_AWD: Analog watchdog ==> to indicate if the converted voltage 
1546:cmsis/device/stm32f4xx_adc.c ****               crosses the programmed thresholds values.
1547:cmsis/device/stm32f4xx_adc.c ****               
1548:cmsis/device/stm32f4xx_adc.c ****   Interrupts :
1549:cmsis/device/stm32f4xx_adc.c ****   ------------
1550:cmsis/device/stm32f4xx_adc.c ****      1. ADC_IT_AWD : specifies the interrupt source for Analog watchdog event. 
1551:cmsis/device/stm32f4xx_adc.c **** 
1552:cmsis/device/stm32f4xx_adc.c ****   
1553:cmsis/device/stm32f4xx_adc.c ****   The user should identify which mode will be used in his application to manage 
1554:cmsis/device/stm32f4xx_adc.c ****   the ADC controller events: Polling mode or Interrupt mode.
1555:cmsis/device/stm32f4xx_adc.c ****   
1556:cmsis/device/stm32f4xx_adc.c ****   In the Polling Mode it is advised to use the following functions:
1557:cmsis/device/stm32f4xx_adc.c ****       - ADC_GetFlagStatus() : to check if flags events occur. 
1558:cmsis/device/stm32f4xx_adc.c ****       - ADC_ClearFlag()     : to clear the flags events.
1559:cmsis/device/stm32f4xx_adc.c ****       
1560:cmsis/device/stm32f4xx_adc.c ****   In the Interrupt Mode it is advised to use the following functions:
1561:cmsis/device/stm32f4xx_adc.c ****      - ADC_ITConfig()          : to enable or disable the interrupt source.
1562:cmsis/device/stm32f4xx_adc.c ****      - ADC_GetITStatus()       : to check if Interrupt occurs.
1563:cmsis/device/stm32f4xx_adc.c ****      - ADC_ClearITPendingBit() : to clear the Interrupt pending Bit 
1564:cmsis/device/stm32f4xx_adc.c ****                                  (corresponding Flag). 
1565:cmsis/device/stm32f4xx_adc.c **** @endverbatim
1566:cmsis/device/stm32f4xx_adc.c ****   * @{
1567:cmsis/device/stm32f4xx_adc.c ****   */ 
1568:cmsis/device/stm32f4xx_adc.c **** /**
1569:cmsis/device/stm32f4xx_adc.c ****   * @brief  Enables or disables the specified ADC interrupts.
1570:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1571:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt sources to be enabled or disabled. 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 54


1572:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1573:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1574:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1575:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1576:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt enable                       
1577:cmsis/device/stm32f4xx_adc.c ****   * @param  NewState: new state of the specified ADC interrupts.
1578:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be: ENABLE or DISABLE.
1579:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1580:cmsis/device/stm32f4xx_adc.c ****   */
1581:cmsis/device/stm32f4xx_adc.c **** void ADC_ITConfig(ADC_TypeDef* ADCx, uint16_t ADC_IT, FunctionalState NewState)  
1582:cmsis/device/stm32f4xx_adc.c **** {
 1361              		.loc 1 1582 0
 1362              		.cfi_startproc
 1363              		@ args = 0, pretend = 0, frame = 0
 1364              		@ frame_needed = 0, uses_anonymous_args = 0
 1365              		@ link register save eliminated.
 1366              	.LVL151:
1583:cmsis/device/stm32f4xx_adc.c ****   uint32_t itmask = 0;
1584:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1585:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1586:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
1587:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
1588:cmsis/device/stm32f4xx_adc.c **** 
1589:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1590:cmsis/device/stm32f4xx_adc.c ****   itmask = (uint8_t)ADC_IT;
1591:cmsis/device/stm32f4xx_adc.c ****   itmask = (uint32_t)0x01 << itmask;    
 1367              		.loc 1 1591 0
 1368 0000 0123     		movs	r3, #1	@ tmp146,
 1369 0002 C9B2     		uxtb	r1, r1	@ ADC_IT, ADC_IT
 1370              	.LVL152:
 1371 0004 03FA01F1 		lsl	r1, r3, r1	@ itmask, tmp146, ADC_IT
 1372              	.LVL153:
1592:cmsis/device/stm32f4xx_adc.c **** 
1593:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
1594:cmsis/device/stm32f4xx_adc.c ****   {
1595:cmsis/device/stm32f4xx_adc.c ****     /* Enable the selected ADC interrupts */
1596:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= itmask;
 1373              		.loc 1 1596 0
 1374 0008 4368     		ldr	r3, [r0, #4]	@ D.6709,
1593:cmsis/device/stm32f4xx_adc.c ****   if (NewState != DISABLE)
 1375              		.loc 1 1593 0
 1376 000a 1AB9     		cbnz	r2, .L81	@ NewState,
1597:cmsis/device/stm32f4xx_adc.c ****   }
1598:cmsis/device/stm32f4xx_adc.c ****   else
1599:cmsis/device/stm32f4xx_adc.c ****   {
1600:cmsis/device/stm32f4xx_adc.c ****     /* Disable the selected ADC interrupts */
1601:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 &= (~(uint32_t)itmask);
 1377              		.loc 1 1601 0
 1378 000c 23EA0102 		bic	r2, r3, r1	@ D.6714, D.6712, itmask
 1379              	.LVL154:
 1380 0010 4260     		str	r2, [r0, #4]	@ D.6714,
 1381 0012 7047     		bx	lr	@
 1382              	.LVL155:
 1383              	.L81:
1596:cmsis/device/stm32f4xx_adc.c ****     ADCx->CR1 |= itmask;
 1384              		.loc 1 1596 0
 1385 0014 1943     		orrs	r1, r1, r3	@, D.6710, itmask, D.6709
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 55


 1386              	.LVL156:
 1387 0016 4160     		str	r1, [r0, #4]	@ D.6710,
 1388 0018 7047     		bx	lr	@
 1389              		.cfi_endproc
 1390              	.LFE143:
 1391              		.size	ADC_ITConfig, .-ADC_ITConfig
 1392 001a 00BF     		.section	.text.ADC_GetFlagStatus,"ax",%progbits
 1393              		.align	2
 1394              		.global	ADC_GetFlagStatus
 1395              		.thumb
 1396              		.thumb_func
 1397              		.type	ADC_GetFlagStatus, %function
 1398              	ADC_GetFlagStatus:
 1399              	.LFB144:
1602:cmsis/device/stm32f4xx_adc.c ****   }
1603:cmsis/device/stm32f4xx_adc.c **** }
1604:cmsis/device/stm32f4xx_adc.c **** 
1605:cmsis/device/stm32f4xx_adc.c **** /**
1606:cmsis/device/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC flag is set or not.
1607:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1608:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to check. 
1609:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1610:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1611:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1612:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1613:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1614:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1615:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                                                 
1616:cmsis/device/stm32f4xx_adc.c ****   * @retval The new state of ADC_FLAG (SET or RESET).
1617:cmsis/device/stm32f4xx_adc.c ****   */
1618:cmsis/device/stm32f4xx_adc.c **** FlagStatus ADC_GetFlagStatus(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1619:cmsis/device/stm32f4xx_adc.c **** {
 1400              		.loc 1 1619 0
 1401              		.cfi_startproc
 1402              		@ args = 0, pretend = 0, frame = 0
 1403              		@ frame_needed = 0, uses_anonymous_args = 0
 1404              		@ link register save eliminated.
 1405              	.LVL157:
1620:cmsis/device/stm32f4xx_adc.c ****   FlagStatus bitstatus = RESET;
1621:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1622:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1623:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_GET_FLAG(ADC_FLAG));
1624:cmsis/device/stm32f4xx_adc.c **** 
1625:cmsis/device/stm32f4xx_adc.c ****   /* Check the status of the specified ADC flag */
1626:cmsis/device/stm32f4xx_adc.c ****   if ((ADCx->SR & ADC_FLAG) != (uint8_t)RESET)
 1406              		.loc 1 1626 0
 1407 0000 0368     		ldr	r3, [r0, #0]	@ D.6697, ADCx_3(D)->SR
 1408              	.LVL158:
 1409 0002 1942     		tst	r1, r3	@ ADC_FLAG, D.6697
1627:cmsis/device/stm32f4xx_adc.c ****   {
1628:cmsis/device/stm32f4xx_adc.c ****     /* ADC_FLAG is set */
1629:cmsis/device/stm32f4xx_adc.c ****     bitstatus = SET;
1630:cmsis/device/stm32f4xx_adc.c ****   }
1631:cmsis/device/stm32f4xx_adc.c ****   else
1632:cmsis/device/stm32f4xx_adc.c ****   {
1633:cmsis/device/stm32f4xx_adc.c ****     /* ADC_FLAG is reset */
1634:cmsis/device/stm32f4xx_adc.c ****     bitstatus = RESET;
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 56


1635:cmsis/device/stm32f4xx_adc.c ****   }
1636:cmsis/device/stm32f4xx_adc.c ****   /* Return the ADC_FLAG status */
1637:cmsis/device/stm32f4xx_adc.c ****   return  bitstatus;
1638:cmsis/device/stm32f4xx_adc.c **** }
 1410              		.loc 1 1638 0
 1411 0004 0CBF     		ite	eq	@
 1412 0006 0020     		moveq	r0, #0	@,
 1413 0008 0120     		movne	r0, #1	@,
 1414              	.LVL159:
 1415 000a 7047     		bx	lr	@
 1416              		.cfi_endproc
 1417              	.LFE144:
 1418              		.size	ADC_GetFlagStatus, .-ADC_GetFlagStatus
 1419              		.section	.text.ADC_ClearFlag,"ax",%progbits
 1420              		.align	2
 1421              		.global	ADC_ClearFlag
 1422              		.thumb
 1423              		.thumb_func
 1424              		.type	ADC_ClearFlag, %function
 1425              	ADC_ClearFlag:
 1426              	.LFB145:
1639:cmsis/device/stm32f4xx_adc.c **** 
1640:cmsis/device/stm32f4xx_adc.c **** /**
1641:cmsis/device/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's pending flags.
1642:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1643:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_FLAG: specifies the flag to clear. 
1644:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be any combination of the following values:
1645:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_AWD: Analog watchdog flag
1646:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_EOC: End of conversion flag
1647:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JEOC: End of injected group conversion flag
1648:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_JSTRT: Start of injected group conversion flag
1649:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_STRT: Start of regular group conversion flag
1650:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_FLAG_OVR: Overrun flag                          
1651:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1652:cmsis/device/stm32f4xx_adc.c ****   */
1653:cmsis/device/stm32f4xx_adc.c **** void ADC_ClearFlag(ADC_TypeDef* ADCx, uint8_t ADC_FLAG)
1654:cmsis/device/stm32f4xx_adc.c **** {
 1427              		.loc 1 1654 0
 1428              		.cfi_startproc
 1429              		@ args = 0, pretend = 0, frame = 0
 1430              		@ frame_needed = 0, uses_anonymous_args = 0
 1431              		@ link register save eliminated.
 1432              	.LVL160:
1655:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1656:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1657:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_CLEAR_FLAG(ADC_FLAG));
1658:cmsis/device/stm32f4xx_adc.c **** 
1659:cmsis/device/stm32f4xx_adc.c ****   /* Clear the selected ADC flags */
1660:cmsis/device/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)ADC_FLAG;
 1433              		.loc 1 1660 0
 1434 0000 C943     		mvns	r1, r1	@ D.6696, ADC_FLAG
 1435              	.LVL161:
 1436 0002 0160     		str	r1, [r0, #0]	@ D.6696, ADCx_4(D)->SR
 1437 0004 7047     		bx	lr	@
 1438              		.cfi_endproc
 1439              	.LFE145:
 1440              		.size	ADC_ClearFlag, .-ADC_ClearFlag
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 57


 1441 0006 00BF     		.section	.text.ADC_GetITStatus,"ax",%progbits
 1442              		.align	2
 1443              		.global	ADC_GetITStatus
 1444              		.thumb
 1445              		.thumb_func
 1446              		.type	ADC_GetITStatus, %function
 1447              	ADC_GetITStatus:
 1448              	.LFB146:
1661:cmsis/device/stm32f4xx_adc.c **** }
1662:cmsis/device/stm32f4xx_adc.c **** 
1663:cmsis/device/stm32f4xx_adc.c **** /**
1664:cmsis/device/stm32f4xx_adc.c ****   * @brief  Checks whether the specified ADC interrupt has occurred or not.
1665:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx:   where x can be 1, 2 or 3 to select the ADC peripheral.
1666:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt source to check. 
1667:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1668:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1669:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1670:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1671:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                        
1672:cmsis/device/stm32f4xx_adc.c ****   * @retval The new state of ADC_IT (SET or RESET).
1673:cmsis/device/stm32f4xx_adc.c ****   */
1674:cmsis/device/stm32f4xx_adc.c **** ITStatus ADC_GetITStatus(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1675:cmsis/device/stm32f4xx_adc.c **** {
 1449              		.loc 1 1675 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 0
 1452              		@ frame_needed = 0, uses_anonymous_args = 0
 1453              		@ link register save eliminated.
 1454              	.LVL162:
1676:cmsis/device/stm32f4xx_adc.c ****   ITStatus bitstatus = RESET;
1677:cmsis/device/stm32f4xx_adc.c ****   uint32_t itmask = 0, enablestatus = 0;
1678:cmsis/device/stm32f4xx_adc.c **** 
1679:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1680:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
1681:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT));
1682:cmsis/device/stm32f4xx_adc.c **** 
1683:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1684:cmsis/device/stm32f4xx_adc.c ****   itmask = ADC_IT >> 8;
1685:cmsis/device/stm32f4xx_adc.c **** 
1686:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADC_IT enable bit status */
1687:cmsis/device/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
 1455              		.loc 1 1687 0
 1456 0000 4368     		ldr	r3, [r0, #4]	@ D.6683, ADCx_8(D)->CR1
 1457              	.LVL163:
1688:cmsis/device/stm32f4xx_adc.c **** 
1689:cmsis/device/stm32f4xx_adc.c ****   /* Check the status of the specified ADC interrupt */
1690:cmsis/device/stm32f4xx_adc.c ****   if (((ADCx->SR & itmask) != (uint32_t)RESET) && enablestatus)
 1458              		.loc 1 1690 0
 1459 0002 0068     		ldr	r0, [r0, #0]	@ D.6689, ADCx_8(D)->SR
 1460              	.LVL164:
 1461 0004 10EA1120 		ands	r0, r0, r1, lsr #8	@, tmp150, D.6689, ADC_IT,
 1462 0008 07D0     		beq	.L85	@,
1687:cmsis/device/stm32f4xx_adc.c ****   enablestatus = (ADCx->CR1 & ((uint32_t)0x01 << (uint8_t)ADC_IT)) ;
 1463              		.loc 1 1687 0 discriminator 1
 1464 000a 0122     		movs	r2, #1	@ tmp153,
 1465 000c C9B2     		uxtb	r1, r1	@ ADC_IT, ADC_IT
 1466              	.LVL165:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 58


 1467 000e 02FA01F0 		lsl	r0, r2, r1	@ tmp152, tmp153, ADC_IT
 1468              		.loc 1 1690 0 discriminator 1
 1469 0012 1842     		tst	r0, r3	@ tmp152, D.6683
1691:cmsis/device/stm32f4xx_adc.c ****   {
1692:cmsis/device/stm32f4xx_adc.c ****     /* ADC_IT is set */
1693:cmsis/device/stm32f4xx_adc.c ****     bitstatus = SET;
 1470              		.loc 1 1693 0 discriminator 1
 1471 0014 0CBF     		ite	eq	@
 1472 0016 0020     		moveq	r0, #0	@, bitstatus
 1473 0018 0120     		movne	r0, #1	@, bitstatus
 1474              	.L85:
 1475              	.LVL166:
1694:cmsis/device/stm32f4xx_adc.c ****   }
1695:cmsis/device/stm32f4xx_adc.c ****   else
1696:cmsis/device/stm32f4xx_adc.c ****   {
1697:cmsis/device/stm32f4xx_adc.c ****     /* ADC_IT is reset */
1698:cmsis/device/stm32f4xx_adc.c ****     bitstatus = RESET;
1699:cmsis/device/stm32f4xx_adc.c ****   }
1700:cmsis/device/stm32f4xx_adc.c ****   /* Return the ADC_IT status */
1701:cmsis/device/stm32f4xx_adc.c ****   return  bitstatus;
1702:cmsis/device/stm32f4xx_adc.c **** }
 1476              		.loc 1 1702 0
 1477 001a 7047     		bx	lr	@
 1478              		.cfi_endproc
 1479              	.LFE146:
 1480              		.size	ADC_GetITStatus, .-ADC_GetITStatus
 1481              		.section	.text.ADC_ClearITPendingBit,"ax",%progbits
 1482              		.align	2
 1483              		.global	ADC_ClearITPendingBit
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	ADC_ClearITPendingBit, %function
 1487              	ADC_ClearITPendingBit:
 1488              	.LFB147:
1703:cmsis/device/stm32f4xx_adc.c **** 
1704:cmsis/device/stm32f4xx_adc.c **** /**
1705:cmsis/device/stm32f4xx_adc.c ****   * @brief  Clears the ADCx's interrupt pending bits.
1706:cmsis/device/stm32f4xx_adc.c ****   * @param  ADCx: where x can be 1, 2 or 3 to select the ADC peripheral.
1707:cmsis/device/stm32f4xx_adc.c ****   * @param  ADC_IT: specifies the ADC interrupt pending bit to clear.
1708:cmsis/device/stm32f4xx_adc.c ****   *          This parameter can be one of the following values:
1709:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_EOC: End of conversion interrupt mask
1710:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_AWD: Analog watchdog interrupt mask
1711:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_JEOC: End of injected conversion interrupt mask
1712:cmsis/device/stm32f4xx_adc.c ****   *            @arg ADC_IT_OVR: Overrun interrupt mask                         
1713:cmsis/device/stm32f4xx_adc.c ****   * @retval None
1714:cmsis/device/stm32f4xx_adc.c ****   */
1715:cmsis/device/stm32f4xx_adc.c **** void ADC_ClearITPendingBit(ADC_TypeDef* ADCx, uint16_t ADC_IT)
1716:cmsis/device/stm32f4xx_adc.c **** {
 1489              		.loc 1 1716 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 0
 1492              		@ frame_needed = 0, uses_anonymous_args = 0
 1493              		@ link register save eliminated.
 1494              	.LVL167:
1717:cmsis/device/stm32f4xx_adc.c ****   uint8_t itmask = 0;
1718:cmsis/device/stm32f4xx_adc.c ****   /* Check the parameters */
1719:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_ALL_PERIPH(ADCx));
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 59


1720:cmsis/device/stm32f4xx_adc.c ****   assert_param(IS_ADC_IT(ADC_IT)); 
1721:cmsis/device/stm32f4xx_adc.c ****   /* Get the ADC IT index */
1722:cmsis/device/stm32f4xx_adc.c ****   itmask = (uint8_t)(ADC_IT >> 8);
1723:cmsis/device/stm32f4xx_adc.c ****   /* Clear the selected ADC interrupt pending bits */
1724:cmsis/device/stm32f4xx_adc.c ****   ADCx->SR = ~(uint32_t)itmask;
 1495              		.loc 1 1724 0
 1496 0000 6FEA1121 		mvn	r1, r1, lsr #8	@ D.6681, ADC_IT,
 1497              	.LVL168:
 1498 0004 0160     		str	r1, [r0, #0]	@ D.6681, ADCx_7(D)->SR
 1499 0006 7047     		bx	lr	@
 1500              		.cfi_endproc
 1501              	.LFE147:
 1502              		.size	ADC_ClearITPendingBit, .-ADC_ClearITPendingBit
 1503              		.text
 1504              	.Letext0:
 1505              		.file 2 "c:\\gnutoolsarmembedded\\4.7-2012q4\\bin\\../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-
 1506              		.file 3 "cmsis/device/stm32f4xx.h"
 1507              		.file 4 "cmsis/device/stm32f4xx_adc.h"
 1508              		.file 5 "./cmsis/core/core_cm4.h"
 1509              		.file 6 "./cmsis/device/stm32f4xx_rcc.h"
 1510              		.section	.debug_info,"",%progbits
 1511              	.Ldebug_info0:
 1512 0000 650D0000 		.4byte	0xd65
 1513 0004 0200     		.2byte	0x2
 1514 0006 00000000 		.4byte	.Ldebug_abbrev0
 1515 000a 04       		.byte	0x4
 1516 000b 01       		.uleb128 0x1
 1517 000c 63020000 		.4byte	.LASF111
 1518 0010 01       		.byte	0x1
 1519 0011 05070000 		.4byte	.LASF112
 1520 0015 BB060000 		.4byte	.LASF113
 1521 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1522 001d 00000000 		.4byte	0
 1523 0021 00000000 		.4byte	0
 1524 0025 00000000 		.4byte	.Ldebug_line0
 1525 0029 02       		.uleb128 0x2
 1526 002a 01       		.byte	0x1
 1527 002b 06       		.byte	0x6
 1528 002c B3000000 		.4byte	.LASF0
 1529 0030 03       		.uleb128 0x3
 1530 0031 FD060000 		.4byte	.LASF3
 1531 0035 02       		.byte	0x2
 1532 0036 2A       		.byte	0x2a
 1533 0037 3B000000 		.4byte	0x3b
 1534 003b 02       		.uleb128 0x2
 1535 003c 01       		.byte	0x1
 1536 003d 08       		.byte	0x8
 1537 003e 4E050000 		.4byte	.LASF1
 1538 0042 02       		.uleb128 0x2
 1539 0043 02       		.byte	0x2
 1540 0044 05       		.byte	0x5
 1541 0045 5C050000 		.4byte	.LASF2
 1542 0049 03       		.uleb128 0x3
 1543 004a 93010000 		.4byte	.LASF4
 1544 004e 02       		.byte	0x2
 1545 004f 36       		.byte	0x36
 1546 0050 54000000 		.4byte	0x54
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 60


 1547 0054 02       		.uleb128 0x2
 1548 0055 02       		.byte	0x2
 1549 0056 07       		.byte	0x7
 1550 0057 07030000 		.4byte	.LASF5
 1551 005b 03       		.uleb128 0x3
 1552 005c 46050000 		.4byte	.LASF6
 1553 0060 02       		.byte	0x2
 1554 0061 4F       		.byte	0x4f
 1555 0062 66000000 		.4byte	0x66
 1556 0066 02       		.uleb128 0x2
 1557 0067 04       		.byte	0x4
 1558 0068 05       		.byte	0x5
 1559 0069 57010000 		.4byte	.LASF7
 1560 006d 03       		.uleb128 0x3
 1561 006e E1050000 		.4byte	.LASF8
 1562 0072 02       		.byte	0x2
 1563 0073 50       		.byte	0x50
 1564 0074 78000000 		.4byte	0x78
 1565 0078 02       		.uleb128 0x2
 1566 0079 04       		.byte	0x4
 1567 007a 07       		.byte	0x7
 1568 007b AC020000 		.4byte	.LASF9
 1569 007f 02       		.uleb128 0x2
 1570 0080 08       		.byte	0x8
 1571 0081 05       		.byte	0x5
 1572 0082 A5000000 		.4byte	.LASF10
 1573 0086 02       		.uleb128 0x2
 1574 0087 08       		.byte	0x8
 1575 0088 07       		.byte	0x7
 1576 0089 62000000 		.4byte	.LASF11
 1577 008d 04       		.uleb128 0x4
 1578 008e 04       		.byte	0x4
 1579 008f 05       		.byte	0x5
 1580 0090 696E7400 		.ascii	"int\000"
 1581 0094 02       		.uleb128 0x2
 1582 0095 04       		.byte	0x4
 1583 0096 07       		.byte	0x7
 1584 0097 49020000 		.4byte	.LASF12
 1585 009b 02       		.uleb128 0x2
 1586 009c 04       		.byte	0x4
 1587 009d 07       		.byte	0x7
 1588 009e F7030000 		.4byte	.LASF13
 1589 00a2 05       		.uleb128 0x5
 1590 00a3 6D000000 		.4byte	0x6d
 1591 00a7 05       		.uleb128 0x5
 1592 00a8 5B000000 		.4byte	0x5b
 1593 00ac 06       		.uleb128 0x6
 1594 00ad 01       		.byte	0x1
 1595 00ae 03       		.byte	0x3
 1596 00af 1801     		.2byte	0x118
 1597 00b1 C2000000 		.4byte	0xc2
 1598 00b5 07       		.uleb128 0x7
 1599 00b6 CA040000 		.4byte	.LASF14
 1600 00ba 00       		.sleb128 0
 1601 00bb 08       		.uleb128 0x8
 1602 00bc 53455400 		.ascii	"SET\000"
 1603 00c0 01       		.sleb128 1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 61


 1604 00c1 00       		.byte	0
 1605 00c2 09       		.uleb128 0x9
 1606 00c3 25000000 		.4byte	.LASF15
 1607 00c7 03       		.byte	0x3
 1608 00c8 1801     		.2byte	0x118
 1609 00ca AC000000 		.4byte	0xac
 1610 00ce 09       		.uleb128 0x9
 1611 00cf 28020000 		.4byte	.LASF16
 1612 00d3 03       		.byte	0x3
 1613 00d4 1801     		.2byte	0x118
 1614 00d6 AC000000 		.4byte	0xac
 1615 00da 06       		.uleb128 0x6
 1616 00db 01       		.byte	0x1
 1617 00dc 03       		.byte	0x3
 1618 00dd 1A01     		.2byte	0x11a
 1619 00df F0000000 		.4byte	0xf0
 1620 00e3 07       		.uleb128 0x7
 1621 00e4 5A000000 		.4byte	.LASF17
 1622 00e8 00       		.sleb128 0
 1623 00e9 07       		.uleb128 0x7
 1624 00ea 8C010000 		.4byte	.LASF18
 1625 00ee 01       		.sleb128 1
 1626 00ef 00       		.byte	0
 1627 00f0 09       		.uleb128 0x9
 1628 00f1 18020000 		.4byte	.LASF19
 1629 00f5 03       		.byte	0x3
 1630 00f6 1A01     		.2byte	0x11a
 1631 00f8 DA000000 		.4byte	0xda
 1632 00fc 0A       		.uleb128 0xa
 1633 00fd 50       		.byte	0x50
 1634 00fe 03       		.byte	0x3
 1635 00ff 2B01     		.2byte	0x12b
 1636 0101 30020000 		.4byte	0x230
 1637 0105 0B       		.uleb128 0xb
 1638 0106 535200   		.ascii	"SR\000"
 1639 0109 03       		.byte	0x3
 1640 010a 2D01     		.2byte	0x12d
 1641 010c A2000000 		.4byte	0xa2
 1642 0110 02       		.byte	0x2
 1643 0111 23       		.byte	0x23
 1644 0112 00       		.uleb128 0
 1645 0113 0B       		.uleb128 0xb
 1646 0114 43523100 		.ascii	"CR1\000"
 1647 0118 03       		.byte	0x3
 1648 0119 2E01     		.2byte	0x12e
 1649 011b A2000000 		.4byte	0xa2
 1650 011f 02       		.byte	0x2
 1651 0120 23       		.byte	0x23
 1652 0121 04       		.uleb128 0x4
 1653 0122 0B       		.uleb128 0xb
 1654 0123 43523200 		.ascii	"CR2\000"
 1655 0127 03       		.byte	0x3
 1656 0128 2F01     		.2byte	0x12f
 1657 012a A2000000 		.4byte	0xa2
 1658 012e 02       		.byte	0x2
 1659 012f 23       		.byte	0x23
 1660 0130 08       		.uleb128 0x8
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 62


 1661 0131 0C       		.uleb128 0xc
 1662 0132 4B040000 		.4byte	.LASF20
 1663 0136 03       		.byte	0x3
 1664 0137 3001     		.2byte	0x130
 1665 0139 A2000000 		.4byte	0xa2
 1666 013d 02       		.byte	0x2
 1667 013e 23       		.byte	0x23
 1668 013f 0C       		.uleb128 0xc
 1669 0140 0C       		.uleb128 0xc
 1670 0141 46000000 		.4byte	.LASF21
 1671 0145 03       		.byte	0x3
 1672 0146 3101     		.2byte	0x131
 1673 0148 A2000000 		.4byte	0xa2
 1674 014c 02       		.byte	0x2
 1675 014d 23       		.byte	0x23
 1676 014e 10       		.uleb128 0x10
 1677 014f 0C       		.uleb128 0xc
 1678 0150 79000000 		.4byte	.LASF22
 1679 0154 03       		.byte	0x3
 1680 0155 3201     		.2byte	0x132
 1681 0157 A2000000 		.4byte	0xa2
 1682 015b 02       		.byte	0x2
 1683 015c 23       		.byte	0x23
 1684 015d 14       		.uleb128 0x14
 1685 015e 0C       		.uleb128 0xc
 1686 015f 9D030000 		.4byte	.LASF23
 1687 0163 03       		.byte	0x3
 1688 0164 3301     		.2byte	0x133
 1689 0166 A2000000 		.4byte	0xa2
 1690 016a 02       		.byte	0x2
 1691 016b 23       		.byte	0x23
 1692 016c 18       		.uleb128 0x18
 1693 016d 0C       		.uleb128 0xc
 1694 016e A3030000 		.4byte	.LASF24
 1695 0172 03       		.byte	0x3
 1696 0173 3401     		.2byte	0x134
 1697 0175 A2000000 		.4byte	0xa2
 1698 0179 02       		.byte	0x2
 1699 017a 23       		.byte	0x23
 1700 017b 1C       		.uleb128 0x1c
 1701 017c 0C       		.uleb128 0xc
 1702 017d BB050000 		.4byte	.LASF25
 1703 0181 03       		.byte	0x3
 1704 0182 3501     		.2byte	0x135
 1705 0184 A2000000 		.4byte	0xa2
 1706 0188 02       		.byte	0x2
 1707 0189 23       		.byte	0x23
 1708 018a 20       		.uleb128 0x20
 1709 018b 0B       		.uleb128 0xb
 1710 018c 48545200 		.ascii	"HTR\000"
 1711 0190 03       		.byte	0x3
 1712 0191 3601     		.2byte	0x136
 1713 0193 A2000000 		.4byte	0xa2
 1714 0197 02       		.byte	0x2
 1715 0198 23       		.byte	0x23
 1716 0199 24       		.uleb128 0x24
 1717 019a 0B       		.uleb128 0xb
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 63


 1718 019b 4C545200 		.ascii	"LTR\000"
 1719 019f 03       		.byte	0x3
 1720 01a0 3701     		.2byte	0x137
 1721 01a2 A2000000 		.4byte	0xa2
 1722 01a6 02       		.byte	0x2
 1723 01a7 23       		.byte	0x23
 1724 01a8 28       		.uleb128 0x28
 1725 01a9 0C       		.uleb128 0xc
 1726 01aa 8D040000 		.4byte	.LASF26
 1727 01ae 03       		.byte	0x3
 1728 01af 3801     		.2byte	0x138
 1729 01b1 A2000000 		.4byte	0xa2
 1730 01b5 02       		.byte	0x2
 1731 01b6 23       		.byte	0x23
 1732 01b7 2C       		.uleb128 0x2c
 1733 01b8 0C       		.uleb128 0xc
 1734 01b9 92040000 		.4byte	.LASF27
 1735 01bd 03       		.byte	0x3
 1736 01be 3901     		.2byte	0x139
 1737 01c0 A2000000 		.4byte	0xa2
 1738 01c4 02       		.byte	0x2
 1739 01c5 23       		.byte	0x23
 1740 01c6 30       		.uleb128 0x30
 1741 01c7 0C       		.uleb128 0xc
 1742 01c8 97040000 		.4byte	.LASF28
 1743 01cc 03       		.byte	0x3
 1744 01cd 3A01     		.2byte	0x13a
 1745 01cf A2000000 		.4byte	0xa2
 1746 01d3 02       		.byte	0x2
 1747 01d4 23       		.byte	0x23
 1748 01d5 34       		.uleb128 0x34
 1749 01d6 0C       		.uleb128 0xc
 1750 01d7 A0000000 		.4byte	.LASF29
 1751 01db 03       		.byte	0x3
 1752 01dc 3B01     		.2byte	0x13b
 1753 01de A2000000 		.4byte	0xa2
 1754 01e2 02       		.byte	0x2
 1755 01e3 23       		.byte	0x23
 1756 01e4 38       		.uleb128 0x38
 1757 01e5 0C       		.uleb128 0xc
 1758 01e6 34070000 		.4byte	.LASF30
 1759 01ea 03       		.byte	0x3
 1760 01eb 3C01     		.2byte	0x13c
 1761 01ed A2000000 		.4byte	0xa2
 1762 01f1 02       		.byte	0x2
 1763 01f2 23       		.byte	0x23
 1764 01f3 3C       		.uleb128 0x3c
 1765 01f4 0C       		.uleb128 0xc
 1766 01f5 39070000 		.4byte	.LASF31
 1767 01f9 03       		.byte	0x3
 1768 01fa 3D01     		.2byte	0x13d
 1769 01fc A2000000 		.4byte	0xa2
 1770 0200 02       		.byte	0x2
 1771 0201 23       		.byte	0x23
 1772 0202 40       		.uleb128 0x40
 1773 0203 0C       		.uleb128 0xc
 1774 0204 3E070000 		.4byte	.LASF32
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 64


 1775 0208 03       		.byte	0x3
 1776 0209 3E01     		.2byte	0x13e
 1777 020b A2000000 		.4byte	0xa2
 1778 020f 02       		.byte	0x2
 1779 0210 23       		.byte	0x23
 1780 0211 44       		.uleb128 0x44
 1781 0212 0C       		.uleb128 0xc
 1782 0213 43070000 		.4byte	.LASF33
 1783 0217 03       		.byte	0x3
 1784 0218 3F01     		.2byte	0x13f
 1785 021a A2000000 		.4byte	0xa2
 1786 021e 02       		.byte	0x2
 1787 021f 23       		.byte	0x23
 1788 0220 48       		.uleb128 0x48
 1789 0221 0B       		.uleb128 0xb
 1790 0222 445200   		.ascii	"DR\000"
 1791 0225 03       		.byte	0x3
 1792 0226 4001     		.2byte	0x140
 1793 0228 A2000000 		.4byte	0xa2
 1794 022c 02       		.byte	0x2
 1795 022d 23       		.byte	0x23
 1796 022e 4C       		.uleb128 0x4c
 1797 022f 00       		.byte	0
 1798 0230 09       		.uleb128 0x9
 1799 0231 9C010000 		.4byte	.LASF34
 1800 0235 03       		.byte	0x3
 1801 0236 4101     		.2byte	0x141
 1802 0238 FC000000 		.4byte	0xfc
 1803 023c 0A       		.uleb128 0xa
 1804 023d 0C       		.byte	0xc
 1805 023e 03       		.byte	0x3
 1806 023f 4301     		.2byte	0x143
 1807 0241 73020000 		.4byte	0x273
 1808 0245 0B       		.uleb128 0xb
 1809 0246 43535200 		.ascii	"CSR\000"
 1810 024a 03       		.byte	0x3
 1811 024b 4501     		.2byte	0x145
 1812 024d A2000000 		.4byte	0xa2
 1813 0251 02       		.byte	0x2
 1814 0252 23       		.byte	0x23
 1815 0253 00       		.uleb128 0
 1816 0254 0B       		.uleb128 0xb
 1817 0255 43435200 		.ascii	"CCR\000"
 1818 0259 03       		.byte	0x3
 1819 025a 4601     		.2byte	0x146
 1820 025c A2000000 		.4byte	0xa2
 1821 0260 02       		.byte	0x2
 1822 0261 23       		.byte	0x23
 1823 0262 04       		.uleb128 0x4
 1824 0263 0B       		.uleb128 0xb
 1825 0264 43445200 		.ascii	"CDR\000"
 1826 0268 03       		.byte	0x3
 1827 0269 4701     		.2byte	0x147
 1828 026b A2000000 		.4byte	0xa2
 1829 026f 02       		.byte	0x2
 1830 0270 23       		.byte	0x23
 1831 0271 08       		.uleb128 0x8
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 65


 1832 0272 00       		.byte	0
 1833 0273 09       		.uleb128 0x9
 1834 0274 0B040000 		.4byte	.LASF35
 1835 0278 03       		.byte	0x3
 1836 0279 4901     		.2byte	0x149
 1837 027b 3C020000 		.4byte	0x23c
 1838 027f 0D       		.uleb128 0xd
 1839 0280 18       		.byte	0x18
 1840 0281 04       		.byte	0x4
 1841 0282 2F       		.byte	0x2f
 1842 0283 EA020000 		.4byte	0x2ea
 1843 0287 0E       		.uleb128 0xe
 1844 0288 52070000 		.4byte	.LASF36
 1845 028c 04       		.byte	0x4
 1846 028d 31       		.byte	0x31
 1847 028e 6D000000 		.4byte	0x6d
 1848 0292 02       		.byte	0x2
 1849 0293 23       		.byte	0x23
 1850 0294 00       		.uleb128 0
 1851 0295 0E       		.uleb128 0xe
 1852 0296 AA050000 		.4byte	.LASF37
 1853 029a 04       		.byte	0x4
 1854 029b 33       		.byte	0x33
 1855 029c F0000000 		.4byte	0xf0
 1856 02a0 02       		.byte	0x2
 1857 02a1 23       		.byte	0x23
 1858 02a2 04       		.uleb128 0x4
 1859 02a3 0E       		.uleb128 0xe
 1860 02a4 40010000 		.4byte	.LASF38
 1861 02a8 04       		.byte	0x4
 1862 02a9 37       		.byte	0x37
 1863 02aa F0000000 		.4byte	0xf0
 1864 02ae 02       		.byte	0x2
 1865 02af 23       		.byte	0x23
 1866 02b0 05       		.uleb128 0x5
 1867 02b1 0E       		.uleb128 0xe
 1868 02b2 91050000 		.4byte	.LASF39
 1869 02b6 04       		.byte	0x4
 1870 02b7 3A       		.byte	0x3a
 1871 02b8 6D000000 		.4byte	0x6d
 1872 02bc 02       		.byte	0x2
 1873 02bd 23       		.byte	0x23
 1874 02be 08       		.uleb128 0x8
 1875 02bf 0E       		.uleb128 0xe
 1876 02c0 10000000 		.4byte	.LASF40
 1877 02c4 04       		.byte	0x4
 1878 02c5 3E       		.byte	0x3e
 1879 02c6 6D000000 		.4byte	0x6d
 1880 02ca 02       		.byte	0x2
 1881 02cb 23       		.byte	0x23
 1882 02cc 0C       		.uleb128 0xc
 1883 02cd 0E       		.uleb128 0xe
 1884 02ce EA050000 		.4byte	.LASF41
 1885 02d2 04       		.byte	0x4
 1886 02d3 42       		.byte	0x42
 1887 02d4 6D000000 		.4byte	0x6d
 1888 02d8 02       		.byte	0x2
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 66


 1889 02d9 23       		.byte	0x23
 1890 02da 10       		.uleb128 0x10
 1891 02db 0E       		.uleb128 0xe
 1892 02dc 7F000000 		.4byte	.LASF42
 1893 02e0 04       		.byte	0x4
 1894 02e1 45       		.byte	0x45
 1895 02e2 30000000 		.4byte	0x30
 1896 02e6 02       		.byte	0x2
 1897 02e7 23       		.byte	0x23
 1898 02e8 14       		.uleb128 0x14
 1899 02e9 00       		.byte	0
 1900 02ea 03       		.uleb128 0x3
 1901 02eb C1050000 		.4byte	.LASF43
 1902 02ef 04       		.byte	0x4
 1903 02f0 49       		.byte	0x49
 1904 02f1 7F020000 		.4byte	0x27f
 1905 02f5 0D       		.uleb128 0xd
 1906 02f6 10       		.byte	0x10
 1907 02f7 04       		.byte	0x4
 1908 02f8 4E       		.byte	0x4e
 1909 02f9 36030000 		.4byte	0x336
 1910 02fd 0E       		.uleb128 0xe
 1911 02fe 66050000 		.4byte	.LASF44
 1912 0302 04       		.byte	0x4
 1913 0303 50       		.byte	0x50
 1914 0304 6D000000 		.4byte	0x6d
 1915 0308 02       		.byte	0x2
 1916 0309 23       		.byte	0x23
 1917 030a 00       		.uleb128 0
 1918 030b 0E       		.uleb128 0xe
 1919 030c 2F060000 		.4byte	.LASF45
 1920 0310 04       		.byte	0x4
 1921 0311 53       		.byte	0x53
 1922 0312 6D000000 		.4byte	0x6d
 1923 0316 02       		.byte	0x2
 1924 0317 23       		.byte	0x23
 1925 0318 04       		.uleb128 0x4
 1926 0319 0E       		.uleb128 0xe
 1927 031a D7020000 		.4byte	.LASF46
 1928 031e 04       		.byte	0x4
 1929 031f 56       		.byte	0x56
 1930 0320 6D000000 		.4byte	0x6d
 1931 0324 02       		.byte	0x2
 1932 0325 23       		.byte	0x23
 1933 0326 08       		.uleb128 0x8
 1934 0327 0E       		.uleb128 0xe
 1935 0328 96070000 		.4byte	.LASF47
 1936 032c 04       		.byte	0x4
 1937 032d 5A       		.byte	0x5a
 1938 032e 6D000000 		.4byte	0x6d
 1939 0332 02       		.byte	0x2
 1940 0333 23       		.byte	0x23
 1941 0334 0C       		.uleb128 0xc
 1942 0335 00       		.byte	0
 1943 0336 03       		.uleb128 0x3
 1944 0337 30000000 		.4byte	.LASF48
 1945 033b 04       		.byte	0x4
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 67


 1946 033c 5E       		.byte	0x5e
 1947 033d F5020000 		.4byte	0x2f5
 1948 0341 0F       		.uleb128 0xf
 1949 0342 01       		.byte	0x1
 1950 0343 6E030000 		.4byte	.LASF49
 1951 0347 01       		.byte	0x1
 1952 0348 CE       		.byte	0xce
 1953 0349 01       		.byte	0x1
 1954 034a 00000000 		.4byte	.LFB110
 1955 034e 1A000000 		.4byte	.LFE110
 1956 0352 00000000 		.4byte	.LLST0
 1957 0356 01       		.byte	0x1
 1958 0357 8D030000 		.4byte	0x38d
 1959 035b 10       		.uleb128 0x10
 1960 035c 0C000000 		.4byte	.LVL0
 1961 0360 520D0000 		.4byte	0xd52
 1962 0364 75030000 		.4byte	0x375
 1963 0368 11       		.uleb128 0x11
 1964 0369 01       		.byte	0x1
 1965 036a 51       		.byte	0x51
 1966 036b 01       		.byte	0x1
 1967 036c 31       		.byte	0x31
 1968 036d 11       		.uleb128 0x11
 1969 036e 01       		.byte	0x1
 1970 036f 50       		.byte	0x50
 1971 0370 03       		.byte	0x3
 1972 0371 0A       		.byte	0xa
 1973 0372 0001     		.2byte	0x100
 1974 0374 00       		.byte	0
 1975 0375 12       		.uleb128 0x12
 1976 0376 1A000000 		.4byte	.LVL1
 1977 037a 01       		.byte	0x1
 1978 037b 520D0000 		.4byte	0xd52
 1979 037f 11       		.uleb128 0x11
 1980 0380 01       		.byte	0x1
 1981 0381 51       		.byte	0x51
 1982 0382 01       		.byte	0x1
 1983 0383 30       		.byte	0x30
 1984 0384 11       		.uleb128 0x11
 1985 0385 01       		.byte	0x1
 1986 0386 50       		.byte	0x50
 1987 0387 03       		.byte	0x3
 1988 0388 0A       		.byte	0xa
 1989 0389 0001     		.2byte	0x100
 1990 038b 00       		.byte	0
 1991 038c 00       		.byte	0
 1992 038d 0F       		.uleb128 0xf
 1993 038e 01       		.byte	0x1
 1994 038f 51000000 		.4byte	.LASF50
 1995 0393 01       		.byte	0x1
 1996 0394 E4       		.byte	0xe4
 1997 0395 01       		.byte	0x1
 1998 0396 00000000 		.4byte	.LFB111
 1999 039a 50000000 		.4byte	.LFE111
 2000 039e 20000000 		.4byte	.LLST1
 2001 03a2 01       		.byte	0x1
 2002 03a3 E2030000 		.4byte	0x3e2
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 68


 2003 03a7 13       		.uleb128 0x13
 2004 03a8 4C000000 		.4byte	.LASF51
 2005 03ac 01       		.byte	0x1
 2006 03ad E4       		.byte	0xe4
 2007 03ae E2030000 		.4byte	0x3e2
 2008 03b2 01       		.byte	0x1
 2009 03b3 50       		.byte	0x50
 2010 03b4 14       		.uleb128 0x14
 2011 03b5 A8010000 		.4byte	.LASF52
 2012 03b9 01       		.byte	0x1
 2013 03ba E4       		.byte	0xe4
 2014 03bb E8030000 		.4byte	0x3e8
 2015 03bf 40000000 		.4byte	.LLST2
 2016 03c3 15       		.uleb128 0x15
 2017 03c4 56030000 		.4byte	.LASF53
 2018 03c8 01       		.byte	0x1
 2019 03c9 E6       		.byte	0xe6
 2020 03ca 6D000000 		.4byte	0x6d
 2021 03ce 61000000 		.4byte	.LLST3
 2022 03d2 15       		.uleb128 0x15
 2023 03d3 5E030000 		.4byte	.LASF54
 2024 03d7 01       		.byte	0x1
 2025 03d8 E7       		.byte	0xe7
 2026 03d9 30000000 		.4byte	0x30
 2027 03dd C8000000 		.4byte	.LLST4
 2028 03e1 00       		.byte	0
 2029 03e2 16       		.uleb128 0x16
 2030 03e3 04       		.byte	0x4
 2031 03e4 30020000 		.4byte	0x230
 2032 03e8 16       		.uleb128 0x16
 2033 03e9 04       		.byte	0x4
 2034 03ea EA020000 		.4byte	0x2ea
 2035 03ee 17       		.uleb128 0x17
 2036 03ef 01       		.byte	0x1
 2037 03f0 D6010000 		.4byte	.LASF55
 2038 03f4 01       		.byte	0x1
 2039 03f5 2F01     		.2byte	0x12f
 2040 03f7 01       		.byte	0x1
 2041 03f8 00000000 		.4byte	.LFB112
 2042 03fc 14000000 		.4byte	.LFE112
 2043 0400 02       		.byte	0x2
 2044 0401 7D       		.byte	0x7d
 2045 0402 00       		.sleb128 0
 2046 0403 01       		.byte	0x1
 2047 0404 17040000 		.4byte	0x417
 2048 0408 18       		.uleb128 0x18
 2049 0409 A8010000 		.4byte	.LASF52
 2050 040d 01       		.byte	0x1
 2051 040e 2F01     		.2byte	0x12f
 2052 0410 E8030000 		.4byte	0x3e8
 2053 0414 01       		.byte	0x1
 2054 0415 50       		.byte	0x50
 2055 0416 00       		.byte	0
 2056 0417 19       		.uleb128 0x19
 2057 0418 01       		.byte	0x1
 2058 0419 3D060000 		.4byte	.LASF56
 2059 041d 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 69


 2060 041e 4E01     		.2byte	0x14e
 2061 0420 01       		.byte	0x1
 2062 0421 00000000 		.4byte	.LFB113
 2063 0425 2E000000 		.4byte	.LFE113
 2064 0429 F0000000 		.4byte	.LLST5
 2065 042d 01       		.byte	0x1
 2066 042e 53040000 		.4byte	0x453
 2067 0432 1A       		.uleb128 0x1a
 2068 0433 31050000 		.4byte	.LASF57
 2069 0437 01       		.byte	0x1
 2070 0438 4E01     		.2byte	0x14e
 2071 043a 53040000 		.4byte	0x453
 2072 043e 10010000 		.4byte	.LLST6
 2073 0442 1B       		.uleb128 0x1b
 2074 0443 56030000 		.4byte	.LASF53
 2075 0447 01       		.byte	0x1
 2076 0448 5001     		.2byte	0x150
 2077 044a 6D000000 		.4byte	0x6d
 2078 044e 31010000 		.4byte	.LLST7
 2079 0452 00       		.byte	0
 2080 0453 16       		.uleb128 0x16
 2081 0454 04       		.byte	0x4
 2082 0455 36030000 		.4byte	0x336
 2083 0459 17       		.uleb128 0x17
 2084 045a 01       		.byte	0x1
 2085 045b 1A030000 		.4byte	.LASF58
 2086 045f 01       		.byte	0x1
 2087 0460 7201     		.2byte	0x172
 2088 0462 01       		.byte	0x1
 2089 0463 00000000 		.4byte	.LFB114
 2090 0467 0C000000 		.4byte	.LFE114
 2091 046b 02       		.byte	0x2
 2092 046c 7D       		.byte	0x7d
 2093 046d 00       		.sleb128 0
 2094 046e 01       		.byte	0x1
 2095 046f 82040000 		.4byte	0x482
 2096 0473 18       		.uleb128 0x18
 2097 0474 31050000 		.4byte	.LASF57
 2098 0478 01       		.byte	0x1
 2099 0479 7201     		.2byte	0x172
 2100 047b 53040000 		.4byte	0x453
 2101 047f 01       		.byte	0x1
 2102 0480 50       		.byte	0x50
 2103 0481 00       		.byte	0
 2104 0482 17       		.uleb128 0x17
 2105 0483 01       		.byte	0x1
 2106 0484 38010000 		.4byte	.LASF59
 2107 0488 01       		.byte	0x1
 2108 0489 8801     		.2byte	0x188
 2109 048b 01       		.byte	0x1
 2110 048c 00000000 		.4byte	.LFB115
 2111 0490 14000000 		.4byte	.LFE115
 2112 0494 02       		.byte	0x2
 2113 0495 7D       		.byte	0x7d
 2114 0496 00       		.sleb128 0
 2115 0497 01       		.byte	0x1
 2116 0498 BB040000 		.4byte	0x4bb
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 70


 2117 049c 18       		.uleb128 0x18
 2118 049d 4C000000 		.4byte	.LASF51
 2119 04a1 01       		.byte	0x1
 2120 04a2 8801     		.2byte	0x188
 2121 04a4 E2030000 		.4byte	0x3e2
 2122 04a8 01       		.byte	0x1
 2123 04a9 50       		.byte	0x50
 2124 04aa 1A       		.uleb128 0x1a
 2125 04ab 00000000 		.4byte	.LASF60
 2126 04af 01       		.byte	0x1
 2127 04b0 8801     		.2byte	0x188
 2128 04b2 F0000000 		.4byte	0xf0
 2129 04b6 66010000 		.4byte	.LLST8
 2130 04ba 00       		.byte	0
 2131 04bb 17       		.uleb128 0x17
 2132 04bc 01       		.byte	0x1
 2133 04bd E0060000 		.4byte	.LASF61
 2134 04c1 01       		.byte	0x1
 2135 04c2 C201     		.2byte	0x1c2
 2136 04c4 01       		.byte	0x1
 2137 04c5 00000000 		.4byte	.LFB116
 2138 04c9 10000000 		.4byte	.LFE116
 2139 04cd 02       		.byte	0x2
 2140 04ce 7D       		.byte	0x7d
 2141 04cf 00       		.sleb128 0
 2142 04d0 01       		.byte	0x1
 2143 04d1 04050000 		.4byte	0x504
 2144 04d5 18       		.uleb128 0x18
 2145 04d6 4C000000 		.4byte	.LASF51
 2146 04da 01       		.byte	0x1
 2147 04db C201     		.2byte	0x1c2
 2148 04dd E2030000 		.4byte	0x3e2
 2149 04e1 01       		.byte	0x1
 2150 04e2 50       		.byte	0x50
 2151 04e3 1A       		.uleb128 0x1a
 2152 04e4 38040000 		.4byte	.LASF62
 2153 04e8 01       		.byte	0x1
 2154 04e9 C201     		.2byte	0x1c2
 2155 04eb 6D000000 		.4byte	0x6d
 2156 04ef 92010000 		.4byte	.LLST9
 2157 04f3 1B       		.uleb128 0x1b
 2158 04f4 1A010000 		.4byte	.LASF63
 2159 04f8 01       		.byte	0x1
 2160 04f9 C401     		.2byte	0x1c4
 2161 04fb 6D000000 		.4byte	0x6d
 2162 04ff B3010000 		.4byte	.LLST10
 2163 0503 00       		.byte	0
 2164 0504 17       		.uleb128 0x17
 2165 0505 01       		.byte	0x1
 2166 0506 BF000000 		.4byte	.LASF64
 2167 050a 01       		.byte	0x1
 2168 050b DF01     		.2byte	0x1df
 2169 050d 01       		.byte	0x1
 2170 050e 00000000 		.4byte	.LFB117
 2171 0512 06000000 		.4byte	.LFE117
 2172 0516 02       		.byte	0x2
 2173 0517 7D       		.byte	0x7d
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 71


 2174 0518 00       		.sleb128 0
 2175 0519 01       		.byte	0x1
 2176 051a 49050000 		.4byte	0x549
 2177 051e 18       		.uleb128 0x18
 2178 051f 4C000000 		.4byte	.LASF51
 2179 0523 01       		.byte	0x1
 2180 0524 DF01     		.2byte	0x1df
 2181 0526 E2030000 		.4byte	0x3e2
 2182 052a 01       		.byte	0x1
 2183 052b 50       		.byte	0x50
 2184 052c 18       		.uleb128 0x18
 2185 052d 48030000 		.4byte	.LASF65
 2186 0531 01       		.byte	0x1
 2187 0532 DF01     		.2byte	0x1df
 2188 0534 49000000 		.4byte	0x49
 2189 0538 01       		.byte	0x1
 2190 0539 51       		.byte	0x51
 2191 053a 18       		.uleb128 0x18
 2192 053b 0B020000 		.4byte	.LASF66
 2193 053f 01       		.byte	0x1
 2194 0540 E001     		.2byte	0x1e0
 2195 0542 49000000 		.4byte	0x49
 2196 0546 01       		.byte	0x1
 2197 0547 52       		.byte	0x52
 2198 0548 00       		.byte	0
 2199 0549 17       		.uleb128 0x17
 2200 054a 01       		.byte	0x1
 2201 054b E5010000 		.4byte	.LASF67
 2202 054f 01       		.byte	0x1
 2203 0550 0802     		.2byte	0x208
 2204 0552 01       		.byte	0x1
 2205 0553 00000000 		.4byte	.LFB118
 2206 0557 0C000000 		.4byte	.LFE118
 2207 055b 02       		.byte	0x2
 2208 055c 7D       		.byte	0x7d
 2209 055d 00       		.sleb128 0
 2210 055e 01       		.byte	0x1
 2211 055f 92050000 		.4byte	0x592
 2212 0563 18       		.uleb128 0x18
 2213 0564 4C000000 		.4byte	.LASF51
 2214 0568 01       		.byte	0x1
 2215 0569 0802     		.2byte	0x208
 2216 056b E2030000 		.4byte	0x3e2
 2217 056f 01       		.byte	0x1
 2218 0570 50       		.byte	0x50
 2219 0571 1A       		.uleb128 0x1a
 2220 0572 BE040000 		.4byte	.LASF68
 2221 0576 01       		.byte	0x1
 2222 0577 0802     		.2byte	0x208
 2223 0579 30000000 		.4byte	0x30
 2224 057d DD010000 		.4byte	.LLST11
 2225 0581 1B       		.uleb128 0x1b
 2226 0582 1A010000 		.4byte	.LASF63
 2227 0586 01       		.byte	0x1
 2228 0587 0A02     		.2byte	0x20a
 2229 0589 6D000000 		.4byte	0x6d
 2230 058d FE010000 		.4byte	.LLST12
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 72


 2231 0591 00       		.byte	0
 2232 0592 17       		.uleb128 0x17
 2233 0593 01       		.byte	0x1
 2234 0594 BE020000 		.4byte	.LASF69
 2235 0598 01       		.byte	0x1
 2236 0599 4902     		.2byte	0x249
 2237 059b 01       		.byte	0x1
 2238 059c 00000000 		.4byte	.LFB119
 2239 05a0 1C000000 		.4byte	.LFE119
 2240 05a4 02       		.byte	0x2
 2241 05a5 7D       		.byte	0x7d
 2242 05a6 00       		.sleb128 0
 2243 05a7 01       		.byte	0x1
 2244 05a8 BD050000 		.4byte	0x5bd
 2245 05ac 1A       		.uleb128 0x1a
 2246 05ad 00000000 		.4byte	.LASF60
 2247 05b1 01       		.byte	0x1
 2248 05b2 4902     		.2byte	0x249
 2249 05b4 F0000000 		.4byte	0xf0
 2250 05b8 33020000 		.4byte	.LLST13
 2251 05bc 00       		.byte	0
 2252 05bd 17       		.uleb128 0x17
 2253 05be 01       		.byte	0x1
 2254 05bf AB070000 		.4byte	.LASF70
 2255 05c3 01       		.byte	0x1
 2256 05c4 5F02     		.2byte	0x25f
 2257 05c6 01       		.byte	0x1
 2258 05c7 00000000 		.4byte	.LFB120
 2259 05cb 1C000000 		.4byte	.LFE120
 2260 05cf 02       		.byte	0x2
 2261 05d0 7D       		.byte	0x7d
 2262 05d1 00       		.sleb128 0
 2263 05d2 01       		.byte	0x1
 2264 05d3 E8050000 		.4byte	0x5e8
 2265 05d7 1A       		.uleb128 0x1a
 2266 05d8 00000000 		.4byte	.LASF60
 2267 05dc 01       		.byte	0x1
 2268 05dd 5F02     		.2byte	0x25f
 2269 05df F0000000 		.4byte	0xf0
 2270 05e3 5F020000 		.4byte	.LLST14
 2271 05e7 00       		.byte	0
 2272 05e8 19       		.uleb128 0x19
 2273 05e9 01       		.byte	0x1
 2274 05ea 2F030000 		.4byte	.LASF71
 2275 05ee 01       		.byte	0x1
 2276 05ef C402     		.2byte	0x2c4
 2277 05f1 01       		.byte	0x1
 2278 05f2 00000000 		.4byte	.LFB121
 2279 05f6 9C000000 		.4byte	.LFE121
 2280 05fa 8B020000 		.4byte	.LLST15
 2281 05fe 01       		.byte	0x1
 2282 05ff 62060000 		.4byte	0x662
 2283 0603 18       		.uleb128 0x18
 2284 0604 4C000000 		.4byte	.LASF51
 2285 0608 01       		.byte	0x1
 2286 0609 C402     		.2byte	0x2c4
 2287 060b E2030000 		.4byte	0x3e2
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 73


 2288 060f 01       		.byte	0x1
 2289 0610 50       		.byte	0x50
 2290 0611 1A       		.uleb128 0x1a
 2291 0612 BE040000 		.4byte	.LASF68
 2292 0616 01       		.byte	0x1
 2293 0617 C402     		.2byte	0x2c4
 2294 0619 30000000 		.4byte	0x30
 2295 061d AB020000 		.4byte	.LLST16
 2296 0621 1A       		.uleb128 0x1a
 2297 0622 B9040000 		.4byte	.LASF72
 2298 0626 01       		.byte	0x1
 2299 0627 C402     		.2byte	0x2c4
 2300 0629 30000000 		.4byte	0x30
 2301 062d FE020000 		.4byte	.LLST17
 2302 0631 1A       		.uleb128 0x1a
 2303 0632 51040000 		.4byte	.LASF73
 2304 0636 01       		.byte	0x1
 2305 0637 C402     		.2byte	0x2c4
 2306 0639 30000000 		.4byte	0x30
 2307 063d 38030000 		.4byte	.LLST18
 2308 0641 1B       		.uleb128 0x1b
 2309 0642 56030000 		.4byte	.LASF53
 2310 0646 01       		.byte	0x1
 2311 0647 C602     		.2byte	0x2c6
 2312 0649 6D000000 		.4byte	0x6d
 2313 064d 72030000 		.4byte	.LLST19
 2314 0651 1B       		.uleb128 0x1b
 2315 0652 5E030000 		.4byte	.LASF54
 2316 0656 01       		.byte	0x1
 2317 0657 C602     		.2byte	0x2c6
 2318 0659 6D000000 		.4byte	0x6d
 2319 065d 21040000 		.4byte	.LLST20
 2320 0661 00       		.byte	0
 2321 0662 17       		.uleb128 0x17
 2322 0663 01       		.byte	0x1
 2323 0664 80070000 		.4byte	.LASF74
 2324 0668 01       		.byte	0x1
 2325 0669 3C03     		.2byte	0x33c
 2326 066b 01       		.byte	0x1
 2327 066c 00000000 		.4byte	.LFB122
 2328 0670 0A000000 		.4byte	.LFE122
 2329 0674 02       		.byte	0x2
 2330 0675 7D       		.byte	0x7d
 2331 0676 00       		.sleb128 0
 2332 0677 01       		.byte	0x1
 2333 0678 8B060000 		.4byte	0x68b
 2334 067c 18       		.uleb128 0x18
 2335 067d 4C000000 		.4byte	.LASF51
 2336 0681 01       		.byte	0x1
 2337 0682 3C03     		.2byte	0x33c
 2338 0684 E2030000 		.4byte	0x3e2
 2339 0688 01       		.byte	0x1
 2340 0689 50       		.byte	0x50
 2341 068a 00       		.byte	0
 2342 068b 1C       		.uleb128 0x1c
 2343 068c 01       		.byte	0x1
 2344 068d 59060000 		.4byte	.LASF81
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 74


 2345 0691 01       		.byte	0x1
 2346 0692 4A03     		.2byte	0x34a
 2347 0694 01       		.byte	0x1
 2348 0695 C2000000 		.4byte	0xc2
 2349 0699 00000000 		.4byte	.LFB123
 2350 069d 08000000 		.4byte	.LFE123
 2351 06a1 02       		.byte	0x2
 2352 06a2 7D       		.byte	0x7d
 2353 06a3 00       		.sleb128 0
 2354 06a4 01       		.byte	0x1
 2355 06a5 CA060000 		.4byte	0x6ca
 2356 06a9 1A       		.uleb128 0x1a
 2357 06aa 4C000000 		.4byte	.LASF51
 2358 06ae 01       		.byte	0x1
 2359 06af 4A03     		.2byte	0x34a
 2360 06b1 E2030000 		.4byte	0x3e2
 2361 06b5 22050000 		.4byte	.LLST21
 2362 06b9 1B       		.uleb128 0x1b
 2363 06ba 48070000 		.4byte	.LASF75
 2364 06be 01       		.byte	0x1
 2365 06bf 4C03     		.2byte	0x34c
 2366 06c1 C2000000 		.4byte	0xc2
 2367 06c5 43050000 		.4byte	.LLST22
 2368 06c9 00       		.byte	0
 2369 06ca 17       		.uleb128 0x17
 2370 06cb 01       		.byte	0x1
 2371 06cc 10060000 		.4byte	.LASF76
 2372 06d0 01       		.byte	0x1
 2373 06d1 6803     		.2byte	0x368
 2374 06d3 01       		.byte	0x1
 2375 06d4 00000000 		.4byte	.LFB124
 2376 06d8 14000000 		.4byte	.LFE124
 2377 06dc 02       		.byte	0x2
 2378 06dd 7D       		.byte	0x7d
 2379 06de 00       		.sleb128 0
 2380 06df 01       		.byte	0x1
 2381 06e0 03070000 		.4byte	0x703
 2382 06e4 18       		.uleb128 0x18
 2383 06e5 4C000000 		.4byte	.LASF51
 2384 06e9 01       		.byte	0x1
 2385 06ea 6803     		.2byte	0x368
 2386 06ec E2030000 		.4byte	0x3e2
 2387 06f0 01       		.byte	0x1
 2388 06f1 50       		.byte	0x50
 2389 06f2 1A       		.uleb128 0x1a
 2390 06f3 00000000 		.4byte	.LASF60
 2391 06f7 01       		.byte	0x1
 2392 06f8 6803     		.2byte	0x368
 2393 06fa F0000000 		.4byte	0xf0
 2394 06fe 6A050000 		.4byte	.LLST23
 2395 0702 00       		.byte	0
 2396 0703 17       		.uleb128 0x17
 2397 0704 01       		.byte	0x1
 2398 0705 79030000 		.4byte	.LASF77
 2399 0709 01       		.byte	0x1
 2400 070a 8103     		.2byte	0x381
 2401 070c 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 75


 2402 070d 00000000 		.4byte	.LFB125
 2403 0711 14000000 		.4byte	.LFE125
 2404 0715 02       		.byte	0x2
 2405 0716 7D       		.byte	0x7d
 2406 0717 00       		.sleb128 0
 2407 0718 01       		.byte	0x1
 2408 0719 3C070000 		.4byte	0x73c
 2409 071d 18       		.uleb128 0x18
 2410 071e 4C000000 		.4byte	.LASF51
 2411 0722 01       		.byte	0x1
 2412 0723 8103     		.2byte	0x381
 2413 0725 E2030000 		.4byte	0x3e2
 2414 0729 01       		.byte	0x1
 2415 072a 50       		.byte	0x50
 2416 072b 1A       		.uleb128 0x1a
 2417 072c 00000000 		.4byte	.LASF60
 2418 0730 01       		.byte	0x1
 2419 0731 8103     		.2byte	0x381
 2420 0733 F0000000 		.4byte	0xf0
 2421 0737 96050000 		.4byte	.LLST24
 2422 073b 00       		.byte	0
 2423 073c 17       		.uleb128 0x17
 2424 073d 01       		.byte	0x1
 2425 073e B7010000 		.4byte	.LASF78
 2426 0742 01       		.byte	0x1
 2427 0743 9B03     		.2byte	0x39b
 2428 0745 01       		.byte	0x1
 2429 0746 00000000 		.4byte	.LFB126
 2430 074a 10000000 		.4byte	.LFE126
 2431 074e 02       		.byte	0x2
 2432 074f 7D       		.byte	0x7d
 2433 0750 00       		.sleb128 0
 2434 0751 01       		.byte	0x1
 2435 0752 95070000 		.4byte	0x795
 2436 0756 18       		.uleb128 0x18
 2437 0757 4C000000 		.4byte	.LASF51
 2438 075b 01       		.byte	0x1
 2439 075c 9B03     		.2byte	0x39b
 2440 075e E2030000 		.4byte	0x3e2
 2441 0762 01       		.byte	0x1
 2442 0763 50       		.byte	0x50
 2443 0764 1A       		.uleb128 0x1a
 2444 0765 D0030000 		.4byte	.LASF79
 2445 0769 01       		.byte	0x1
 2446 076a 9B03     		.2byte	0x39b
 2447 076c 30000000 		.4byte	0x30
 2448 0770 C2050000 		.4byte	.LLST25
 2449 0774 1B       		.uleb128 0x1b
 2450 0775 56030000 		.4byte	.LASF53
 2451 0779 01       		.byte	0x1
 2452 077a 9D03     		.2byte	0x39d
 2453 077c 6D000000 		.4byte	0x6d
 2454 0780 E3050000 		.4byte	.LLST26
 2455 0784 1B       		.uleb128 0x1b
 2456 0785 5E030000 		.4byte	.LASF54
 2457 0789 01       		.byte	0x1
 2458 078a 9E03     		.2byte	0x39e
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 76


 2459 078c 6D000000 		.4byte	0x6d
 2460 0790 18060000 		.4byte	.LLST27
 2461 0794 00       		.byte	0
 2462 0795 17       		.uleb128 0x17
 2463 0796 01       		.byte	0x1
 2464 0797 AB060000 		.4byte	.LASF80
 2465 079b 01       		.byte	0x1
 2466 079c BB03     		.2byte	0x3bb
 2467 079e 01       		.byte	0x1
 2468 079f 00000000 		.4byte	.LFB127
 2469 07a3 14000000 		.4byte	.LFE127
 2470 07a7 02       		.byte	0x2
 2471 07a8 7D       		.byte	0x7d
 2472 07a9 00       		.sleb128 0
 2473 07aa 01       		.byte	0x1
 2474 07ab CE070000 		.4byte	0x7ce
 2475 07af 18       		.uleb128 0x18
 2476 07b0 4C000000 		.4byte	.LASF51
 2477 07b4 01       		.byte	0x1
 2478 07b5 BB03     		.2byte	0x3bb
 2479 07b7 E2030000 		.4byte	0x3e2
 2480 07bb 01       		.byte	0x1
 2481 07bc 50       		.byte	0x50
 2482 07bd 1A       		.uleb128 0x1a
 2483 07be 00000000 		.4byte	.LASF60
 2484 07c2 01       		.byte	0x1
 2485 07c3 BB03     		.2byte	0x3bb
 2486 07c5 F0000000 		.4byte	0xf0
 2487 07c9 3F060000 		.4byte	.LLST28
 2488 07cd 00       		.byte	0
 2489 07ce 1C       		.uleb128 0x1c
 2490 07cf 01       		.byte	0x1
 2491 07d0 21010000 		.4byte	.LASF82
 2492 07d4 01       		.byte	0x1
 2493 07d5 D203     		.2byte	0x3d2
 2494 07d7 01       		.byte	0x1
 2495 07d8 49000000 		.4byte	0x49
 2496 07dc 00000000 		.4byte	.LFB128
 2497 07e0 06000000 		.4byte	.LFE128
 2498 07e4 02       		.byte	0x2
 2499 07e5 7D       		.byte	0x7d
 2500 07e6 00       		.sleb128 0
 2501 07e7 01       		.byte	0x1
 2502 07e8 FD070000 		.4byte	0x7fd
 2503 07ec 1A       		.uleb128 0x1a
 2504 07ed 4C000000 		.4byte	.LASF51
 2505 07f1 01       		.byte	0x1
 2506 07f2 D203     		.2byte	0x3d2
 2507 07f4 E2030000 		.4byte	0x3e2
 2508 07f8 6B060000 		.4byte	.LLST29
 2509 07fc 00       		.byte	0
 2510 07fd 1D       		.uleb128 0x1d
 2511 07fe 01       		.byte	0x1
 2512 07ff D7030000 		.4byte	.LASF114
 2513 0803 01       		.byte	0x1
 2514 0804 E703     		.2byte	0x3e7
 2515 0806 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 77


 2516 0807 6D000000 		.4byte	0x6d
 2517 080b 00000000 		.4byte	.LFB129
 2518 080f 0C000000 		.4byte	.LFE129
 2519 0813 02       		.byte	0x2
 2520 0814 7D       		.byte	0x7d
 2521 0815 00       		.sleb128 0
 2522 0816 01       		.byte	0x1
 2523 0817 17       		.uleb128 0x17
 2524 0818 01       		.byte	0x1
 2525 0819 00040000 		.4byte	.LASF83
 2526 081d 01       		.byte	0x1
 2527 081e 1804     		.2byte	0x418
 2528 0820 01       		.byte	0x1
 2529 0821 00000000 		.4byte	.LFB130
 2530 0825 14000000 		.4byte	.LFE130
 2531 0829 02       		.byte	0x2
 2532 082a 7D       		.byte	0x7d
 2533 082b 00       		.sleb128 0
 2534 082c 01       		.byte	0x1
 2535 082d 50080000 		.4byte	0x850
 2536 0831 18       		.uleb128 0x18
 2537 0832 4C000000 		.4byte	.LASF51
 2538 0836 01       		.byte	0x1
 2539 0837 1804     		.2byte	0x418
 2540 0839 E2030000 		.4byte	0x3e2
 2541 083d 01       		.byte	0x1
 2542 083e 50       		.byte	0x50
 2543 083f 1A       		.uleb128 0x1a
 2544 0840 00000000 		.4byte	.LASF60
 2545 0844 01       		.byte	0x1
 2546 0845 1804     		.2byte	0x418
 2547 0847 F0000000 		.4byte	0xf0
 2548 084b 8C060000 		.4byte	.LLST30
 2549 084f 00       		.byte	0
 2550 0850 17       		.uleb128 0x17
 2551 0851 01       		.byte	0x1
 2552 0852 69010000 		.4byte	.LASF84
 2553 0856 01       		.byte	0x1
 2554 0857 3004     		.2byte	0x430
 2555 0859 01       		.byte	0x1
 2556 085a 00000000 		.4byte	.LFB131
 2557 085e 14000000 		.4byte	.LFE131
 2558 0862 02       		.byte	0x2
 2559 0863 7D       		.byte	0x7d
 2560 0864 00       		.sleb128 0
 2561 0865 01       		.byte	0x1
 2562 0866 89080000 		.4byte	0x889
 2563 086a 18       		.uleb128 0x18
 2564 086b 4C000000 		.4byte	.LASF51
 2565 086f 01       		.byte	0x1
 2566 0870 3004     		.2byte	0x430
 2567 0872 E2030000 		.4byte	0x3e2
 2568 0876 01       		.byte	0x1
 2569 0877 50       		.byte	0x50
 2570 0878 1A       		.uleb128 0x1a
 2571 0879 00000000 		.4byte	.LASF60
 2572 087d 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 78


 2573 087e 3004     		.2byte	0x430
 2574 0880 F0000000 		.4byte	0xf0
 2575 0884 B8060000 		.4byte	.LLST31
 2576 0888 00       		.byte	0
 2577 0889 17       		.uleb128 0x17
 2578 088a 01       		.byte	0x1
 2579 088b 78060000 		.4byte	.LASF85
 2580 088f 01       		.byte	0x1
 2581 0890 4B04     		.2byte	0x44b
 2582 0892 01       		.byte	0x1
 2583 0893 00000000 		.4byte	.LFB132
 2584 0897 1C000000 		.4byte	.LFE132
 2585 089b 02       		.byte	0x2
 2586 089c 7D       		.byte	0x7d
 2587 089d 00       		.sleb128 0
 2588 089e 01       		.byte	0x1
 2589 089f B4080000 		.4byte	0x8b4
 2590 08a3 1A       		.uleb128 0x1a
 2591 08a4 00000000 		.4byte	.LASF60
 2592 08a8 01       		.byte	0x1
 2593 08a9 4B04     		.2byte	0x44b
 2594 08ab F0000000 		.4byte	0xf0
 2595 08af E4060000 		.4byte	.LLST32
 2596 08b3 00       		.byte	0
 2597 08b4 19       		.uleb128 0x19
 2598 08b5 01       		.byte	0x1
 2599 08b6 00010000 		.4byte	.LASF86
 2600 08ba 01       		.byte	0x1
 2601 08bb A204     		.2byte	0x4a2
 2602 08bd 01       		.byte	0x1
 2603 08be 00000000 		.4byte	.LFB133
 2604 08c2 64000000 		.4byte	.LFE133
 2605 08c6 10070000 		.4byte	.LLST33
 2606 08ca 01       		.byte	0x1
 2607 08cb 3E090000 		.4byte	0x93e
 2608 08cf 18       		.uleb128 0x18
 2609 08d0 4C000000 		.4byte	.LASF51
 2610 08d4 01       		.byte	0x1
 2611 08d5 A204     		.2byte	0x4a2
 2612 08d7 E2030000 		.4byte	0x3e2
 2613 08db 01       		.byte	0x1
 2614 08dc 50       		.byte	0x50
 2615 08dd 1A       		.uleb128 0x1a
 2616 08de BE040000 		.4byte	.LASF68
 2617 08e2 01       		.byte	0x1
 2618 08e3 A204     		.2byte	0x4a2
 2619 08e5 30000000 		.4byte	0x30
 2620 08e9 30070000 		.4byte	.LLST34
 2621 08ed 1A       		.uleb128 0x1a
 2622 08ee B9040000 		.4byte	.LASF72
 2623 08f2 01       		.byte	0x1
 2624 08f3 A204     		.2byte	0x4a2
 2625 08f5 30000000 		.4byte	0x30
 2626 08f9 5C070000 		.4byte	.LLST35
 2627 08fd 1A       		.uleb128 0x1a
 2628 08fe 51040000 		.4byte	.LASF73
 2629 0902 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 79


 2630 0903 A204     		.2byte	0x4a2
 2631 0905 30000000 		.4byte	0x30
 2632 0909 88070000 		.4byte	.LLST36
 2633 090d 1B       		.uleb128 0x1b
 2634 090e 56030000 		.4byte	.LASF53
 2635 0912 01       		.byte	0x1
 2636 0913 A404     		.2byte	0x4a4
 2637 0915 6D000000 		.4byte	0x6d
 2638 0919 C2070000 		.4byte	.LLST37
 2639 091d 1B       		.uleb128 0x1b
 2640 091e 5E030000 		.4byte	.LASF54
 2641 0922 01       		.byte	0x1
 2642 0923 A404     		.2byte	0x4a4
 2643 0925 6D000000 		.4byte	0x6d
 2644 0929 2F080000 		.4byte	.LLST38
 2645 092d 1B       		.uleb128 0x1b
 2646 092e 66030000 		.4byte	.LASF87
 2647 0932 01       		.byte	0x1
 2648 0933 A404     		.2byte	0x4a4
 2649 0935 6D000000 		.4byte	0x6d
 2650 0939 D6080000 		.4byte	.LLST39
 2651 093d 00       		.byte	0
 2652 093e 17       		.uleb128 0x17
 2653 093f 01       		.byte	0x1
 2654 0940 6F050000 		.4byte	.LASF88
 2655 0944 01       		.byte	0x1
 2656 0945 E104     		.2byte	0x4e1
 2657 0947 01       		.byte	0x1
 2658 0948 00000000 		.4byte	.LFB134
 2659 094c 10000000 		.4byte	.LFE134
 2660 0950 02       		.byte	0x2
 2661 0951 7D       		.byte	0x7d
 2662 0952 00       		.sleb128 0
 2663 0953 01       		.byte	0x1
 2664 0954 97090000 		.4byte	0x997
 2665 0958 18       		.uleb128 0x18
 2666 0959 4C000000 		.4byte	.LASF51
 2667 095d 01       		.byte	0x1
 2668 095e E104     		.2byte	0x4e1
 2669 0960 E2030000 		.4byte	0x3e2
 2670 0964 01       		.byte	0x1
 2671 0965 50       		.byte	0x50
 2672 0966 1A       		.uleb128 0x1a
 2673 0967 A4060000 		.4byte	.LASF89
 2674 096b 01       		.byte	0x1
 2675 096c E104     		.2byte	0x4e1
 2676 096e 30000000 		.4byte	0x30
 2677 0972 09090000 		.4byte	.LLST40
 2678 0976 1B       		.uleb128 0x1b
 2679 0977 56030000 		.4byte	.LASF53
 2680 097b 01       		.byte	0x1
 2681 097c E304     		.2byte	0x4e3
 2682 097e 6D000000 		.4byte	0x6d
 2683 0982 2A090000 		.4byte	.LLST41
 2684 0986 1B       		.uleb128 0x1b
 2685 0987 5E030000 		.4byte	.LASF54
 2686 098b 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 80


 2687 098c E404     		.2byte	0x4e4
 2688 098e 6D000000 		.4byte	0x6d
 2689 0992 5F090000 		.4byte	.LLST42
 2690 0996 00       		.byte	0
 2691 0997 19       		.uleb128 0x19
 2692 0998 01       		.byte	0x1
 2693 0999 77040000 		.4byte	.LASF90
 2694 099d 01       		.byte	0x1
 2695 099e 0405     		.2byte	0x504
 2696 09a0 01       		.byte	0x1
 2697 09a1 00000000 		.4byte	.LFB135
 2698 09a5 16000000 		.4byte	.LFE135
 2699 09a9 86090000 		.4byte	.LLST43
 2700 09ad 01       		.byte	0x1
 2701 09ae F1090000 		.4byte	0x9f1
 2702 09b2 1A       		.uleb128 0x1a
 2703 09b3 4C000000 		.4byte	.LASF51
 2704 09b7 01       		.byte	0x1
 2705 09b8 0405     		.2byte	0x504
 2706 09ba E2030000 		.4byte	0x3e2
 2707 09be A6090000 		.4byte	.LLST44
 2708 09c2 1A       		.uleb128 0x1a
 2709 09c3 D0040000 		.4byte	.LASF91
 2710 09c7 01       		.byte	0x1
 2711 09c8 0405     		.2byte	0x504
 2712 09ca 30000000 		.4byte	0x30
 2713 09ce C5090000 		.4byte	.LLST45
 2714 09d2 18       		.uleb128 0x18
 2715 09d3 F6060000 		.4byte	.LASF92
 2716 09d7 01       		.byte	0x1
 2717 09d8 0405     		.2byte	0x504
 2718 09da 49000000 		.4byte	0x49
 2719 09de 01       		.byte	0x1
 2720 09df 52       		.byte	0x52
 2721 09e0 1E       		.uleb128 0x1e
 2722 09e1 746D7000 		.ascii	"tmp\000"
 2723 09e5 01       		.byte	0x1
 2724 09e6 0605     		.2byte	0x506
 2725 09e8 A2000000 		.4byte	0xa2
 2726 09ec E6090000 		.4byte	.LLST46
 2727 09f0 00       		.byte	0
 2728 09f1 17       		.uleb128 0x17
 2729 09f2 01       		.byte	0x1
 2730 09f3 0E050000 		.4byte	.LASF93
 2731 09f7 01       		.byte	0x1
 2732 09f8 2A05     		.2byte	0x52a
 2733 09fa 01       		.byte	0x1
 2734 09fb 00000000 		.4byte	.LFB136
 2735 09ff 0C000000 		.4byte	.LFE136
 2736 0a03 02       		.byte	0x2
 2737 0a04 7D       		.byte	0x7d
 2738 0a05 00       		.sleb128 0
 2739 0a06 01       		.byte	0x1
 2740 0a07 3A0A0000 		.4byte	0xa3a
 2741 0a0b 18       		.uleb128 0x18
 2742 0a0c 4C000000 		.4byte	.LASF51
 2743 0a10 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 81


 2744 0a11 2A05     		.2byte	0x52a
 2745 0a13 E2030000 		.4byte	0x3e2
 2746 0a17 01       		.byte	0x1
 2747 0a18 50       		.byte	0x50
 2748 0a19 1A       		.uleb128 0x1a
 2749 0a1a 1E040000 		.4byte	.LASF94
 2750 0a1e 01       		.byte	0x1
 2751 0a1f 2A05     		.2byte	0x52a
 2752 0a21 6D000000 		.4byte	0x6d
 2753 0a25 050A0000 		.4byte	.LLST47
 2754 0a29 1B       		.uleb128 0x1b
 2755 0a2a 1A010000 		.4byte	.LASF63
 2756 0a2e 01       		.byte	0x1
 2757 0a2f 2C05     		.2byte	0x52c
 2758 0a31 6D000000 		.4byte	0x6d
 2759 0a35 260A0000 		.4byte	.LLST48
 2760 0a39 00       		.byte	0
 2761 0a3a 17       		.uleb128 0x17
 2762 0a3b 01       		.byte	0x1
 2763 0a3c A9030000 		.4byte	.LASF95
 2764 0a40 01       		.byte	0x1
 2765 0a41 4C05     		.2byte	0x54c
 2766 0a43 01       		.byte	0x1
 2767 0a44 00000000 		.4byte	.LFB137
 2768 0a48 0C000000 		.4byte	.LFE137
 2769 0a4c 02       		.byte	0x2
 2770 0a4d 7D       		.byte	0x7d
 2771 0a4e 00       		.sleb128 0
 2772 0a4f 01       		.byte	0x1
 2773 0a50 830A0000 		.4byte	0xa83
 2774 0a54 18       		.uleb128 0x18
 2775 0a55 4C000000 		.4byte	.LASF51
 2776 0a59 01       		.byte	0x1
 2777 0a5a 4C05     		.2byte	0x54c
 2778 0a5c E2030000 		.4byte	0x3e2
 2779 0a60 01       		.byte	0x1
 2780 0a61 50       		.byte	0x50
 2781 0a62 1A       		.uleb128 0x1a
 2782 0a63 E2000000 		.4byte	.LASF96
 2783 0a67 01       		.byte	0x1
 2784 0a68 4C05     		.2byte	0x54c
 2785 0a6a 6D000000 		.4byte	0x6d
 2786 0a6e 5B0A0000 		.4byte	.LLST49
 2787 0a72 1B       		.uleb128 0x1b
 2788 0a73 1A010000 		.4byte	.LASF63
 2789 0a77 01       		.byte	0x1
 2790 0a78 4E05     		.2byte	0x54e
 2791 0a7a 6D000000 		.4byte	0x6d
 2792 0a7e 7C0A0000 		.4byte	.LLST50
 2793 0a82 00       		.byte	0
 2794 0a83 17       		.uleb128 0x17
 2795 0a84 01       		.byte	0x1
 2796 0a85 E9020000 		.4byte	.LASF97
 2797 0a89 01       		.byte	0x1
 2798 0a8a 6105     		.2byte	0x561
 2799 0a8c 01       		.byte	0x1
 2800 0a8d 00000000 		.4byte	.LFB138
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 82


 2801 0a91 0A000000 		.4byte	.LFE138
 2802 0a95 02       		.byte	0x2
 2803 0a96 7D       		.byte	0x7d
 2804 0a97 00       		.sleb128 0
 2805 0a98 01       		.byte	0x1
 2806 0a99 AC0A0000 		.4byte	0xaac
 2807 0a9d 18       		.uleb128 0x18
 2808 0a9e 4C000000 		.4byte	.LASF51
 2809 0aa2 01       		.byte	0x1
 2810 0aa3 6105     		.2byte	0x561
 2811 0aa5 E2030000 		.4byte	0x3e2
 2812 0aa9 01       		.byte	0x1
 2813 0aaa 50       		.byte	0x50
 2814 0aab 00       		.byte	0
 2815 0aac 1C       		.uleb128 0x1c
 2816 0aad 01       		.byte	0x1
 2817 0aae E4040000 		.4byte	.LASF98
 2818 0ab2 01       		.byte	0x1
 2819 0ab3 6E05     		.2byte	0x56e
 2820 0ab5 01       		.byte	0x1
 2821 0ab6 C2000000 		.4byte	0xc2
 2822 0aba 00000000 		.4byte	.LFB139
 2823 0abe 08000000 		.4byte	.LFE139
 2824 0ac2 02       		.byte	0x2
 2825 0ac3 7D       		.byte	0x7d
 2826 0ac4 00       		.sleb128 0
 2827 0ac5 01       		.byte	0x1
 2828 0ac6 EB0A0000 		.4byte	0xaeb
 2829 0aca 1A       		.uleb128 0x1a
 2830 0acb 4C000000 		.4byte	.LASF51
 2831 0acf 01       		.byte	0x1
 2832 0ad0 6E05     		.2byte	0x56e
 2833 0ad2 E2030000 		.4byte	0x3e2
 2834 0ad6 B10A0000 		.4byte	.LLST51
 2835 0ada 1B       		.uleb128 0x1b
 2836 0adb 48070000 		.4byte	.LASF75
 2837 0adf 01       		.byte	0x1
 2838 0ae0 7005     		.2byte	0x570
 2839 0ae2 C2000000 		.4byte	0xc2
 2840 0ae6 D20A0000 		.4byte	.LLST52
 2841 0aea 00       		.byte	0
 2842 0aeb 17       		.uleb128 0x17
 2843 0aec 01       		.byte	0x1
 2844 0aed F8050000 		.4byte	.LASF99
 2845 0af1 01       		.byte	0x1
 2846 0af2 8B05     		.2byte	0x58b
 2847 0af4 01       		.byte	0x1
 2848 0af5 00000000 		.4byte	.LFB140
 2849 0af9 14000000 		.4byte	.LFE140
 2850 0afd 02       		.byte	0x2
 2851 0afe 7D       		.byte	0x7d
 2852 0aff 00       		.sleb128 0
 2853 0b00 01       		.byte	0x1
 2854 0b01 240B0000 		.4byte	0xb24
 2855 0b05 18       		.uleb128 0x18
 2856 0b06 4C000000 		.4byte	.LASF51
 2857 0b0a 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 83


 2858 0b0b 8B05     		.2byte	0x58b
 2859 0b0d E2030000 		.4byte	0x3e2
 2860 0b11 01       		.byte	0x1
 2861 0b12 50       		.byte	0x50
 2862 0b13 1A       		.uleb128 0x1a
 2863 0b14 00000000 		.4byte	.LASF60
 2864 0b18 01       		.byte	0x1
 2865 0b19 8B05     		.2byte	0x58b
 2866 0b1b F0000000 		.4byte	0xf0
 2867 0b1f F90A0000 		.4byte	.LLST53
 2868 0b23 00       		.byte	0
 2869 0b24 17       		.uleb128 0x17
 2870 0b25 01       		.byte	0x1
 2871 0b26 31020000 		.4byte	.LASF100
 2872 0b2a 01       		.byte	0x1
 2873 0b2b A505     		.2byte	0x5a5
 2874 0b2d 01       		.byte	0x1
 2875 0b2e 00000000 		.4byte	.LFB141
 2876 0b32 14000000 		.4byte	.LFE141
 2877 0b36 02       		.byte	0x2
 2878 0b37 7D       		.byte	0x7d
 2879 0b38 00       		.sleb128 0
 2880 0b39 01       		.byte	0x1
 2881 0b3a 5D0B0000 		.4byte	0xb5d
 2882 0b3e 18       		.uleb128 0x18
 2883 0b3f 4C000000 		.4byte	.LASF51
 2884 0b43 01       		.byte	0x1
 2885 0b44 A505     		.2byte	0x5a5
 2886 0b46 E2030000 		.4byte	0x3e2
 2887 0b4a 01       		.byte	0x1
 2888 0b4b 50       		.byte	0x50
 2889 0b4c 1A       		.uleb128 0x1a
 2890 0b4d 00000000 		.4byte	.LASF60
 2891 0b51 01       		.byte	0x1
 2892 0b52 A505     		.2byte	0x5a5
 2893 0b54 F0000000 		.4byte	0xf0
 2894 0b58 250B0000 		.4byte	.LLST54
 2895 0b5c 00       		.byte	0
 2896 0b5d 1F       		.uleb128 0x1f
 2897 0b5e 01       		.byte	0x1
 2898 0b5f 61070000 		.4byte	.LASF101
 2899 0b63 01       		.byte	0x1
 2900 0b64 C105     		.2byte	0x5c1
 2901 0b66 01       		.byte	0x1
 2902 0b67 49000000 		.4byte	0x49
 2903 0b6b 00000000 		.4byte	.LFB142
 2904 0b6f 1A000000 		.4byte	.LFE142
 2905 0b73 510B0000 		.4byte	.LLST55
 2906 0b77 01       		.byte	0x1
 2907 0b78 AD0B0000 		.4byte	0xbad
 2908 0b7c 1A       		.uleb128 0x1a
 2909 0b7d 4C000000 		.4byte	.LASF51
 2910 0b81 01       		.byte	0x1
 2911 0b82 C105     		.2byte	0x5c1
 2912 0b84 E2030000 		.4byte	0x3e2
 2913 0b88 710B0000 		.4byte	.LLST56
 2914 0b8c 1A       		.uleb128 0x1a
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 84


 2915 0b8d D0040000 		.4byte	.LASF91
 2916 0b91 01       		.byte	0x1
 2917 0b92 C105     		.2byte	0x5c1
 2918 0b94 30000000 		.4byte	0x30
 2919 0b98 900B0000 		.4byte	.LLST57
 2920 0b9c 1E       		.uleb128 0x1e
 2921 0b9d 746D7000 		.ascii	"tmp\000"
 2922 0ba1 01       		.byte	0x1
 2923 0ba2 C305     		.2byte	0x5c3
 2924 0ba4 A2000000 		.4byte	0xa2
 2925 0ba8 B10B0000 		.4byte	.LLST58
 2926 0bac 00       		.byte	0
 2927 0bad 17       		.uleb128 0x17
 2928 0bae 01       		.byte	0x1
 2929 0baf 56020000 		.4byte	.LASF102
 2930 0bb3 01       		.byte	0x1
 2931 0bb4 2D06     		.2byte	0x62d
 2932 0bb6 01       		.byte	0x1
 2933 0bb7 00000000 		.4byte	.LFB143
 2934 0bbb 1A000000 		.4byte	.LFE143
 2935 0bbf 02       		.byte	0x2
 2936 0bc0 7D       		.byte	0x7d
 2937 0bc1 00       		.sleb128 0
 2938 0bc2 01       		.byte	0x1
 2939 0bc3 060C0000 		.4byte	0xc06
 2940 0bc7 18       		.uleb128 0x18
 2941 0bc8 4C000000 		.4byte	.LASF51
 2942 0bcc 01       		.byte	0x1
 2943 0bcd 2D06     		.2byte	0x62d
 2944 0bcf E2030000 		.4byte	0x3e2
 2945 0bd3 01       		.byte	0x1
 2946 0bd4 50       		.byte	0x50
 2947 0bd5 1A       		.uleb128 0x1a
 2948 0bd6 09000000 		.4byte	.LASF103
 2949 0bda 01       		.byte	0x1
 2950 0bdb 2D06     		.2byte	0x62d
 2951 0bdd 49000000 		.4byte	0x49
 2952 0be1 D00B0000 		.4byte	.LLST59
 2953 0be5 1A       		.uleb128 0x1a
 2954 0be6 00000000 		.4byte	.LASF60
 2955 0bea 01       		.byte	0x1
 2956 0beb 2D06     		.2byte	0x62d
 2957 0bed F0000000 		.4byte	0xf0
 2958 0bf1 F10B0000 		.4byte	.LLST60
 2959 0bf5 1B       		.uleb128 0x1b
 2960 0bf6 9C040000 		.4byte	.LASF104
 2961 0bfa 01       		.byte	0x1
 2962 0bfb 2F06     		.2byte	0x62f
 2963 0bfd 6D000000 		.4byte	0x6d
 2964 0c01 1D0C0000 		.4byte	.LLST61
 2965 0c05 00       		.byte	0
 2966 0c06 1C       		.uleb128 0x1c
 2967 0c07 01       		.byte	0x1
 2968 0c08 22070000 		.4byte	.LASF105
 2969 0c0c 01       		.byte	0x1
 2970 0c0d 5206     		.2byte	0x652
 2971 0c0f 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 85


 2972 0c10 C2000000 		.4byte	0xc2
 2973 0c14 00000000 		.4byte	.LFB144
 2974 0c18 0C000000 		.4byte	.LFE144
 2975 0c1c 02       		.byte	0x2
 2976 0c1d 7D       		.byte	0x7d
 2977 0c1e 00       		.sleb128 0
 2978 0c1f 01       		.byte	0x1
 2979 0c20 530C0000 		.4byte	0xc53
 2980 0c24 1A       		.uleb128 0x1a
 2981 0c25 4C000000 		.4byte	.LASF51
 2982 0c29 01       		.byte	0x1
 2983 0c2a 5206     		.2byte	0x652
 2984 0c2c E2030000 		.4byte	0x3e2
 2985 0c30 530C0000 		.4byte	.LLST62
 2986 0c34 18       		.uleb128 0x18
 2987 0c35 60010000 		.4byte	.LASF106
 2988 0c39 01       		.byte	0x1
 2989 0c3a 5206     		.2byte	0x652
 2990 0c3c 30000000 		.4byte	0x30
 2991 0c40 01       		.byte	0x1
 2992 0c41 51       		.byte	0x51
 2993 0c42 1B       		.uleb128 0x1b
 2994 0c43 48070000 		.4byte	.LASF75
 2995 0c47 01       		.byte	0x1
 2996 0c48 5406     		.2byte	0x654
 2997 0c4a C2000000 		.4byte	0xc2
 2998 0c4e 740C0000 		.4byte	.LLST63
 2999 0c52 00       		.byte	0
 3000 0c53 17       		.uleb128 0x17
 3001 0c54 01       		.byte	0x1
 3002 0c55 8F030000 		.4byte	.LASF107
 3003 0c59 01       		.byte	0x1
 3004 0c5a 7506     		.2byte	0x675
 3005 0c5c 01       		.byte	0x1
 3006 0c5d 00000000 		.4byte	.LFB145
 3007 0c61 06000000 		.4byte	.LFE145
 3008 0c65 02       		.byte	0x2
 3009 0c66 7D       		.byte	0x7d
 3010 0c67 00       		.sleb128 0
 3011 0c68 01       		.byte	0x1
 3012 0c69 8C0C0000 		.4byte	0xc8c
 3013 0c6d 18       		.uleb128 0x18
 3014 0c6e 4C000000 		.4byte	.LASF51
 3015 0c72 01       		.byte	0x1
 3016 0c73 7506     		.2byte	0x675
 3017 0c75 E2030000 		.4byte	0x3e2
 3018 0c79 01       		.byte	0x1
 3019 0c7a 50       		.byte	0x50
 3020 0c7b 1A       		.uleb128 0x1a
 3021 0c7c 60010000 		.4byte	.LASF106
 3022 0c80 01       		.byte	0x1
 3023 0c81 7506     		.2byte	0x675
 3024 0c83 30000000 		.4byte	0x30
 3025 0c87 9D0C0000 		.4byte	.LLST64
 3026 0c8b 00       		.byte	0
 3027 0c8c 1C       		.uleb128 0x1c
 3028 0c8d 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 86


 3029 0c8e D1050000 		.4byte	.LASF108
 3030 0c92 01       		.byte	0x1
 3031 0c93 8A06     		.2byte	0x68a
 3032 0c95 01       		.byte	0x1
 3033 0c96 CE000000 		.4byte	0xce
 3034 0c9a 00000000 		.4byte	.LFB146
 3035 0c9e 1C000000 		.4byte	.LFE146
 3036 0ca2 02       		.byte	0x2
 3037 0ca3 7D       		.byte	0x7d
 3038 0ca4 00       		.sleb128 0
 3039 0ca5 01       		.byte	0x1
 3040 0ca6 FB0C0000 		.4byte	0xcfb
 3041 0caa 1A       		.uleb128 0x1a
 3042 0cab 4C000000 		.4byte	.LASF51
 3043 0caf 01       		.byte	0x1
 3044 0cb0 8A06     		.2byte	0x68a
 3045 0cb2 E2030000 		.4byte	0x3e2
 3046 0cb6 BE0C0000 		.4byte	.LLST65
 3047 0cba 1A       		.uleb128 0x1a
 3048 0cbb 09000000 		.4byte	.LASF103
 3049 0cbf 01       		.byte	0x1
 3050 0cc0 8A06     		.2byte	0x68a
 3051 0cc2 49000000 		.4byte	0x49
 3052 0cc6 DF0C0000 		.4byte	.LLST66
 3053 0cca 1B       		.uleb128 0x1b
 3054 0ccb 48070000 		.4byte	.LASF75
 3055 0ccf 01       		.byte	0x1
 3056 0cd0 8C06     		.2byte	0x68c
 3057 0cd2 CE000000 		.4byte	0xce
 3058 0cd6 000D0000 		.4byte	.LLST67
 3059 0cda 1B       		.uleb128 0x1b
 3060 0cdb 9C040000 		.4byte	.LASF104
 3061 0cdf 01       		.byte	0x1
 3062 0ce0 8D06     		.2byte	0x68d
 3063 0ce2 6D000000 		.4byte	0x6d
 3064 0ce6 1F0D0000 		.4byte	.LLST68
 3065 0cea 1B       		.uleb128 0x1b
 3066 0ceb 4C060000 		.4byte	.LASF109
 3067 0cef 01       		.byte	0x1
 3068 0cf0 8D06     		.2byte	0x68d
 3069 0cf2 6D000000 		.4byte	0x6d
 3070 0cf6 3A0D0000 		.4byte	.LLST69
 3071 0cfa 00       		.byte	0
 3072 0cfb 17       		.uleb128 0x17
 3073 0cfc 01       		.byte	0x1
 3074 0cfd A3040000 		.4byte	.LASF110
 3075 0d01 01       		.byte	0x1
 3076 0d02 B306     		.2byte	0x6b3
 3077 0d04 01       		.byte	0x1
 3078 0d05 00000000 		.4byte	.LFB147
 3079 0d09 08000000 		.4byte	.LFE147
 3080 0d0d 02       		.byte	0x2
 3081 0d0e 7D       		.byte	0x7d
 3082 0d0f 00       		.sleb128 0
 3083 0d10 01       		.byte	0x1
 3084 0d11 440D0000 		.4byte	0xd44
 3085 0d15 18       		.uleb128 0x18
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 87


 3086 0d16 4C000000 		.4byte	.LASF51
 3087 0d1a 01       		.byte	0x1
 3088 0d1b B306     		.2byte	0x6b3
 3089 0d1d E2030000 		.4byte	0x3e2
 3090 0d21 01       		.byte	0x1
 3091 0d22 50       		.byte	0x50
 3092 0d23 1A       		.uleb128 0x1a
 3093 0d24 09000000 		.4byte	.LASF103
 3094 0d28 01       		.byte	0x1
 3095 0d29 B306     		.2byte	0x6b3
 3096 0d2b 49000000 		.4byte	0x49
 3097 0d2f 630D0000 		.4byte	.LLST70
 3098 0d33 1B       		.uleb128 0x1b
 3099 0d34 9C040000 		.4byte	.LASF104
 3100 0d38 01       		.byte	0x1
 3101 0d39 B506     		.2byte	0x6b5
 3102 0d3b 30000000 		.4byte	0x30
 3103 0d3f 840D0000 		.4byte	.LLST71
 3104 0d43 00       		.byte	0
 3105 0d44 20       		.uleb128 0x20
 3106 0d45 93000000 		.4byte	.LASF115
 3107 0d49 05       		.byte	0x5
 3108 0d4a 1A05     		.2byte	0x51a
 3109 0d4c A7000000 		.4byte	0xa7
 3110 0d50 01       		.byte	0x1
 3111 0d51 01       		.byte	0x1
 3112 0d52 21       		.uleb128 0x21
 3113 0d53 01       		.byte	0x1
 3114 0d54 60040000 		.4byte	.LASF116
 3115 0d58 06       		.byte	0x6
 3116 0d59 E101     		.2byte	0x1e1
 3117 0d5b 01       		.byte	0x1
 3118 0d5c 01       		.byte	0x1
 3119 0d5d 22       		.uleb128 0x22
 3120 0d5e 6D000000 		.4byte	0x6d
 3121 0d62 22       		.uleb128 0x22
 3122 0d63 F0000000 		.4byte	0xf0
 3123 0d67 00       		.byte	0
 3124 0d68 00       		.byte	0
 3125              		.section	.debug_abbrev,"",%progbits
 3126              	.Ldebug_abbrev0:
 3127 0000 01       		.uleb128 0x1
 3128 0001 11       		.uleb128 0x11
 3129 0002 01       		.byte	0x1
 3130 0003 25       		.uleb128 0x25
 3131 0004 0E       		.uleb128 0xe
 3132 0005 13       		.uleb128 0x13
 3133 0006 0B       		.uleb128 0xb
 3134 0007 03       		.uleb128 0x3
 3135 0008 0E       		.uleb128 0xe
 3136 0009 1B       		.uleb128 0x1b
 3137 000a 0E       		.uleb128 0xe
 3138 000b 55       		.uleb128 0x55
 3139 000c 06       		.uleb128 0x6
 3140 000d 11       		.uleb128 0x11
 3141 000e 01       		.uleb128 0x1
 3142 000f 52       		.uleb128 0x52
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 88


 3143 0010 01       		.uleb128 0x1
 3144 0011 10       		.uleb128 0x10
 3145 0012 06       		.uleb128 0x6
 3146 0013 00       		.byte	0
 3147 0014 00       		.byte	0
 3148 0015 02       		.uleb128 0x2
 3149 0016 24       		.uleb128 0x24
 3150 0017 00       		.byte	0
 3151 0018 0B       		.uleb128 0xb
 3152 0019 0B       		.uleb128 0xb
 3153 001a 3E       		.uleb128 0x3e
 3154 001b 0B       		.uleb128 0xb
 3155 001c 03       		.uleb128 0x3
 3156 001d 0E       		.uleb128 0xe
 3157 001e 00       		.byte	0
 3158 001f 00       		.byte	0
 3159 0020 03       		.uleb128 0x3
 3160 0021 16       		.uleb128 0x16
 3161 0022 00       		.byte	0
 3162 0023 03       		.uleb128 0x3
 3163 0024 0E       		.uleb128 0xe
 3164 0025 3A       		.uleb128 0x3a
 3165 0026 0B       		.uleb128 0xb
 3166 0027 3B       		.uleb128 0x3b
 3167 0028 0B       		.uleb128 0xb
 3168 0029 49       		.uleb128 0x49
 3169 002a 13       		.uleb128 0x13
 3170 002b 00       		.byte	0
 3171 002c 00       		.byte	0
 3172 002d 04       		.uleb128 0x4
 3173 002e 24       		.uleb128 0x24
 3174 002f 00       		.byte	0
 3175 0030 0B       		.uleb128 0xb
 3176 0031 0B       		.uleb128 0xb
 3177 0032 3E       		.uleb128 0x3e
 3178 0033 0B       		.uleb128 0xb
 3179 0034 03       		.uleb128 0x3
 3180 0035 08       		.uleb128 0x8
 3181 0036 00       		.byte	0
 3182 0037 00       		.byte	0
 3183 0038 05       		.uleb128 0x5
 3184 0039 35       		.uleb128 0x35
 3185 003a 00       		.byte	0
 3186 003b 49       		.uleb128 0x49
 3187 003c 13       		.uleb128 0x13
 3188 003d 00       		.byte	0
 3189 003e 00       		.byte	0
 3190 003f 06       		.uleb128 0x6
 3191 0040 04       		.uleb128 0x4
 3192 0041 01       		.byte	0x1
 3193 0042 0B       		.uleb128 0xb
 3194 0043 0B       		.uleb128 0xb
 3195 0044 3A       		.uleb128 0x3a
 3196 0045 0B       		.uleb128 0xb
 3197 0046 3B       		.uleb128 0x3b
 3198 0047 05       		.uleb128 0x5
 3199 0048 01       		.uleb128 0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 89


 3200 0049 13       		.uleb128 0x13
 3201 004a 00       		.byte	0
 3202 004b 00       		.byte	0
 3203 004c 07       		.uleb128 0x7
 3204 004d 28       		.uleb128 0x28
 3205 004e 00       		.byte	0
 3206 004f 03       		.uleb128 0x3
 3207 0050 0E       		.uleb128 0xe
 3208 0051 1C       		.uleb128 0x1c
 3209 0052 0D       		.uleb128 0xd
 3210 0053 00       		.byte	0
 3211 0054 00       		.byte	0
 3212 0055 08       		.uleb128 0x8
 3213 0056 28       		.uleb128 0x28
 3214 0057 00       		.byte	0
 3215 0058 03       		.uleb128 0x3
 3216 0059 08       		.uleb128 0x8
 3217 005a 1C       		.uleb128 0x1c
 3218 005b 0D       		.uleb128 0xd
 3219 005c 00       		.byte	0
 3220 005d 00       		.byte	0
 3221 005e 09       		.uleb128 0x9
 3222 005f 16       		.uleb128 0x16
 3223 0060 00       		.byte	0
 3224 0061 03       		.uleb128 0x3
 3225 0062 0E       		.uleb128 0xe
 3226 0063 3A       		.uleb128 0x3a
 3227 0064 0B       		.uleb128 0xb
 3228 0065 3B       		.uleb128 0x3b
 3229 0066 05       		.uleb128 0x5
 3230 0067 49       		.uleb128 0x49
 3231 0068 13       		.uleb128 0x13
 3232 0069 00       		.byte	0
 3233 006a 00       		.byte	0
 3234 006b 0A       		.uleb128 0xa
 3235 006c 13       		.uleb128 0x13
 3236 006d 01       		.byte	0x1
 3237 006e 0B       		.uleb128 0xb
 3238 006f 0B       		.uleb128 0xb
 3239 0070 3A       		.uleb128 0x3a
 3240 0071 0B       		.uleb128 0xb
 3241 0072 3B       		.uleb128 0x3b
 3242 0073 05       		.uleb128 0x5
 3243 0074 01       		.uleb128 0x1
 3244 0075 13       		.uleb128 0x13
 3245 0076 00       		.byte	0
 3246 0077 00       		.byte	0
 3247 0078 0B       		.uleb128 0xb
 3248 0079 0D       		.uleb128 0xd
 3249 007a 00       		.byte	0
 3250 007b 03       		.uleb128 0x3
 3251 007c 08       		.uleb128 0x8
 3252 007d 3A       		.uleb128 0x3a
 3253 007e 0B       		.uleb128 0xb
 3254 007f 3B       		.uleb128 0x3b
 3255 0080 05       		.uleb128 0x5
 3256 0081 49       		.uleb128 0x49
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 90


 3257 0082 13       		.uleb128 0x13
 3258 0083 38       		.uleb128 0x38
 3259 0084 0A       		.uleb128 0xa
 3260 0085 00       		.byte	0
 3261 0086 00       		.byte	0
 3262 0087 0C       		.uleb128 0xc
 3263 0088 0D       		.uleb128 0xd
 3264 0089 00       		.byte	0
 3265 008a 03       		.uleb128 0x3
 3266 008b 0E       		.uleb128 0xe
 3267 008c 3A       		.uleb128 0x3a
 3268 008d 0B       		.uleb128 0xb
 3269 008e 3B       		.uleb128 0x3b
 3270 008f 05       		.uleb128 0x5
 3271 0090 49       		.uleb128 0x49
 3272 0091 13       		.uleb128 0x13
 3273 0092 38       		.uleb128 0x38
 3274 0093 0A       		.uleb128 0xa
 3275 0094 00       		.byte	0
 3276 0095 00       		.byte	0
 3277 0096 0D       		.uleb128 0xd
 3278 0097 13       		.uleb128 0x13
 3279 0098 01       		.byte	0x1
 3280 0099 0B       		.uleb128 0xb
 3281 009a 0B       		.uleb128 0xb
 3282 009b 3A       		.uleb128 0x3a
 3283 009c 0B       		.uleb128 0xb
 3284 009d 3B       		.uleb128 0x3b
 3285 009e 0B       		.uleb128 0xb
 3286 009f 01       		.uleb128 0x1
 3287 00a0 13       		.uleb128 0x13
 3288 00a1 00       		.byte	0
 3289 00a2 00       		.byte	0
 3290 00a3 0E       		.uleb128 0xe
 3291 00a4 0D       		.uleb128 0xd
 3292 00a5 00       		.byte	0
 3293 00a6 03       		.uleb128 0x3
 3294 00a7 0E       		.uleb128 0xe
 3295 00a8 3A       		.uleb128 0x3a
 3296 00a9 0B       		.uleb128 0xb
 3297 00aa 3B       		.uleb128 0x3b
 3298 00ab 0B       		.uleb128 0xb
 3299 00ac 49       		.uleb128 0x49
 3300 00ad 13       		.uleb128 0x13
 3301 00ae 38       		.uleb128 0x38
 3302 00af 0A       		.uleb128 0xa
 3303 00b0 00       		.byte	0
 3304 00b1 00       		.byte	0
 3305 00b2 0F       		.uleb128 0xf
 3306 00b3 2E       		.uleb128 0x2e
 3307 00b4 01       		.byte	0x1
 3308 00b5 3F       		.uleb128 0x3f
 3309 00b6 0C       		.uleb128 0xc
 3310 00b7 03       		.uleb128 0x3
 3311 00b8 0E       		.uleb128 0xe
 3312 00b9 3A       		.uleb128 0x3a
 3313 00ba 0B       		.uleb128 0xb
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 91


 3314 00bb 3B       		.uleb128 0x3b
 3315 00bc 0B       		.uleb128 0xb
 3316 00bd 27       		.uleb128 0x27
 3317 00be 0C       		.uleb128 0xc
 3318 00bf 11       		.uleb128 0x11
 3319 00c0 01       		.uleb128 0x1
 3320 00c1 12       		.uleb128 0x12
 3321 00c2 01       		.uleb128 0x1
 3322 00c3 40       		.uleb128 0x40
 3323 00c4 06       		.uleb128 0x6
 3324 00c5 9742     		.uleb128 0x2117
 3325 00c7 0C       		.uleb128 0xc
 3326 00c8 01       		.uleb128 0x1
 3327 00c9 13       		.uleb128 0x13
 3328 00ca 00       		.byte	0
 3329 00cb 00       		.byte	0
 3330 00cc 10       		.uleb128 0x10
 3331 00cd 898201   		.uleb128 0x4109
 3332 00d0 01       		.byte	0x1
 3333 00d1 11       		.uleb128 0x11
 3334 00d2 01       		.uleb128 0x1
 3335 00d3 31       		.uleb128 0x31
 3336 00d4 13       		.uleb128 0x13
 3337 00d5 01       		.uleb128 0x1
 3338 00d6 13       		.uleb128 0x13
 3339 00d7 00       		.byte	0
 3340 00d8 00       		.byte	0
 3341 00d9 11       		.uleb128 0x11
 3342 00da 8A8201   		.uleb128 0x410a
 3343 00dd 00       		.byte	0
 3344 00de 02       		.uleb128 0x2
 3345 00df 0A       		.uleb128 0xa
 3346 00e0 9142     		.uleb128 0x2111
 3347 00e2 0A       		.uleb128 0xa
 3348 00e3 00       		.byte	0
 3349 00e4 00       		.byte	0
 3350 00e5 12       		.uleb128 0x12
 3351 00e6 898201   		.uleb128 0x4109
 3352 00e9 01       		.byte	0x1
 3353 00ea 11       		.uleb128 0x11
 3354 00eb 01       		.uleb128 0x1
 3355 00ec 9542     		.uleb128 0x2115
 3356 00ee 0C       		.uleb128 0xc
 3357 00ef 31       		.uleb128 0x31
 3358 00f0 13       		.uleb128 0x13
 3359 00f1 00       		.byte	0
 3360 00f2 00       		.byte	0
 3361 00f3 13       		.uleb128 0x13
 3362 00f4 05       		.uleb128 0x5
 3363 00f5 00       		.byte	0
 3364 00f6 03       		.uleb128 0x3
 3365 00f7 0E       		.uleb128 0xe
 3366 00f8 3A       		.uleb128 0x3a
 3367 00f9 0B       		.uleb128 0xb
 3368 00fa 3B       		.uleb128 0x3b
 3369 00fb 0B       		.uleb128 0xb
 3370 00fc 49       		.uleb128 0x49
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 92


 3371 00fd 13       		.uleb128 0x13
 3372 00fe 02       		.uleb128 0x2
 3373 00ff 0A       		.uleb128 0xa
 3374 0100 00       		.byte	0
 3375 0101 00       		.byte	0
 3376 0102 14       		.uleb128 0x14
 3377 0103 05       		.uleb128 0x5
 3378 0104 00       		.byte	0
 3379 0105 03       		.uleb128 0x3
 3380 0106 0E       		.uleb128 0xe
 3381 0107 3A       		.uleb128 0x3a
 3382 0108 0B       		.uleb128 0xb
 3383 0109 3B       		.uleb128 0x3b
 3384 010a 0B       		.uleb128 0xb
 3385 010b 49       		.uleb128 0x49
 3386 010c 13       		.uleb128 0x13
 3387 010d 02       		.uleb128 0x2
 3388 010e 06       		.uleb128 0x6
 3389 010f 00       		.byte	0
 3390 0110 00       		.byte	0
 3391 0111 15       		.uleb128 0x15
 3392 0112 34       		.uleb128 0x34
 3393 0113 00       		.byte	0
 3394 0114 03       		.uleb128 0x3
 3395 0115 0E       		.uleb128 0xe
 3396 0116 3A       		.uleb128 0x3a
 3397 0117 0B       		.uleb128 0xb
 3398 0118 3B       		.uleb128 0x3b
 3399 0119 0B       		.uleb128 0xb
 3400 011a 49       		.uleb128 0x49
 3401 011b 13       		.uleb128 0x13
 3402 011c 02       		.uleb128 0x2
 3403 011d 06       		.uleb128 0x6
 3404 011e 00       		.byte	0
 3405 011f 00       		.byte	0
 3406 0120 16       		.uleb128 0x16
 3407 0121 0F       		.uleb128 0xf
 3408 0122 00       		.byte	0
 3409 0123 0B       		.uleb128 0xb
 3410 0124 0B       		.uleb128 0xb
 3411 0125 49       		.uleb128 0x49
 3412 0126 13       		.uleb128 0x13
 3413 0127 00       		.byte	0
 3414 0128 00       		.byte	0
 3415 0129 17       		.uleb128 0x17
 3416 012a 2E       		.uleb128 0x2e
 3417 012b 01       		.byte	0x1
 3418 012c 3F       		.uleb128 0x3f
 3419 012d 0C       		.uleb128 0xc
 3420 012e 03       		.uleb128 0x3
 3421 012f 0E       		.uleb128 0xe
 3422 0130 3A       		.uleb128 0x3a
 3423 0131 0B       		.uleb128 0xb
 3424 0132 3B       		.uleb128 0x3b
 3425 0133 05       		.uleb128 0x5
 3426 0134 27       		.uleb128 0x27
 3427 0135 0C       		.uleb128 0xc
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 93


 3428 0136 11       		.uleb128 0x11
 3429 0137 01       		.uleb128 0x1
 3430 0138 12       		.uleb128 0x12
 3431 0139 01       		.uleb128 0x1
 3432 013a 40       		.uleb128 0x40
 3433 013b 0A       		.uleb128 0xa
 3434 013c 9742     		.uleb128 0x2117
 3435 013e 0C       		.uleb128 0xc
 3436 013f 01       		.uleb128 0x1
 3437 0140 13       		.uleb128 0x13
 3438 0141 00       		.byte	0
 3439 0142 00       		.byte	0
 3440 0143 18       		.uleb128 0x18
 3441 0144 05       		.uleb128 0x5
 3442 0145 00       		.byte	0
 3443 0146 03       		.uleb128 0x3
 3444 0147 0E       		.uleb128 0xe
 3445 0148 3A       		.uleb128 0x3a
 3446 0149 0B       		.uleb128 0xb
 3447 014a 3B       		.uleb128 0x3b
 3448 014b 05       		.uleb128 0x5
 3449 014c 49       		.uleb128 0x49
 3450 014d 13       		.uleb128 0x13
 3451 014e 02       		.uleb128 0x2
 3452 014f 0A       		.uleb128 0xa
 3453 0150 00       		.byte	0
 3454 0151 00       		.byte	0
 3455 0152 19       		.uleb128 0x19
 3456 0153 2E       		.uleb128 0x2e
 3457 0154 01       		.byte	0x1
 3458 0155 3F       		.uleb128 0x3f
 3459 0156 0C       		.uleb128 0xc
 3460 0157 03       		.uleb128 0x3
 3461 0158 0E       		.uleb128 0xe
 3462 0159 3A       		.uleb128 0x3a
 3463 015a 0B       		.uleb128 0xb
 3464 015b 3B       		.uleb128 0x3b
 3465 015c 05       		.uleb128 0x5
 3466 015d 27       		.uleb128 0x27
 3467 015e 0C       		.uleb128 0xc
 3468 015f 11       		.uleb128 0x11
 3469 0160 01       		.uleb128 0x1
 3470 0161 12       		.uleb128 0x12
 3471 0162 01       		.uleb128 0x1
 3472 0163 40       		.uleb128 0x40
 3473 0164 06       		.uleb128 0x6
 3474 0165 9742     		.uleb128 0x2117
 3475 0167 0C       		.uleb128 0xc
 3476 0168 01       		.uleb128 0x1
 3477 0169 13       		.uleb128 0x13
 3478 016a 00       		.byte	0
 3479 016b 00       		.byte	0
 3480 016c 1A       		.uleb128 0x1a
 3481 016d 05       		.uleb128 0x5
 3482 016e 00       		.byte	0
 3483 016f 03       		.uleb128 0x3
 3484 0170 0E       		.uleb128 0xe
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 94


 3485 0171 3A       		.uleb128 0x3a
 3486 0172 0B       		.uleb128 0xb
 3487 0173 3B       		.uleb128 0x3b
 3488 0174 05       		.uleb128 0x5
 3489 0175 49       		.uleb128 0x49
 3490 0176 13       		.uleb128 0x13
 3491 0177 02       		.uleb128 0x2
 3492 0178 06       		.uleb128 0x6
 3493 0179 00       		.byte	0
 3494 017a 00       		.byte	0
 3495 017b 1B       		.uleb128 0x1b
 3496 017c 34       		.uleb128 0x34
 3497 017d 00       		.byte	0
 3498 017e 03       		.uleb128 0x3
 3499 017f 0E       		.uleb128 0xe
 3500 0180 3A       		.uleb128 0x3a
 3501 0181 0B       		.uleb128 0xb
 3502 0182 3B       		.uleb128 0x3b
 3503 0183 05       		.uleb128 0x5
 3504 0184 49       		.uleb128 0x49
 3505 0185 13       		.uleb128 0x13
 3506 0186 02       		.uleb128 0x2
 3507 0187 06       		.uleb128 0x6
 3508 0188 00       		.byte	0
 3509 0189 00       		.byte	0
 3510 018a 1C       		.uleb128 0x1c
 3511 018b 2E       		.uleb128 0x2e
 3512 018c 01       		.byte	0x1
 3513 018d 3F       		.uleb128 0x3f
 3514 018e 0C       		.uleb128 0xc
 3515 018f 03       		.uleb128 0x3
 3516 0190 0E       		.uleb128 0xe
 3517 0191 3A       		.uleb128 0x3a
 3518 0192 0B       		.uleb128 0xb
 3519 0193 3B       		.uleb128 0x3b
 3520 0194 05       		.uleb128 0x5
 3521 0195 27       		.uleb128 0x27
 3522 0196 0C       		.uleb128 0xc
 3523 0197 49       		.uleb128 0x49
 3524 0198 13       		.uleb128 0x13
 3525 0199 11       		.uleb128 0x11
 3526 019a 01       		.uleb128 0x1
 3527 019b 12       		.uleb128 0x12
 3528 019c 01       		.uleb128 0x1
 3529 019d 40       		.uleb128 0x40
 3530 019e 0A       		.uleb128 0xa
 3531 019f 9742     		.uleb128 0x2117
 3532 01a1 0C       		.uleb128 0xc
 3533 01a2 01       		.uleb128 0x1
 3534 01a3 13       		.uleb128 0x13
 3535 01a4 00       		.byte	0
 3536 01a5 00       		.byte	0
 3537 01a6 1D       		.uleb128 0x1d
 3538 01a7 2E       		.uleb128 0x2e
 3539 01a8 00       		.byte	0
 3540 01a9 3F       		.uleb128 0x3f
 3541 01aa 0C       		.uleb128 0xc
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 95


 3542 01ab 03       		.uleb128 0x3
 3543 01ac 0E       		.uleb128 0xe
 3544 01ad 3A       		.uleb128 0x3a
 3545 01ae 0B       		.uleb128 0xb
 3546 01af 3B       		.uleb128 0x3b
 3547 01b0 05       		.uleb128 0x5
 3548 01b1 27       		.uleb128 0x27
 3549 01b2 0C       		.uleb128 0xc
 3550 01b3 49       		.uleb128 0x49
 3551 01b4 13       		.uleb128 0x13
 3552 01b5 11       		.uleb128 0x11
 3553 01b6 01       		.uleb128 0x1
 3554 01b7 12       		.uleb128 0x12
 3555 01b8 01       		.uleb128 0x1
 3556 01b9 40       		.uleb128 0x40
 3557 01ba 0A       		.uleb128 0xa
 3558 01bb 9742     		.uleb128 0x2117
 3559 01bd 0C       		.uleb128 0xc
 3560 01be 00       		.byte	0
 3561 01bf 00       		.byte	0
 3562 01c0 1E       		.uleb128 0x1e
 3563 01c1 34       		.uleb128 0x34
 3564 01c2 00       		.byte	0
 3565 01c3 03       		.uleb128 0x3
 3566 01c4 08       		.uleb128 0x8
 3567 01c5 3A       		.uleb128 0x3a
 3568 01c6 0B       		.uleb128 0xb
 3569 01c7 3B       		.uleb128 0x3b
 3570 01c8 05       		.uleb128 0x5
 3571 01c9 49       		.uleb128 0x49
 3572 01ca 13       		.uleb128 0x13
 3573 01cb 02       		.uleb128 0x2
 3574 01cc 06       		.uleb128 0x6
 3575 01cd 00       		.byte	0
 3576 01ce 00       		.byte	0
 3577 01cf 1F       		.uleb128 0x1f
 3578 01d0 2E       		.uleb128 0x2e
 3579 01d1 01       		.byte	0x1
 3580 01d2 3F       		.uleb128 0x3f
 3581 01d3 0C       		.uleb128 0xc
 3582 01d4 03       		.uleb128 0x3
 3583 01d5 0E       		.uleb128 0xe
 3584 01d6 3A       		.uleb128 0x3a
 3585 01d7 0B       		.uleb128 0xb
 3586 01d8 3B       		.uleb128 0x3b
 3587 01d9 05       		.uleb128 0x5
 3588 01da 27       		.uleb128 0x27
 3589 01db 0C       		.uleb128 0xc
 3590 01dc 49       		.uleb128 0x49
 3591 01dd 13       		.uleb128 0x13
 3592 01de 11       		.uleb128 0x11
 3593 01df 01       		.uleb128 0x1
 3594 01e0 12       		.uleb128 0x12
 3595 01e1 01       		.uleb128 0x1
 3596 01e2 40       		.uleb128 0x40
 3597 01e3 06       		.uleb128 0x6
 3598 01e4 9742     		.uleb128 0x2117
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 96


 3599 01e6 0C       		.uleb128 0xc
 3600 01e7 01       		.uleb128 0x1
 3601 01e8 13       		.uleb128 0x13
 3602 01e9 00       		.byte	0
 3603 01ea 00       		.byte	0
 3604 01eb 20       		.uleb128 0x20
 3605 01ec 34       		.uleb128 0x34
 3606 01ed 00       		.byte	0
 3607 01ee 03       		.uleb128 0x3
 3608 01ef 0E       		.uleb128 0xe
 3609 01f0 3A       		.uleb128 0x3a
 3610 01f1 0B       		.uleb128 0xb
 3611 01f2 3B       		.uleb128 0x3b
 3612 01f3 05       		.uleb128 0x5
 3613 01f4 49       		.uleb128 0x49
 3614 01f5 13       		.uleb128 0x13
 3615 01f6 3F       		.uleb128 0x3f
 3616 01f7 0C       		.uleb128 0xc
 3617 01f8 3C       		.uleb128 0x3c
 3618 01f9 0C       		.uleb128 0xc
 3619 01fa 00       		.byte	0
 3620 01fb 00       		.byte	0
 3621 01fc 21       		.uleb128 0x21
 3622 01fd 2E       		.uleb128 0x2e
 3623 01fe 01       		.byte	0x1
 3624 01ff 3F       		.uleb128 0x3f
 3625 0200 0C       		.uleb128 0xc
 3626 0201 03       		.uleb128 0x3
 3627 0202 0E       		.uleb128 0xe
 3628 0203 3A       		.uleb128 0x3a
 3629 0204 0B       		.uleb128 0xb
 3630 0205 3B       		.uleb128 0x3b
 3631 0206 05       		.uleb128 0x5
 3632 0207 27       		.uleb128 0x27
 3633 0208 0C       		.uleb128 0xc
 3634 0209 3C       		.uleb128 0x3c
 3635 020a 0C       		.uleb128 0xc
 3636 020b 00       		.byte	0
 3637 020c 00       		.byte	0
 3638 020d 22       		.uleb128 0x22
 3639 020e 05       		.uleb128 0x5
 3640 020f 00       		.byte	0
 3641 0210 49       		.uleb128 0x49
 3642 0211 13       		.uleb128 0x13
 3643 0212 00       		.byte	0
 3644 0213 00       		.byte	0
 3645 0214 00       		.byte	0
 3646              		.section	.debug_loc,"",%progbits
 3647              	.Ldebug_loc0:
 3648              	.LLST0:
 3649 0000 00000000 		.4byte	.LFB110
 3650 0004 02000000 		.4byte	.LCFI0
 3651 0008 0200     		.2byte	0x2
 3652 000a 7D       		.byte	0x7d
 3653 000b 00       		.sleb128 0
 3654 000c 02000000 		.4byte	.LCFI0
 3655 0010 1A000000 		.4byte	.LFE110
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 97


 3656 0014 0200     		.2byte	0x2
 3657 0016 7D       		.byte	0x7d
 3658 0017 08       		.sleb128 8
 3659 0018 00000000 		.4byte	0
 3660 001c 00000000 		.4byte	0
 3661              	.LLST1:
 3662 0020 00000000 		.4byte	.LFB111
 3663 0024 06000000 		.4byte	.LCFI1
 3664 0028 0200     		.2byte	0x2
 3665 002a 7D       		.byte	0x7d
 3666 002b 00       		.sleb128 0
 3667 002c 06000000 		.4byte	.LCFI1
 3668 0030 50000000 		.4byte	.LFE111
 3669 0034 0200     		.2byte	0x2
 3670 0036 7D       		.byte	0x7d
 3671 0037 10       		.sleb128 16
 3672 0038 00000000 		.4byte	0
 3673 003c 00000000 		.4byte	0
 3674              	.LLST2:
 3675 0040 00000000 		.4byte	.LVL2
 3676 0044 3C000000 		.4byte	.LVL8
 3677 0048 0100     		.2byte	0x1
 3678 004a 51       		.byte	0x51
 3679 004b 3C000000 		.4byte	.LVL8
 3680 004f 50000000 		.4byte	.LFE111
 3681 0053 0400     		.2byte	0x4
 3682 0055 F3       		.byte	0xf3
 3683 0056 01       		.uleb128 0x1
 3684 0057 51       		.byte	0x51
 3685 0058 9F       		.byte	0x9f
 3686 0059 00000000 		.4byte	0
 3687 005d 00000000 		.4byte	0
 3688              	.LLST3:
 3689 0061 00000000 		.4byte	.LVL2
 3690 0065 02000000 		.4byte	.LVL3
 3691 0069 0200     		.2byte	0x2
 3692 006b 30       		.byte	0x30
 3693 006c 9F       		.byte	0x9f
 3694 006d 02000000 		.4byte	.LVL3
 3695 0071 16000000 		.4byte	.LVL4
 3696 0075 0900     		.2byte	0x9
 3697 0077 72       		.byte	0x72
 3698 0078 00       		.sleb128 0
 3699 0079 11       		.byte	0x11
 3700 007a FFFDFF67 		.sleb128 -50331905
 3701 007e 1A       		.byte	0x1a
 3702 007f 9F       		.byte	0x9f
 3703 0080 1C000000 		.4byte	.LVL5
 3704 0084 20000000 		.4byte	.LVL6
 3705 0088 0100     		.2byte	0x1
 3706 008a 53       		.byte	0x53
 3707 008b 20000000 		.4byte	.LVL6
 3708 008f 38000000 		.4byte	.LVL7
 3709 0093 0A00     		.2byte	0xa
 3710 0095 76       		.byte	0x76
 3711 0096 00       		.sleb128 0
 3712 0097 11       		.byte	0x11
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 98


 3713 0098 FDEFFF87 		.sleb128 -1056966659
 3713      7C
 3714 009d 1A       		.byte	0x1a
 3715 009e 9F       		.byte	0x9f
 3716 009f 38000000 		.4byte	.LVL7
 3717 00a3 44000000 		.4byte	.LVL10
 3718 00a7 0100     		.2byte	0x1
 3719 00a9 52       		.byte	0x52
 3720 00aa 44000000 		.4byte	.LVL10
 3721 00ae 4A000000 		.4byte	.LVL11
 3722 00b2 0100     		.2byte	0x1
 3723 00b4 51       		.byte	0x51
 3724 00b5 4A000000 		.4byte	.LVL11
 3725 00b9 50000000 		.4byte	.LFE111
 3726 00bd 0100     		.2byte	0x1
 3727 00bf 53       		.byte	0x53
 3728 00c0 00000000 		.4byte	0
 3729 00c4 00000000 		.4byte	0
 3730              	.LLST4:
 3731 00c8 00000000 		.4byte	.LVL2
 3732 00cc 44000000 		.4byte	.LVL10
 3733 00d0 0200     		.2byte	0x2
 3734 00d2 30       		.byte	0x30
 3735 00d3 9F       		.byte	0x9f
 3736 00d4 44000000 		.4byte	.LVL10
 3737 00d8 50000000 		.4byte	.LFE111
 3738 00dc 0A00     		.2byte	0xa
 3739 00de F3       		.byte	0xf3
 3740 00df 01       		.uleb128 0x1
 3741 00e0 51       		.byte	0x51
 3742 00e1 23       		.byte	0x23
 3743 00e2 14       		.uleb128 0x14
 3744 00e3 94       		.byte	0x94
 3745 00e4 01       		.byte	0x1
 3746 00e5 31       		.byte	0x31
 3747 00e6 1C       		.byte	0x1c
 3748 00e7 9F       		.byte	0x9f
 3749 00e8 00000000 		.4byte	0
 3750 00ec 00000000 		.4byte	0
 3751              	.LLST5:
 3752 00f0 00000000 		.4byte	.LFB113
 3753 00f4 02000000 		.4byte	.LCFI2
 3754 00f8 0200     		.2byte	0x2
 3755 00fa 7D       		.byte	0x7d
 3756 00fb 00       		.sleb128 0
 3757 00fc 02000000 		.4byte	.LCFI2
 3758 0100 2E000000 		.4byte	.LFE113
 3759 0104 0200     		.2byte	0x2
 3760 0106 7D       		.byte	0x7d
 3761 0107 0C       		.sleb128 12
 3762 0108 00000000 		.4byte	0
 3763 010c 00000000 		.4byte	0
 3764              	.LLST6:
 3765 0110 00000000 		.4byte	.LVL13
 3766 0114 14000000 		.4byte	.LVL15
 3767 0118 0100     		.2byte	0x1
 3768 011a 50       		.byte	0x50
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 99


 3769 011b 14000000 		.4byte	.LVL15
 3770 011f 2E000000 		.4byte	.LFE113
 3771 0123 0400     		.2byte	0x4
 3772 0125 F3       		.byte	0xf3
 3773 0126 01       		.uleb128 0x1
 3774 0127 50       		.byte	0x50
 3775 0128 9F       		.byte	0x9f
 3776 0129 00000000 		.4byte	0
 3777 012d 00000000 		.4byte	0
 3778              	.LLST7:
 3779 0131 00000000 		.4byte	.LVL13
 3780 0135 12000000 		.4byte	.LVL14
 3781 0139 0200     		.2byte	0x2
 3782 013b 30       		.byte	0x30
 3783 013c 9F       		.byte	0x9f
 3784 013d 12000000 		.4byte	.LVL14
 3785 0141 1E000000 		.4byte	.LVL16
 3786 0145 0100     		.2byte	0x1
 3787 0147 54       		.byte	0x54
 3788 0148 22000000 		.4byte	.LVL17
 3789 014c 28000000 		.4byte	.LVL18
 3790 0150 0100     		.2byte	0x1
 3791 0152 53       		.byte	0x53
 3792 0153 28000000 		.4byte	.LVL18
 3793 0157 2E000000 		.4byte	.LFE113
 3794 015b 0100     		.2byte	0x1
 3795 015d 50       		.byte	0x50
 3796 015e 00000000 		.4byte	0
 3797 0162 00000000 		.4byte	0
 3798              	.LLST8:
 3799 0166 00000000 		.4byte	.LVL20
 3800 016a 08000000 		.4byte	.LVL21
 3801 016e 0100     		.2byte	0x1
 3802 0170 51       		.byte	0x51
 3803 0171 08000000 		.4byte	.LVL21
 3804 0175 0C000000 		.4byte	.LVL22
 3805 0179 0400     		.2byte	0x4
 3806 017b F3       		.byte	0xf3
 3807 017c 01       		.uleb128 0x1
 3808 017d 51       		.byte	0x51
 3809 017e 9F       		.byte	0x9f
 3810 017f 0C000000 		.4byte	.LVL22
 3811 0183 14000000 		.4byte	.LFE115
 3812 0187 0100     		.2byte	0x1
 3813 0189 51       		.byte	0x51
 3814 018a 00000000 		.4byte	0
 3815 018e 00000000 		.4byte	0
 3816              	.LLST9:
 3817 0192 00000000 		.4byte	.LVL23
 3818 0196 0C000000 		.4byte	.LVL26
 3819 019a 0100     		.2byte	0x1
 3820 019c 51       		.byte	0x51
 3821 019d 0C000000 		.4byte	.LVL26
 3822 01a1 10000000 		.4byte	.LFE116
 3823 01a5 0400     		.2byte	0x4
 3824 01a7 F3       		.byte	0xf3
 3825 01a8 01       		.uleb128 0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 100


 3826 01a9 51       		.byte	0x51
 3827 01aa 9F       		.byte	0x9f
 3828 01ab 00000000 		.4byte	0
 3829 01af 00000000 		.4byte	0
 3830              	.LLST10:
 3831 01b3 00000000 		.4byte	.LVL23
 3832 01b7 02000000 		.4byte	.LVL24
 3833 01bb 0200     		.2byte	0x2
 3834 01bd 30       		.byte	0x30
 3835 01be 9F       		.byte	0x9f
 3836 01bf 02000000 		.4byte	.LVL24
 3837 01c3 0C000000 		.4byte	.LVL26
 3838 01c7 0100     		.2byte	0x1
 3839 01c9 53       		.byte	0x53
 3840 01ca 0C000000 		.4byte	.LVL26
 3841 01ce 10000000 		.4byte	.LFE116
 3842 01d2 0100     		.2byte	0x1
 3843 01d4 51       		.byte	0x51
 3844 01d5 00000000 		.4byte	0
 3845 01d9 00000000 		.4byte	0
 3846              	.LLST11:
 3847 01dd 00000000 		.4byte	.LVL28
 3848 01e1 08000000 		.4byte	.LVL31
 3849 01e5 0100     		.2byte	0x1
 3850 01e7 51       		.byte	0x51
 3851 01e8 08000000 		.4byte	.LVL31
 3852 01ec 0C000000 		.4byte	.LFE118
 3853 01f0 0400     		.2byte	0x4
 3854 01f2 F3       		.byte	0xf3
 3855 01f3 01       		.uleb128 0x1
 3856 01f4 51       		.byte	0x51
 3857 01f5 9F       		.byte	0x9f
 3858 01f6 00000000 		.4byte	0
 3859 01fa 00000000 		.4byte	0
 3860              	.LLST12:
 3861 01fe 00000000 		.4byte	.LVL28
 3862 0202 02000000 		.4byte	.LVL29
 3863 0206 0200     		.2byte	0x2
 3864 0208 30       		.byte	0x30
 3865 0209 9F       		.byte	0x9f
 3866 020a 02000000 		.4byte	.LVL29
 3867 020e 06000000 		.4byte	.LVL30
 3868 0212 0100     		.2byte	0x1
 3869 0214 53       		.byte	0x53
 3870 0215 06000000 		.4byte	.LVL30
 3871 0219 08000000 		.4byte	.LVL31
 3872 021d 0100     		.2byte	0x1
 3873 021f 52       		.byte	0x52
 3874 0220 08000000 		.4byte	.LVL31
 3875 0224 0C000000 		.4byte	.LFE118
 3876 0228 0100     		.2byte	0x1
 3877 022a 51       		.byte	0x51
 3878 022b 00000000 		.4byte	0
 3879 022f 00000000 		.4byte	0
 3880              	.LLST13:
 3881 0233 00000000 		.4byte	.LVL32
 3882 0237 10000000 		.4byte	.LVL33
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 101


 3883 023b 0100     		.2byte	0x1
 3884 023d 50       		.byte	0x50
 3885 023e 10000000 		.4byte	.LVL33
 3886 0242 14000000 		.4byte	.LVL34
 3887 0246 0400     		.2byte	0x4
 3888 0248 F3       		.byte	0xf3
 3889 0249 01       		.uleb128 0x1
 3890 024a 50       		.byte	0x50
 3891 024b 9F       		.byte	0x9f
 3892 024c 14000000 		.4byte	.LVL34
 3893 0250 1C000000 		.4byte	.LFE119
 3894 0254 0100     		.2byte	0x1
 3895 0256 50       		.byte	0x50
 3896 0257 00000000 		.4byte	0
 3897 025b 00000000 		.4byte	0
 3898              	.LLST14:
 3899 025f 00000000 		.4byte	.LVL35
 3900 0263 10000000 		.4byte	.LVL36
 3901 0267 0100     		.2byte	0x1
 3902 0269 50       		.byte	0x50
 3903 026a 10000000 		.4byte	.LVL36
 3904 026e 14000000 		.4byte	.LVL37
 3905 0272 0400     		.2byte	0x4
 3906 0274 F3       		.byte	0xf3
 3907 0275 01       		.uleb128 0x1
 3908 0276 50       		.byte	0x50
 3909 0277 9F       		.byte	0x9f
 3910 0278 14000000 		.4byte	.LVL37
 3911 027c 1C000000 		.4byte	.LFE120
 3912 0280 0100     		.2byte	0x1
 3913 0282 50       		.byte	0x50
 3914 0283 00000000 		.4byte	0
 3915 0287 00000000 		.4byte	0
 3916              	.LLST15:
 3917 028b 00000000 		.4byte	.LFB121
 3918 028f 04000000 		.4byte	.LCFI3
 3919 0293 0200     		.2byte	0x2
 3920 0295 7D       		.byte	0x7d
 3921 0296 00       		.sleb128 0
 3922 0297 04000000 		.4byte	.LCFI3
 3923 029b 9C000000 		.4byte	.LFE121
 3924 029f 0200     		.2byte	0x2
 3925 02a1 7D       		.byte	0x7d
 3926 02a2 0C       		.sleb128 12
 3927 02a3 00000000 		.4byte	0
 3928 02a7 00000000 		.4byte	0
 3929              	.LLST16:
 3930 02ab 00000000 		.4byte	.LVL38
 3931 02af 40000000 		.4byte	.LVL49
 3932 02b3 0100     		.2byte	0x1
 3933 02b5 51       		.byte	0x51
 3934 02b6 40000000 		.4byte	.LVL49
 3935 02ba 48000000 		.4byte	.LVL52
 3936 02be 0400     		.2byte	0x4
 3937 02c0 F3       		.byte	0xf3
 3938 02c1 01       		.uleb128 0x1
 3939 02c2 51       		.byte	0x51
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 102


 3940 02c3 9F       		.byte	0x9f
 3941 02c4 48000000 		.4byte	.LVL52
 3942 02c8 7C000000 		.4byte	.LVL62
 3943 02cc 0100     		.2byte	0x1
 3944 02ce 51       		.byte	0x51
 3945 02cf 7C000000 		.4byte	.LVL62
 3946 02d3 82000000 		.4byte	.LVL64
 3947 02d7 0400     		.2byte	0x4
 3948 02d9 F3       		.byte	0xf3
 3949 02da 01       		.uleb128 0x1
 3950 02db 51       		.byte	0x51
 3951 02dc 9F       		.byte	0x9f
 3952 02dd 82000000 		.4byte	.LVL64
 3953 02e1 94000000 		.4byte	.LVL68
 3954 02e5 0100     		.2byte	0x1
 3955 02e7 51       		.byte	0x51
 3956 02e8 94000000 		.4byte	.LVL68
 3957 02ec 9C000000 		.4byte	.LFE121
 3958 02f0 0400     		.2byte	0x4
 3959 02f2 F3       		.byte	0xf3
 3960 02f3 01       		.uleb128 0x1
 3961 02f4 51       		.byte	0x51
 3962 02f5 9F       		.byte	0x9f
 3963 02f6 00000000 		.4byte	0
 3964 02fa 00000000 		.4byte	0
 3965              	.LLST17:
 3966 02fe 00000000 		.4byte	.LVL38
 3967 0302 2C000000 		.4byte	.LVL44
 3968 0306 0100     		.2byte	0x1
 3969 0308 52       		.byte	0x52
 3970 0309 2C000000 		.4byte	.LVL44
 3971 030d 48000000 		.4byte	.LVL52
 3972 0311 0400     		.2byte	0x4
 3973 0313 F3       		.byte	0xf3
 3974 0314 01       		.uleb128 0x1
 3975 0315 52       		.byte	0x52
 3976 0316 9F       		.byte	0x9f
 3977 0317 48000000 		.4byte	.LVL52
 3978 031b 6C000000 		.4byte	.LVL58
 3979 031f 0100     		.2byte	0x1
 3980 0321 52       		.byte	0x52
 3981 0322 6C000000 		.4byte	.LVL58
 3982 0326 9C000000 		.4byte	.LFE121
 3983 032a 0400     		.2byte	0x4
 3984 032c F3       		.byte	0xf3
 3985 032d 01       		.uleb128 0x1
 3986 032e 52       		.byte	0x52
 3987 032f 9F       		.byte	0x9f
 3988 0330 00000000 		.4byte	0
 3989 0334 00000000 		.4byte	0
 3990              	.LLST18:
 3991 0338 00000000 		.4byte	.LVL38
 3992 033c 1C000000 		.4byte	.LVL42
 3993 0340 0100     		.2byte	0x1
 3994 0342 53       		.byte	0x53
 3995 0343 1C000000 		.4byte	.LVL42
 3996 0347 48000000 		.4byte	.LVL52
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 103


 3997 034b 0400     		.2byte	0x4
 3998 034d F3       		.byte	0xf3
 3999 034e 01       		.uleb128 0x1
 4000 034f 53       		.byte	0x53
 4001 0350 9F       		.byte	0x9f
 4002 0351 48000000 		.4byte	.LVL52
 4003 0355 5C000000 		.4byte	.LVL56
 4004 0359 0100     		.2byte	0x1
 4005 035b 53       		.byte	0x53
 4006 035c 5C000000 		.4byte	.LVL56
 4007 0360 9C000000 		.4byte	.LFE121
 4008 0364 0400     		.2byte	0x4
 4009 0366 F3       		.byte	0xf3
 4010 0367 01       		.uleb128 0x1
 4011 0368 53       		.byte	0x53
 4012 0369 9F       		.byte	0x9f
 4013 036a 00000000 		.4byte	0
 4014 036e 00000000 		.4byte	0
 4015              	.LLST19:
 4016 0372 00000000 		.4byte	.LVL38
 4017 0376 0E000000 		.4byte	.LVL39
 4018 037a 0200     		.2byte	0x2
 4019 037c 30       		.byte	0x30
 4020 037d 9F       		.byte	0x9f
 4021 037e 0E000000 		.4byte	.LVL39
 4022 0382 18000000 		.4byte	.LVL41
 4023 0386 0100     		.2byte	0x1
 4024 0388 56       		.byte	0x56
 4025 0389 18000000 		.4byte	.LVL41
 4026 038d 20000000 		.4byte	.LVL43
 4027 0391 0100     		.2byte	0x1
 4028 0393 55       		.byte	0x55
 4029 0394 20000000 		.4byte	.LVL43
 4030 0398 3C000000 		.4byte	.LVL48
 4031 039c 0100     		.2byte	0x1
 4032 039e 54       		.byte	0x54
 4033 039f 3C000000 		.4byte	.LVL48
 4034 03a3 42000000 		.4byte	.LVL50
 4035 03a7 0100     		.2byte	0x1
 4036 03a9 53       		.byte	0x53
 4037 03aa 42000000 		.4byte	.LVL50
 4038 03ae 44000000 		.4byte	.LVL51
 4039 03b2 0100     		.2byte	0x1
 4040 03b4 51       		.byte	0x51
 4041 03b5 48000000 		.4byte	.LVL52
 4042 03b9 4E000000 		.4byte	.LVL53
 4043 03bd 0200     		.2byte	0x2
 4044 03bf 30       		.byte	0x30
 4045 03c0 9F       		.byte	0x9f
 4046 03c1 4E000000 		.4byte	.LVL53
 4047 03c5 58000000 		.4byte	.LVL55
 4048 03c9 0100     		.2byte	0x1
 4049 03cb 56       		.byte	0x56
 4050 03cc 58000000 		.4byte	.LVL55
 4051 03d0 60000000 		.4byte	.LVL57
 4052 03d4 0100     		.2byte	0x1
 4053 03d6 55       		.byte	0x55
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 104


 4054 03d7 60000000 		.4byte	.LVL57
 4055 03db 78000000 		.4byte	.LVL61
 4056 03df 0100     		.2byte	0x1
 4057 03e1 54       		.byte	0x54
 4058 03e2 78000000 		.4byte	.LVL61
 4059 03e6 7E000000 		.4byte	.LVL63
 4060 03ea 0100     		.2byte	0x1
 4061 03ec 53       		.byte	0x53
 4062 03ed 7E000000 		.4byte	.LVL63
 4063 03f1 82000000 		.4byte	.LVL64
 4064 03f5 0100     		.2byte	0x1
 4065 03f7 51       		.byte	0x51
 4066 03f8 82000000 		.4byte	.LVL64
 4067 03fc 90000000 		.4byte	.LVL67
 4068 0400 0100     		.2byte	0x1
 4069 0402 54       		.byte	0x54
 4070 0403 90000000 		.4byte	.LVL67
 4071 0407 98000000 		.4byte	.LVL69
 4072 040b 0100     		.2byte	0x1
 4073 040d 53       		.byte	0x53
 4074 040e 98000000 		.4byte	.LVL69
 4075 0412 9C000000 		.4byte	.LFE121
 4076 0416 0100     		.2byte	0x1
 4077 0418 52       		.byte	0x52
 4078 0419 00000000 		.4byte	0
 4079 041d 00000000 		.4byte	0
 4080              	.LLST20:
 4081 0421 00000000 		.4byte	.LVL38
 4082 0425 0E000000 		.4byte	.LVL39
 4083 0429 0200     		.2byte	0x2
 4084 042b 30       		.byte	0x30
 4085 042c 9F       		.byte	0x9f
 4086 042d 0E000000 		.4byte	.LVL39
 4087 0431 14000000 		.4byte	.LVL40
 4088 0435 0500     		.2byte	0x5
 4089 0437 37       		.byte	0x37
 4090 0438 74       		.byte	0x74
 4091 0439 00       		.sleb128 0
 4092 043a 24       		.byte	0x24
 4093 043b 9F       		.byte	0x9f
 4094 043c 14000000 		.4byte	.LVL40
 4095 0440 18000000 		.4byte	.LVL41
 4096 0444 0100     		.2byte	0x1
 4097 0446 55       		.byte	0x55
 4098 0447 18000000 		.4byte	.LVL41
 4099 044b 1C000000 		.4byte	.LVL42
 4100 044f 0900     		.2byte	0x9
 4101 0451 73       		.byte	0x73
 4102 0452 00       		.sleb128 0
 4103 0453 08       		.byte	0x8
 4104 0454 FF       		.byte	0xff
 4105 0455 1A       		.byte	0x1a
 4106 0456 74       		.byte	0x74
 4107 0457 00       		.sleb128 0
 4108 0458 24       		.byte	0x24
 4109 0459 9F       		.byte	0x9f
 4110 045a 32000000 		.4byte	.LVL46
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 105


 4111 045e 38000000 		.4byte	.LVL47
 4112 0462 0500     		.2byte	0x5
 4113 0464 4F       		.byte	0x4f
 4114 0465 72       		.byte	0x72
 4115 0466 00       		.sleb128 0
 4116 0467 24       		.byte	0x24
 4117 0468 9F       		.byte	0x9f
 4118 0469 38000000 		.4byte	.LVL47
 4119 046d 3C000000 		.4byte	.LVL48
 4120 0471 0100     		.2byte	0x1
 4121 0473 53       		.byte	0x53
 4122 0474 3C000000 		.4byte	.LVL48
 4123 0478 40000000 		.4byte	.LVL49
 4124 047c 0900     		.2byte	0x9
 4125 047e 71       		.byte	0x71
 4126 047f 00       		.sleb128 0
 4127 0480 08       		.byte	0x8
 4128 0481 FF       		.byte	0xff
 4129 0482 1A       		.byte	0x1a
 4130 0483 72       		.byte	0x72
 4131 0484 00       		.sleb128 0
 4132 0485 24       		.byte	0x24
 4133 0486 9F       		.byte	0x9f
 4134 0487 48000000 		.4byte	.LVL52
 4135 048b 4E000000 		.4byte	.LVL53
 4136 048f 0200     		.2byte	0x2
 4137 0491 30       		.byte	0x30
 4138 0492 9F       		.byte	0x9f
 4139 0493 4E000000 		.4byte	.LVL53
 4140 0497 54000000 		.4byte	.LVL54
 4141 049b 0500     		.2byte	0x5
 4142 049d 37       		.byte	0x37
 4143 049e 74       		.byte	0x74
 4144 049f 00       		.sleb128 0
 4145 04a0 24       		.byte	0x24
 4146 04a1 9F       		.byte	0x9f
 4147 04a2 54000000 		.4byte	.LVL54
 4148 04a6 58000000 		.4byte	.LVL55
 4149 04aa 0100     		.2byte	0x1
 4150 04ac 55       		.byte	0x55
 4151 04ad 58000000 		.4byte	.LVL55
 4152 04b1 5C000000 		.4byte	.LVL56
 4153 04b5 0900     		.2byte	0x9
 4154 04b7 73       		.byte	0x73
 4155 04b8 00       		.sleb128 0
 4156 04b9 08       		.byte	0x8
 4157 04ba FF       		.byte	0xff
 4158 04bb 1A       		.byte	0x1a
 4159 04bc 74       		.byte	0x74
 4160 04bd 00       		.sleb128 0
 4161 04be 24       		.byte	0x24
 4162 04bf 9F       		.byte	0x9f
 4163 04c0 6E000000 		.4byte	.LVL59
 4164 04c4 74000000 		.4byte	.LVL60
 4165 04c8 0500     		.2byte	0x5
 4166 04ca 4F       		.byte	0x4f
 4167 04cb 72       		.byte	0x72
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 106


 4168 04cc 00       		.sleb128 0
 4169 04cd 24       		.byte	0x24
 4170 04ce 9F       		.byte	0x9f
 4171 04cf 74000000 		.4byte	.LVL60
 4172 04d3 78000000 		.4byte	.LVL61
 4173 04d7 0100     		.2byte	0x1
 4174 04d9 53       		.byte	0x53
 4175 04da 78000000 		.4byte	.LVL61
 4176 04de 7C000000 		.4byte	.LVL62
 4177 04e2 0900     		.2byte	0x9
 4178 04e4 71       		.byte	0x71
 4179 04e5 00       		.sleb128 0
 4180 04e6 08       		.byte	0x8
 4181 04e7 FF       		.byte	0xff
 4182 04e8 1A       		.byte	0x1a
 4183 04e9 72       		.byte	0x72
 4184 04ea 00       		.sleb128 0
 4185 04eb 24       		.byte	0x24
 4186 04ec 9F       		.byte	0x9f
 4187 04ed 86000000 		.4byte	.LVL65
 4188 04f1 8C000000 		.4byte	.LVL66
 4189 04f5 0500     		.2byte	0x5
 4190 04f7 4F       		.byte	0x4f
 4191 04f8 72       		.byte	0x72
 4192 04f9 00       		.sleb128 0
 4193 04fa 24       		.byte	0x24
 4194 04fb 9F       		.byte	0x9f
 4195 04fc 8C000000 		.4byte	.LVL66
 4196 0500 90000000 		.4byte	.LVL67
 4197 0504 0100     		.2byte	0x1
 4198 0506 53       		.byte	0x53
 4199 0507 90000000 		.4byte	.LVL67
 4200 050b 94000000 		.4byte	.LVL68
 4201 050f 0900     		.2byte	0x9
 4202 0511 71       		.byte	0x71
 4203 0512 00       		.sleb128 0
 4204 0513 08       		.byte	0x8
 4205 0514 FF       		.byte	0xff
 4206 0515 1A       		.byte	0x1a
 4207 0516 72       		.byte	0x72
 4208 0517 00       		.sleb128 0
 4209 0518 24       		.byte	0x24
 4210 0519 9F       		.byte	0x9f
 4211 051a 00000000 		.4byte	0
 4212 051e 00000000 		.4byte	0
 4213              	.LLST21:
 4214 0522 00000000 		.4byte	.LVL71
 4215 0526 02000000 		.4byte	.LVL72
 4216 052a 0100     		.2byte	0x1
 4217 052c 50       		.byte	0x50
 4218 052d 02000000 		.4byte	.LVL72
 4219 0531 08000000 		.4byte	.LFE123
 4220 0535 0400     		.2byte	0x4
 4221 0537 F3       		.byte	0xf3
 4222 0538 01       		.uleb128 0x1
 4223 0539 50       		.byte	0x50
 4224 053a 9F       		.byte	0x9f
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 107


 4225 053b 00000000 		.4byte	0
 4226 053f 00000000 		.4byte	0
 4227              	.LLST22:
 4228 0543 00000000 		.4byte	.LVL71
 4229 0547 02000000 		.4byte	.LVL72
 4230 054b 0200     		.2byte	0x2
 4231 054d 30       		.byte	0x30
 4232 054e 9F       		.byte	0x9f
 4233 054f 02000000 		.4byte	.LVL72
 4234 0553 06000000 		.4byte	.LVL73
 4235 0557 0900     		.2byte	0x9
 4236 0559 70       		.byte	0x70
 4237 055a 00       		.sleb128 0
 4238 055b 40       		.byte	0x40
 4239 055c 42       		.byte	0x42
 4240 055d 24       		.byte	0x24
 4241 055e 1A       		.byte	0x1a
 4242 055f 30       		.byte	0x30
 4243 0560 2E       		.byte	0x2e
 4244 0561 9F       		.byte	0x9f
 4245 0562 00000000 		.4byte	0
 4246 0566 00000000 		.4byte	0
 4247              	.LLST23:
 4248 056a 00000000 		.4byte	.LVL74
 4249 056e 08000000 		.4byte	.LVL75
 4250 0572 0100     		.2byte	0x1
 4251 0574 51       		.byte	0x51
 4252 0575 08000000 		.4byte	.LVL75
 4253 0579 0C000000 		.4byte	.LVL76
 4254 057d 0400     		.2byte	0x4
 4255 057f F3       		.byte	0xf3
 4256 0580 01       		.uleb128 0x1
 4257 0581 51       		.byte	0x51
 4258 0582 9F       		.byte	0x9f
 4259 0583 0C000000 		.4byte	.LVL76
 4260 0587 14000000 		.4byte	.LFE124
 4261 058b 0100     		.2byte	0x1
 4262 058d 51       		.byte	0x51
 4263 058e 00000000 		.4byte	0
 4264 0592 00000000 		.4byte	0
 4265              	.LLST24:
 4266 0596 00000000 		.4byte	.LVL77
 4267 059a 08000000 		.4byte	.LVL78
 4268 059e 0100     		.2byte	0x1
 4269 05a0 51       		.byte	0x51
 4270 05a1 08000000 		.4byte	.LVL78
 4271 05a5 0C000000 		.4byte	.LVL79
 4272 05a9 0400     		.2byte	0x4
 4273 05ab F3       		.byte	0xf3
 4274 05ac 01       		.uleb128 0x1
 4275 05ad 51       		.byte	0x51
 4276 05ae 9F       		.byte	0x9f
 4277 05af 0C000000 		.4byte	.LVL79
 4278 05b3 14000000 		.4byte	.LFE125
 4279 05b7 0100     		.2byte	0x1
 4280 05b9 51       		.byte	0x51
 4281 05ba 00000000 		.4byte	0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 108


 4282 05be 00000000 		.4byte	0
 4283              	.LLST25:
 4284 05c2 00000000 		.4byte	.LVL80
 4285 05c6 04000000 		.4byte	.LVL82
 4286 05ca 0100     		.2byte	0x1
 4287 05cc 51       		.byte	0x51
 4288 05cd 04000000 		.4byte	.LVL82
 4289 05d1 10000000 		.4byte	.LFE126
 4290 05d5 0400     		.2byte	0x4
 4291 05d7 F3       		.byte	0xf3
 4292 05d8 01       		.uleb128 0x1
 4293 05d9 51       		.byte	0x51
 4294 05da 9F       		.byte	0x9f
 4295 05db 00000000 		.4byte	0
 4296 05df 00000000 		.4byte	0
 4297              	.LLST26:
 4298 05e3 00000000 		.4byte	.LVL80
 4299 05e7 02000000 		.4byte	.LVL81
 4300 05eb 0200     		.2byte	0x2
 4301 05ed 30       		.byte	0x30
 4302 05ee 9F       		.byte	0x9f
 4303 05ef 02000000 		.4byte	.LVL81
 4304 05f3 08000000 		.4byte	.LVL83
 4305 05f7 0100     		.2byte	0x1
 4306 05f9 53       		.byte	0x53
 4307 05fa 08000000 		.4byte	.LVL83
 4308 05fe 0C000000 		.4byte	.LVL84
 4309 0602 0100     		.2byte	0x1
 4310 0604 52       		.byte	0x52
 4311 0605 0C000000 		.4byte	.LVL84
 4312 0609 10000000 		.4byte	.LFE126
 4313 060d 0100     		.2byte	0x1
 4314 060f 51       		.byte	0x51
 4315 0610 00000000 		.4byte	0
 4316 0614 00000000 		.4byte	0
 4317              	.LLST27:
 4318 0618 00000000 		.4byte	.LVL80
 4319 061c 08000000 		.4byte	.LVL83
 4320 0620 0200     		.2byte	0x2
 4321 0622 30       		.byte	0x30
 4322 0623 9F       		.byte	0x9f
 4323 0624 08000000 		.4byte	.LVL83
 4324 0628 10000000 		.4byte	.LFE126
 4325 062c 0900     		.2byte	0x9
 4326 062e F3       		.byte	0xf3
 4327 062f 01       		.uleb128 0x1
 4328 0630 51       		.byte	0x51
 4329 0631 08       		.byte	0x8
 4330 0632 FF       		.byte	0xff
 4331 0633 1A       		.byte	0x1a
 4332 0634 31       		.byte	0x31
 4333 0635 1C       		.byte	0x1c
 4334 0636 9F       		.byte	0x9f
 4335 0637 00000000 		.4byte	0
 4336 063b 00000000 		.4byte	0
 4337              	.LLST28:
 4338 063f 00000000 		.4byte	.LVL85
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 109


 4339 0643 08000000 		.4byte	.LVL86
 4340 0647 0100     		.2byte	0x1
 4341 0649 51       		.byte	0x51
 4342 064a 08000000 		.4byte	.LVL86
 4343 064e 0C000000 		.4byte	.LVL87
 4344 0652 0400     		.2byte	0x4
 4345 0654 F3       		.byte	0xf3
 4346 0655 01       		.uleb128 0x1
 4347 0656 51       		.byte	0x51
 4348 0657 9F       		.byte	0x9f
 4349 0658 0C000000 		.4byte	.LVL87
 4350 065c 14000000 		.4byte	.LFE127
 4351 0660 0100     		.2byte	0x1
 4352 0662 51       		.byte	0x51
 4353 0663 00000000 		.4byte	0
 4354 0667 00000000 		.4byte	0
 4355              	.LLST29:
 4356 066b 00000000 		.4byte	.LVL88
 4357 066f 02000000 		.4byte	.LVL89
 4358 0673 0100     		.2byte	0x1
 4359 0675 50       		.byte	0x50
 4360 0676 02000000 		.4byte	.LVL89
 4361 067a 06000000 		.4byte	.LFE128
 4362 067e 0400     		.2byte	0x4
 4363 0680 F3       		.byte	0xf3
 4364 0681 01       		.uleb128 0x1
 4365 0682 50       		.byte	0x50
 4366 0683 9F       		.byte	0x9f
 4367 0684 00000000 		.4byte	0
 4368 0688 00000000 		.4byte	0
 4369              	.LLST30:
 4370 068c 00000000 		.4byte	.LVL90
 4371 0690 08000000 		.4byte	.LVL91
 4372 0694 0100     		.2byte	0x1
 4373 0696 51       		.byte	0x51
 4374 0697 08000000 		.4byte	.LVL91
 4375 069b 0C000000 		.4byte	.LVL92
 4376 069f 0400     		.2byte	0x4
 4377 06a1 F3       		.byte	0xf3
 4378 06a2 01       		.uleb128 0x1
 4379 06a3 51       		.byte	0x51
 4380 06a4 9F       		.byte	0x9f
 4381 06a5 0C000000 		.4byte	.LVL92
 4382 06a9 14000000 		.4byte	.LFE130
 4383 06ad 0100     		.2byte	0x1
 4384 06af 51       		.byte	0x51
 4385 06b0 00000000 		.4byte	0
 4386 06b4 00000000 		.4byte	0
 4387              	.LLST31:
 4388 06b8 00000000 		.4byte	.LVL93
 4389 06bc 08000000 		.4byte	.LVL94
 4390 06c0 0100     		.2byte	0x1
 4391 06c2 51       		.byte	0x51
 4392 06c3 08000000 		.4byte	.LVL94
 4393 06c7 0C000000 		.4byte	.LVL95
 4394 06cb 0400     		.2byte	0x4
 4395 06cd F3       		.byte	0xf3
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 110


 4396 06ce 01       		.uleb128 0x1
 4397 06cf 51       		.byte	0x51
 4398 06d0 9F       		.byte	0x9f
 4399 06d1 0C000000 		.4byte	.LVL95
 4400 06d5 14000000 		.4byte	.LFE131
 4401 06d9 0100     		.2byte	0x1
 4402 06db 51       		.byte	0x51
 4403 06dc 00000000 		.4byte	0
 4404 06e0 00000000 		.4byte	0
 4405              	.LLST32:
 4406 06e4 00000000 		.4byte	.LVL96
 4407 06e8 10000000 		.4byte	.LVL97
 4408 06ec 0100     		.2byte	0x1
 4409 06ee 50       		.byte	0x50
 4410 06ef 10000000 		.4byte	.LVL97
 4411 06f3 14000000 		.4byte	.LVL98
 4412 06f7 0400     		.2byte	0x4
 4413 06f9 F3       		.byte	0xf3
 4414 06fa 01       		.uleb128 0x1
 4415 06fb 50       		.byte	0x50
 4416 06fc 9F       		.byte	0x9f
 4417 06fd 14000000 		.4byte	.LVL98
 4418 0701 1C000000 		.4byte	.LFE132
 4419 0705 0100     		.2byte	0x1
 4420 0707 50       		.byte	0x50
 4421 0708 00000000 		.4byte	0
 4422 070c 00000000 		.4byte	0
 4423              	.LLST33:
 4424 0710 00000000 		.4byte	.LFB133
 4425 0714 04000000 		.4byte	.LCFI4
 4426 0718 0200     		.2byte	0x2
 4427 071a 7D       		.byte	0x7d
 4428 071b 00       		.sleb128 0
 4429 071c 04000000 		.4byte	.LCFI4
 4430 0720 64000000 		.4byte	.LFE133
 4431 0724 0200     		.2byte	0x2
 4432 0726 7D       		.byte	0x7d
 4433 0727 0C       		.sleb128 12
 4434 0728 00000000 		.4byte	0
 4435 072c 00000000 		.4byte	0
 4436              	.LLST34:
 4437 0730 00000000 		.4byte	.LVL99
 4438 0734 3E000000 		.4byte	.LVL110
 4439 0738 0100     		.2byte	0x1
 4440 073a 51       		.byte	0x51
 4441 073b 3E000000 		.4byte	.LVL110
 4442 073f 46000000 		.4byte	.LVL112
 4443 0743 0400     		.2byte	0x4
 4444 0745 F3       		.byte	0xf3
 4445 0746 01       		.uleb128 0x1
 4446 0747 51       		.byte	0x51
 4447 0748 9F       		.byte	0x9f
 4448 0749 46000000 		.4byte	.LVL112
 4449 074d 64000000 		.4byte	.LFE133
 4450 0751 0100     		.2byte	0x1
 4451 0753 51       		.byte	0x51
 4452 0754 00000000 		.4byte	0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 111


 4453 0758 00000000 		.4byte	0
 4454              	.LLST35:
 4455 075c 00000000 		.4byte	.LVL99
 4456 0760 28000000 		.4byte	.LVL106
 4457 0764 0100     		.2byte	0x1
 4458 0766 52       		.byte	0x52
 4459 0767 28000000 		.4byte	.LVL106
 4460 076b 46000000 		.4byte	.LVL112
 4461 076f 0400     		.2byte	0x4
 4462 0771 F3       		.byte	0xf3
 4463 0772 01       		.uleb128 0x1
 4464 0773 52       		.byte	0x52
 4465 0774 9F       		.byte	0x9f
 4466 0775 46000000 		.4byte	.LVL112
 4467 0779 64000000 		.4byte	.LFE133
 4468 077d 0100     		.2byte	0x1
 4469 077f 52       		.byte	0x52
 4470 0780 00000000 		.4byte	0
 4471 0784 00000000 		.4byte	0
 4472              	.LLST36:
 4473 0788 00000000 		.4byte	.LVL99
 4474 078c 1A000000 		.4byte	.LVL103
 4475 0790 0100     		.2byte	0x1
 4476 0792 53       		.byte	0x53
 4477 0793 1A000000 		.4byte	.LVL103
 4478 0797 46000000 		.4byte	.LVL112
 4479 079b 0400     		.2byte	0x4
 4480 079d F3       		.byte	0xf3
 4481 079e 01       		.uleb128 0x1
 4482 079f 53       		.byte	0x53
 4483 07a0 9F       		.byte	0x9f
 4484 07a1 46000000 		.4byte	.LVL112
 4485 07a5 5C000000 		.4byte	.LVL116
 4486 07a9 0100     		.2byte	0x1
 4487 07ab 53       		.byte	0x53
 4488 07ac 5C000000 		.4byte	.LVL116
 4489 07b0 64000000 		.4byte	.LFE133
 4490 07b4 0400     		.2byte	0x4
 4491 07b6 F3       		.byte	0xf3
 4492 07b7 01       		.uleb128 0x1
 4493 07b8 53       		.byte	0x53
 4494 07b9 9F       		.byte	0x9f
 4495 07ba 00000000 		.4byte	0
 4496 07be 00000000 		.4byte	0
 4497              	.LLST37:
 4498 07c2 00000000 		.4byte	.LVL99
 4499 07c6 0C000000 		.4byte	.LVL100
 4500 07ca 0200     		.2byte	0x2
 4501 07cc 30       		.byte	0x30
 4502 07cd 9F       		.byte	0x9f
 4503 07ce 0C000000 		.4byte	.LVL100
 4504 07d2 16000000 		.4byte	.LVL102
 4505 07d6 0100     		.2byte	0x1
 4506 07d8 56       		.byte	0x56
 4507 07d9 16000000 		.4byte	.LVL102
 4508 07dd 1E000000 		.4byte	.LVL104
 4509 07e1 0100     		.2byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 112


 4510 07e3 55       		.byte	0x55
 4511 07e4 1E000000 		.4byte	.LVL104
 4512 07e8 40000000 		.4byte	.LVL111
 4513 07ec 0100     		.2byte	0x1
 4514 07ee 54       		.byte	0x54
 4515 07ef 40000000 		.4byte	.LVL111
 4516 07f3 46000000 		.4byte	.LVL112
 4517 07f7 0100     		.2byte	0x1
 4518 07f9 51       		.byte	0x51
 4519 07fa 46000000 		.4byte	.LVL112
 4520 07fe 4E000000 		.4byte	.LVL113
 4521 0802 0200     		.2byte	0x2
 4522 0804 30       		.byte	0x30
 4523 0805 9F       		.byte	0x9f
 4524 0806 4E000000 		.4byte	.LVL113
 4525 080a 58000000 		.4byte	.LVL115
 4526 080e 0100     		.2byte	0x1
 4527 0810 56       		.byte	0x56
 4528 0811 58000000 		.4byte	.LVL115
 4529 0815 60000000 		.4byte	.LVL117
 4530 0819 0100     		.2byte	0x1
 4531 081b 55       		.byte	0x55
 4532 081c 60000000 		.4byte	.LVL117
 4533 0820 64000000 		.4byte	.LFE133
 4534 0824 0100     		.2byte	0x1
 4535 0826 54       		.byte	0x54
 4536 0827 00000000 		.4byte	0
 4537 082b 00000000 		.4byte	0
 4538              	.LLST38:
 4539 082f 00000000 		.4byte	.LVL99
 4540 0833 0C000000 		.4byte	.LVL100
 4541 0837 0200     		.2byte	0x2
 4542 0839 30       		.byte	0x30
 4543 083a 9F       		.byte	0x9f
 4544 083b 0C000000 		.4byte	.LVL100
 4545 083f 12000000 		.4byte	.LVL101
 4546 0843 0500     		.2byte	0x5
 4547 0845 37       		.byte	0x37
 4548 0846 74       		.byte	0x74
 4549 0847 00       		.sleb128 0
 4550 0848 24       		.byte	0x24
 4551 0849 9F       		.byte	0x9f
 4552 084a 12000000 		.4byte	.LVL101
 4553 084e 16000000 		.4byte	.LVL102
 4554 0852 0100     		.2byte	0x1
 4555 0854 55       		.byte	0x55
 4556 0855 16000000 		.4byte	.LVL102
 4557 0859 1A000000 		.4byte	.LVL103
 4558 085d 0900     		.2byte	0x9
 4559 085f 73       		.byte	0x73
 4560 0860 00       		.sleb128 0
 4561 0861 08       		.byte	0x8
 4562 0862 FF       		.byte	0xff
 4563 0863 1A       		.byte	0x1a
 4564 0864 74       		.byte	0x74
 4565 0865 00       		.sleb128 0
 4566 0866 24       		.byte	0x24
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 113


 4567 0867 9F       		.byte	0x9f
 4568 0868 30000000 		.4byte	.LVL107
 4569 086c 36000000 		.4byte	.LVL108
 4570 0870 0500     		.2byte	0x5
 4571 0872 4F       		.byte	0x4f
 4572 0873 73       		.byte	0x73
 4573 0874 00       		.sleb128 0
 4574 0875 24       		.byte	0x24
 4575 0876 9F       		.byte	0x9f
 4576 0877 36000000 		.4byte	.LVL108
 4577 087b 3A000000 		.4byte	.LVL109
 4578 087f 0100     		.2byte	0x1
 4579 0881 52       		.byte	0x52
 4580 0882 3A000000 		.4byte	.LVL109
 4581 0886 3E000000 		.4byte	.LVL110
 4582 088a 0900     		.2byte	0x9
 4583 088c 71       		.byte	0x71
 4584 088d 00       		.sleb128 0
 4585 088e 08       		.byte	0x8
 4586 088f FF       		.byte	0xff
 4587 0890 1A       		.byte	0x1a
 4588 0891 73       		.byte	0x73
 4589 0892 00       		.sleb128 0
 4590 0893 24       		.byte	0x24
 4591 0894 9F       		.byte	0x9f
 4592 0895 46000000 		.4byte	.LVL112
 4593 0899 4E000000 		.4byte	.LVL113
 4594 089d 0200     		.2byte	0x2
 4595 089f 30       		.byte	0x30
 4596 08a0 9F       		.byte	0x9f
 4597 08a1 4E000000 		.4byte	.LVL113
 4598 08a5 54000000 		.4byte	.LVL114
 4599 08a9 0500     		.2byte	0x5
 4600 08ab 37       		.byte	0x37
 4601 08ac 74       		.byte	0x74
 4602 08ad 00       		.sleb128 0
 4603 08ae 24       		.byte	0x24
 4604 08af 9F       		.byte	0x9f
 4605 08b0 54000000 		.4byte	.LVL114
 4606 08b4 58000000 		.4byte	.LVL115
 4607 08b8 0100     		.2byte	0x1
 4608 08ba 55       		.byte	0x55
 4609 08bb 58000000 		.4byte	.LVL115
 4610 08bf 5C000000 		.4byte	.LVL116
 4611 08c3 0900     		.2byte	0x9
 4612 08c5 73       		.byte	0x73
 4613 08c6 00       		.sleb128 0
 4614 08c7 08       		.byte	0x8
 4615 08c8 FF       		.byte	0xff
 4616 08c9 1A       		.byte	0x1a
 4617 08ca 74       		.byte	0x74
 4618 08cb 00       		.sleb128 0
 4619 08cc 24       		.byte	0x24
 4620 08cd 9F       		.byte	0x9f
 4621 08ce 00000000 		.4byte	0
 4622 08d2 00000000 		.4byte	0
 4623              	.LLST39:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 114


 4624 08d6 00000000 		.4byte	.LVL99
 4625 08da 22000000 		.4byte	.LVL105
 4626 08de 0200     		.2byte	0x2
 4627 08e0 30       		.byte	0x30
 4628 08e1 9F       		.byte	0x9f
 4629 08e2 22000000 		.4byte	.LVL105
 4630 08e6 3A000000 		.4byte	.LVL109
 4631 08ea 0900     		.2byte	0x9
 4632 08ec 74       		.byte	0x74
 4633 08ed 00       		.sleb128 0
 4634 08ee 48       		.byte	0x48
 4635 08ef 41       		.byte	0x41
 4636 08f0 24       		.byte	0x24
 4637 08f1 1A       		.byte	0x1a
 4638 08f2 44       		.byte	0x44
 4639 08f3 25       		.byte	0x25
 4640 08f4 9F       		.byte	0x9f
 4641 08f5 46000000 		.4byte	.LVL112
 4642 08f9 64000000 		.4byte	.LFE133
 4643 08fd 0200     		.2byte	0x2
 4644 08ff 30       		.byte	0x30
 4645 0900 9F       		.byte	0x9f
 4646 0901 00000000 		.4byte	0
 4647 0905 00000000 		.4byte	0
 4648              	.LLST40:
 4649 0909 00000000 		.4byte	.LVL118
 4650 090d 04000000 		.4byte	.LVL120
 4651 0911 0100     		.2byte	0x1
 4652 0913 51       		.byte	0x51
 4653 0914 04000000 		.4byte	.LVL120
 4654 0918 10000000 		.4byte	.LFE134
 4655 091c 0400     		.2byte	0x4
 4656 091e F3       		.byte	0xf3
 4657 091f 01       		.uleb128 0x1
 4658 0920 51       		.byte	0x51
 4659 0921 9F       		.byte	0x9f
 4660 0922 00000000 		.4byte	0
 4661 0926 00000000 		.4byte	0
 4662              	.LLST41:
 4663 092a 00000000 		.4byte	.LVL118
 4664 092e 02000000 		.4byte	.LVL119
 4665 0932 0200     		.2byte	0x2
 4666 0934 30       		.byte	0x30
 4667 0935 9F       		.byte	0x9f
 4668 0936 02000000 		.4byte	.LVL119
 4669 093a 08000000 		.4byte	.LVL121
 4670 093e 0100     		.2byte	0x1
 4671 0940 53       		.byte	0x53
 4672 0941 08000000 		.4byte	.LVL121
 4673 0945 0C000000 		.4byte	.LVL122
 4674 0949 0100     		.2byte	0x1
 4675 094b 52       		.byte	0x52
 4676 094c 0C000000 		.4byte	.LVL122
 4677 0950 10000000 		.4byte	.LFE134
 4678 0954 0100     		.2byte	0x1
 4679 0956 51       		.byte	0x51
 4680 0957 00000000 		.4byte	0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 115


 4681 095b 00000000 		.4byte	0
 4682              	.LLST42:
 4683 095f 00000000 		.4byte	.LVL118
 4684 0963 08000000 		.4byte	.LVL121
 4685 0967 0200     		.2byte	0x2
 4686 0969 30       		.byte	0x30
 4687 096a 9F       		.byte	0x9f
 4688 096b 08000000 		.4byte	.LVL121
 4689 096f 10000000 		.4byte	.LFE134
 4690 0973 0900     		.2byte	0x9
 4691 0975 F3       		.byte	0xf3
 4692 0976 01       		.uleb128 0x1
 4693 0977 51       		.byte	0x51
 4694 0978 08       		.byte	0x8
 4695 0979 FF       		.byte	0xff
 4696 097a 1A       		.byte	0x1a
 4697 097b 31       		.byte	0x31
 4698 097c 1C       		.byte	0x1c
 4699 097d 9F       		.byte	0x9f
 4700 097e 00000000 		.4byte	0
 4701 0982 00000000 		.4byte	0
 4702              	.LLST43:
 4703 0986 00000000 		.4byte	.LFB135
 4704 098a 02000000 		.4byte	.LCFI5
 4705 098e 0200     		.2byte	0x2
 4706 0990 7D       		.byte	0x7d
 4707 0991 00       		.sleb128 0
 4708 0992 02000000 		.4byte	.LCFI5
 4709 0996 16000000 		.4byte	.LFE135
 4710 099a 0200     		.2byte	0x2
 4711 099c 7D       		.byte	0x7d
 4712 099d 08       		.sleb128 8
 4713 099e 00000000 		.4byte	0
 4714 09a2 00000000 		.4byte	0
 4715              	.LLST44:
 4716 09a6 00000000 		.4byte	.LVL123
 4717 09aa 0A000000 		.4byte	.LVL125
 4718 09ae 0100     		.2byte	0x1
 4719 09b0 50       		.byte	0x50
 4720 09b1 0A000000 		.4byte	.LVL125
 4721 09b5 16000000 		.4byte	.LFE135
 4722 09b9 0200     		.2byte	0x2
 4723 09bb 91       		.byte	0x91
 4724 09bc 7C       		.sleb128 -4
 4725 09bd 00000000 		.4byte	0
 4726 09c1 00000000 		.4byte	0
 4727              	.LLST45:
 4728 09c5 00000000 		.4byte	.LVL123
 4729 09c9 0C000000 		.4byte	.LVL126
 4730 09cd 0100     		.2byte	0x1
 4731 09cf 51       		.byte	0x51
 4732 09d0 0C000000 		.4byte	.LVL126
 4733 09d4 16000000 		.4byte	.LFE135
 4734 09d8 0400     		.2byte	0x4
 4735 09da F3       		.byte	0xf3
 4736 09db 01       		.uleb128 0x1
 4737 09dc 51       		.byte	0x51
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 116


 4738 09dd 9F       		.byte	0x9f
 4739 09de 00000000 		.4byte	0
 4740 09e2 00000000 		.4byte	0
 4741              	.LLST46:
 4742 09e6 06000000 		.4byte	.LVL124
 4743 09ea 0C000000 		.4byte	.LVL126
 4744 09ee 0200     		.2byte	0x2
 4745 09f0 91       		.byte	0x91
 4746 09f1 7C       		.sleb128 -4
 4747 09f2 0E000000 		.4byte	.LVL127
 4748 09f6 16000000 		.4byte	.LFE135
 4749 09fa 0100     		.2byte	0x1
 4750 09fc 51       		.byte	0x51
 4751 09fd 00000000 		.4byte	0
 4752 0a01 00000000 		.4byte	0
 4753              	.LLST47:
 4754 0a05 00000000 		.4byte	.LVL128
 4755 0a09 08000000 		.4byte	.LVL131
 4756 0a0d 0100     		.2byte	0x1
 4757 0a0f 51       		.byte	0x51
 4758 0a10 08000000 		.4byte	.LVL131
 4759 0a14 0C000000 		.4byte	.LFE136
 4760 0a18 0400     		.2byte	0x4
 4761 0a1a F3       		.byte	0xf3
 4762 0a1b 01       		.uleb128 0x1
 4763 0a1c 51       		.byte	0x51
 4764 0a1d 9F       		.byte	0x9f
 4765 0a1e 00000000 		.4byte	0
 4766 0a22 00000000 		.4byte	0
 4767              	.LLST48:
 4768 0a26 00000000 		.4byte	.LVL128
 4769 0a2a 02000000 		.4byte	.LVL129
 4770 0a2e 0200     		.2byte	0x2
 4771 0a30 30       		.byte	0x30
 4772 0a31 9F       		.byte	0x9f
 4773 0a32 02000000 		.4byte	.LVL129
 4774 0a36 06000000 		.4byte	.LVL130
 4775 0a3a 0100     		.2byte	0x1
 4776 0a3c 53       		.byte	0x53
 4777 0a3d 06000000 		.4byte	.LVL130
 4778 0a41 08000000 		.4byte	.LVL131
 4779 0a45 0100     		.2byte	0x1
 4780 0a47 52       		.byte	0x52
 4781 0a48 08000000 		.4byte	.LVL131
 4782 0a4c 0C000000 		.4byte	.LFE136
 4783 0a50 0100     		.2byte	0x1
 4784 0a52 51       		.byte	0x51
 4785 0a53 00000000 		.4byte	0
 4786 0a57 00000000 		.4byte	0
 4787              	.LLST49:
 4788 0a5b 00000000 		.4byte	.LVL132
 4789 0a5f 08000000 		.4byte	.LVL135
 4790 0a63 0100     		.2byte	0x1
 4791 0a65 51       		.byte	0x51
 4792 0a66 08000000 		.4byte	.LVL135
 4793 0a6a 0C000000 		.4byte	.LFE137
 4794 0a6e 0400     		.2byte	0x4
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 117


 4795 0a70 F3       		.byte	0xf3
 4796 0a71 01       		.uleb128 0x1
 4797 0a72 51       		.byte	0x51
 4798 0a73 9F       		.byte	0x9f
 4799 0a74 00000000 		.4byte	0
 4800 0a78 00000000 		.4byte	0
 4801              	.LLST50:
 4802 0a7c 00000000 		.4byte	.LVL132
 4803 0a80 02000000 		.4byte	.LVL133
 4804 0a84 0200     		.2byte	0x2
 4805 0a86 30       		.byte	0x30
 4806 0a87 9F       		.byte	0x9f
 4807 0a88 02000000 		.4byte	.LVL133
 4808 0a8c 06000000 		.4byte	.LVL134
 4809 0a90 0100     		.2byte	0x1
 4810 0a92 53       		.byte	0x53
 4811 0a93 06000000 		.4byte	.LVL134
 4812 0a97 08000000 		.4byte	.LVL135
 4813 0a9b 0100     		.2byte	0x1
 4814 0a9d 52       		.byte	0x52
 4815 0a9e 08000000 		.4byte	.LVL135
 4816 0aa2 0C000000 		.4byte	.LFE137
 4817 0aa6 0100     		.2byte	0x1
 4818 0aa8 51       		.byte	0x51
 4819 0aa9 00000000 		.4byte	0
 4820 0aad 00000000 		.4byte	0
 4821              	.LLST51:
 4822 0ab1 00000000 		.4byte	.LVL137
 4823 0ab5 02000000 		.4byte	.LVL138
 4824 0ab9 0100     		.2byte	0x1
 4825 0abb 50       		.byte	0x50
 4826 0abc 02000000 		.4byte	.LVL138
 4827 0ac0 08000000 		.4byte	.LFE139
 4828 0ac4 0400     		.2byte	0x4
 4829 0ac6 F3       		.byte	0xf3
 4830 0ac7 01       		.uleb128 0x1
 4831 0ac8 50       		.byte	0x50
 4832 0ac9 9F       		.byte	0x9f
 4833 0aca 00000000 		.4byte	0
 4834 0ace 00000000 		.4byte	0
 4835              	.LLST52:
 4836 0ad2 00000000 		.4byte	.LVL137
 4837 0ad6 02000000 		.4byte	.LVL138
 4838 0ada 0200     		.2byte	0x2
 4839 0adc 30       		.byte	0x30
 4840 0add 9F       		.byte	0x9f
 4841 0ade 02000000 		.4byte	.LVL138
 4842 0ae2 06000000 		.4byte	.LVL139
 4843 0ae6 0900     		.2byte	0x9
 4844 0ae8 70       		.byte	0x70
 4845 0ae9 00       		.sleb128 0
 4846 0aea 40       		.byte	0x40
 4847 0aeb 42       		.byte	0x42
 4848 0aec 24       		.byte	0x24
 4849 0aed 1A       		.byte	0x1a
 4850 0aee 30       		.byte	0x30
 4851 0aef 2E       		.byte	0x2e
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 118


 4852 0af0 9F       		.byte	0x9f
 4853 0af1 00000000 		.4byte	0
 4854 0af5 00000000 		.4byte	0
 4855              	.LLST53:
 4856 0af9 00000000 		.4byte	.LVL140
 4857 0afd 08000000 		.4byte	.LVL141
 4858 0b01 0100     		.2byte	0x1
 4859 0b03 51       		.byte	0x51
 4860 0b04 08000000 		.4byte	.LVL141
 4861 0b08 0C000000 		.4byte	.LVL142
 4862 0b0c 0400     		.2byte	0x4
 4863 0b0e F3       		.byte	0xf3
 4864 0b0f 01       		.uleb128 0x1
 4865 0b10 51       		.byte	0x51
 4866 0b11 9F       		.byte	0x9f
 4867 0b12 0C000000 		.4byte	.LVL142
 4868 0b16 14000000 		.4byte	.LFE140
 4869 0b1a 0100     		.2byte	0x1
 4870 0b1c 51       		.byte	0x51
 4871 0b1d 00000000 		.4byte	0
 4872 0b21 00000000 		.4byte	0
 4873              	.LLST54:
 4874 0b25 00000000 		.4byte	.LVL143
 4875 0b29 08000000 		.4byte	.LVL144
 4876 0b2d 0100     		.2byte	0x1
 4877 0b2f 51       		.byte	0x51
 4878 0b30 08000000 		.4byte	.LVL144
 4879 0b34 0C000000 		.4byte	.LVL145
 4880 0b38 0400     		.2byte	0x4
 4881 0b3a F3       		.byte	0xf3
 4882 0b3b 01       		.uleb128 0x1
 4883 0b3c 51       		.byte	0x51
 4884 0b3d 9F       		.byte	0x9f
 4885 0b3e 0C000000 		.4byte	.LVL145
 4886 0b42 14000000 		.4byte	.LFE141
 4887 0b46 0100     		.2byte	0x1
 4888 0b48 51       		.byte	0x51
 4889 0b49 00000000 		.4byte	0
 4890 0b4d 00000000 		.4byte	0
 4891              	.LLST55:
 4892 0b51 00000000 		.4byte	.LFB142
 4893 0b55 02000000 		.4byte	.LCFI6
 4894 0b59 0200     		.2byte	0x2
 4895 0b5b 7D       		.byte	0x7d
 4896 0b5c 00       		.sleb128 0
 4897 0b5d 02000000 		.4byte	.LCFI6
 4898 0b61 1A000000 		.4byte	.LFE142
 4899 0b65 0200     		.2byte	0x2
 4900 0b67 7D       		.byte	0x7d
 4901 0b68 08       		.sleb128 8
 4902 0b69 00000000 		.4byte	0
 4903 0b6d 00000000 		.4byte	0
 4904              	.LLST56:
 4905 0b71 00000000 		.4byte	.LVL146
 4906 0b75 0A000000 		.4byte	.LVL148
 4907 0b79 0100     		.2byte	0x1
 4908 0b7b 50       		.byte	0x50
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 119


 4909 0b7c 0A000000 		.4byte	.LVL148
 4910 0b80 1A000000 		.4byte	.LFE142
 4911 0b84 0200     		.2byte	0x2
 4912 0b86 91       		.byte	0x91
 4913 0b87 7C       		.sleb128 -4
 4914 0b88 00000000 		.4byte	0
 4915 0b8c 00000000 		.4byte	0
 4916              	.LLST57:
 4917 0b90 00000000 		.4byte	.LVL146
 4918 0b94 0E000000 		.4byte	.LVL149
 4919 0b98 0100     		.2byte	0x1
 4920 0b9a 51       		.byte	0x51
 4921 0b9b 0E000000 		.4byte	.LVL149
 4922 0b9f 1A000000 		.4byte	.LFE142
 4923 0ba3 0400     		.2byte	0x4
 4924 0ba5 F3       		.byte	0xf3
 4925 0ba6 01       		.uleb128 0x1
 4926 0ba7 51       		.byte	0x51
 4927 0ba8 9F       		.byte	0x9f
 4928 0ba9 00000000 		.4byte	0
 4929 0bad 00000000 		.4byte	0
 4930              	.LLST58:
 4931 0bb1 06000000 		.4byte	.LVL147
 4932 0bb5 0E000000 		.4byte	.LVL149
 4933 0bb9 0200     		.2byte	0x2
 4934 0bbb 91       		.byte	0x91
 4935 0bbc 7C       		.sleb128 -4
 4936 0bbd 10000000 		.4byte	.LVL150
 4937 0bc1 1A000000 		.4byte	.LFE142
 4938 0bc5 0100     		.2byte	0x1
 4939 0bc7 51       		.byte	0x51
 4940 0bc8 00000000 		.4byte	0
 4941 0bcc 00000000 		.4byte	0
 4942              	.LLST59:
 4943 0bd0 00000000 		.4byte	.LVL151
 4944 0bd4 04000000 		.4byte	.LVL152
 4945 0bd8 0100     		.2byte	0x1
 4946 0bda 51       		.byte	0x51
 4947 0bdb 04000000 		.4byte	.LVL152
 4948 0bdf 1A000000 		.4byte	.LFE143
 4949 0be3 0400     		.2byte	0x4
 4950 0be5 F3       		.byte	0xf3
 4951 0be6 01       		.uleb128 0x1
 4952 0be7 51       		.byte	0x51
 4953 0be8 9F       		.byte	0x9f
 4954 0be9 00000000 		.4byte	0
 4955 0bed 00000000 		.4byte	0
 4956              	.LLST60:
 4957 0bf1 00000000 		.4byte	.LVL151
 4958 0bf5 10000000 		.4byte	.LVL154
 4959 0bf9 0100     		.2byte	0x1
 4960 0bfb 52       		.byte	0x52
 4961 0bfc 10000000 		.4byte	.LVL154
 4962 0c00 14000000 		.4byte	.LVL155
 4963 0c04 0400     		.2byte	0x4
 4964 0c06 F3       		.byte	0xf3
 4965 0c07 01       		.uleb128 0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 120


 4966 0c08 52       		.byte	0x52
 4967 0c09 9F       		.byte	0x9f
 4968 0c0a 14000000 		.4byte	.LVL155
 4969 0c0e 1A000000 		.4byte	.LFE143
 4970 0c12 0100     		.2byte	0x1
 4971 0c14 52       		.byte	0x52
 4972 0c15 00000000 		.4byte	0
 4973 0c19 00000000 		.4byte	0
 4974              	.LLST61:
 4975 0c1d 00000000 		.4byte	.LVL151
 4976 0c21 04000000 		.4byte	.LVL152
 4977 0c25 0600     		.2byte	0x6
 4978 0c27 71       		.byte	0x71
 4979 0c28 00       		.sleb128 0
 4980 0c29 08       		.byte	0x8
 4981 0c2a FF       		.byte	0xff
 4982 0c2b 1A       		.byte	0x1a
 4983 0c2c 9F       		.byte	0x9f
 4984 0c2d 04000000 		.4byte	.LVL152
 4985 0c31 16000000 		.4byte	.LVL156
 4986 0c35 0100     		.2byte	0x1
 4987 0c37 51       		.byte	0x51
 4988 0c38 16000000 		.4byte	.LVL156
 4989 0c3c 1A000000 		.4byte	.LFE143
 4990 0c40 0900     		.2byte	0x9
 4991 0c42 31       		.byte	0x31
 4992 0c43 F3       		.byte	0xf3
 4993 0c44 01       		.uleb128 0x1
 4994 0c45 51       		.byte	0x51
 4995 0c46 08       		.byte	0x8
 4996 0c47 FF       		.byte	0xff
 4997 0c48 1A       		.byte	0x1a
 4998 0c49 24       		.byte	0x24
 4999 0c4a 9F       		.byte	0x9f
 5000 0c4b 00000000 		.4byte	0
 5001 0c4f 00000000 		.4byte	0
 5002              	.LLST62:
 5003 0c53 00000000 		.4byte	.LVL157
 5004 0c57 0A000000 		.4byte	.LVL159
 5005 0c5b 0100     		.2byte	0x1
 5006 0c5d 50       		.byte	0x50
 5007 0c5e 0A000000 		.4byte	.LVL159
 5008 0c62 0C000000 		.4byte	.LFE144
 5009 0c66 0400     		.2byte	0x4
 5010 0c68 F3       		.byte	0xf3
 5011 0c69 01       		.uleb128 0x1
 5012 0c6a 50       		.byte	0x50
 5013 0c6b 9F       		.byte	0x9f
 5014 0c6c 00000000 		.4byte	0
 5015 0c70 00000000 		.4byte	0
 5016              	.LLST63:
 5017 0c74 00000000 		.4byte	.LVL157
 5018 0c78 02000000 		.4byte	.LVL158
 5019 0c7c 0200     		.2byte	0x2
 5020 0c7e 30       		.byte	0x30
 5021 0c7f 9F       		.byte	0x9f
 5022 0c80 02000000 		.4byte	.LVL158
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 121


 5023 0c84 0C000000 		.4byte	.LFE144
 5024 0c88 0B00     		.2byte	0xb
 5025 0c8a 71       		.byte	0x71
 5026 0c8b 00       		.sleb128 0
 5027 0c8c 08       		.byte	0x8
 5028 0c8d FF       		.byte	0xff
 5029 0c8e 1A       		.byte	0x1a
 5030 0c8f 73       		.byte	0x73
 5031 0c90 00       		.sleb128 0
 5032 0c91 1A       		.byte	0x1a
 5033 0c92 30       		.byte	0x30
 5034 0c93 2E       		.byte	0x2e
 5035 0c94 9F       		.byte	0x9f
 5036 0c95 00000000 		.4byte	0
 5037 0c99 00000000 		.4byte	0
 5038              	.LLST64:
 5039 0c9d 00000000 		.4byte	.LVL160
 5040 0ca1 02000000 		.4byte	.LVL161
 5041 0ca5 0100     		.2byte	0x1
 5042 0ca7 51       		.byte	0x51
 5043 0ca8 02000000 		.4byte	.LVL161
 5044 0cac 06000000 		.4byte	.LFE145
 5045 0cb0 0400     		.2byte	0x4
 5046 0cb2 F3       		.byte	0xf3
 5047 0cb3 01       		.uleb128 0x1
 5048 0cb4 51       		.byte	0x51
 5049 0cb5 9F       		.byte	0x9f
 5050 0cb6 00000000 		.4byte	0
 5051 0cba 00000000 		.4byte	0
 5052              	.LLST65:
 5053 0cbe 00000000 		.4byte	.LVL162
 5054 0cc2 04000000 		.4byte	.LVL164
 5055 0cc6 0100     		.2byte	0x1
 5056 0cc8 50       		.byte	0x50
 5057 0cc9 04000000 		.4byte	.LVL164
 5058 0ccd 1C000000 		.4byte	.LFE146
 5059 0cd1 0400     		.2byte	0x4
 5060 0cd3 F3       		.byte	0xf3
 5061 0cd4 01       		.uleb128 0x1
 5062 0cd5 50       		.byte	0x50
 5063 0cd6 9F       		.byte	0x9f
 5064 0cd7 00000000 		.4byte	0
 5065 0cdb 00000000 		.4byte	0
 5066              	.LLST66:
 5067 0cdf 00000000 		.4byte	.LVL162
 5068 0ce3 0E000000 		.4byte	.LVL165
 5069 0ce7 0100     		.2byte	0x1
 5070 0ce9 51       		.byte	0x51
 5071 0cea 0E000000 		.4byte	.LVL165
 5072 0cee 1C000000 		.4byte	.LFE146
 5073 0cf2 0400     		.2byte	0x4
 5074 0cf4 F3       		.byte	0xf3
 5075 0cf5 01       		.uleb128 0x1
 5076 0cf6 51       		.byte	0x51
 5077 0cf7 9F       		.byte	0x9f
 5078 0cf8 00000000 		.4byte	0
 5079 0cfc 00000000 		.4byte	0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 122


 5080              	.LLST67:
 5081 0d00 00000000 		.4byte	.LVL162
 5082 0d04 1A000000 		.4byte	.LVL166
 5083 0d08 0200     		.2byte	0x2
 5084 0d0a 30       		.byte	0x30
 5085 0d0b 9F       		.byte	0x9f
 5086 0d0c 1A000000 		.4byte	.LVL166
 5087 0d10 1C000000 		.4byte	.LFE146
 5088 0d14 0100     		.2byte	0x1
 5089 0d16 50       		.byte	0x50
 5090 0d17 00000000 		.4byte	0
 5091 0d1b 00000000 		.4byte	0
 5092              	.LLST68:
 5093 0d1f 00000000 		.4byte	.LVL162
 5094 0d23 0E000000 		.4byte	.LVL165
 5095 0d27 0900     		.2byte	0x9
 5096 0d29 71       		.byte	0x71
 5097 0d2a 00       		.sleb128 0
 5098 0d2b 38       		.byte	0x38
 5099 0d2c 25       		.byte	0x25
 5100 0d2d 0A       		.byte	0xa
 5101 0d2e FFFF     		.2byte	0xffff
 5102 0d30 1A       		.byte	0x1a
 5103 0d31 9F       		.byte	0x9f
 5104 0d32 00000000 		.4byte	0
 5105 0d36 00000000 		.4byte	0
 5106              	.LLST69:
 5107 0d3a 00000000 		.4byte	.LVL162
 5108 0d3e 02000000 		.4byte	.LVL163
 5109 0d42 0200     		.2byte	0x2
 5110 0d44 30       		.byte	0x30
 5111 0d45 9F       		.byte	0x9f
 5112 0d46 02000000 		.4byte	.LVL163
 5113 0d4a 0E000000 		.4byte	.LVL165
 5114 0d4e 0B00     		.2byte	0xb
 5115 0d50 31       		.byte	0x31
 5116 0d51 71       		.byte	0x71
 5117 0d52 00       		.sleb128 0
 5118 0d53 08       		.byte	0x8
 5119 0d54 FF       		.byte	0xff
 5120 0d55 1A       		.byte	0x1a
 5121 0d56 24       		.byte	0x24
 5122 0d57 73       		.byte	0x73
 5123 0d58 00       		.sleb128 0
 5124 0d59 1A       		.byte	0x1a
 5125 0d5a 9F       		.byte	0x9f
 5126 0d5b 00000000 		.4byte	0
 5127 0d5f 00000000 		.4byte	0
 5128              	.LLST70:
 5129 0d63 00000000 		.4byte	.LVL167
 5130 0d67 04000000 		.4byte	.LVL168
 5131 0d6b 0100     		.2byte	0x1
 5132 0d6d 51       		.byte	0x51
 5133 0d6e 04000000 		.4byte	.LVL168
 5134 0d72 08000000 		.4byte	.LFE147
 5135 0d76 0400     		.2byte	0x4
 5136 0d78 F3       		.byte	0xf3
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 123


 5137 0d79 01       		.uleb128 0x1
 5138 0d7a 51       		.byte	0x51
 5139 0d7b 9F       		.byte	0x9f
 5140 0d7c 00000000 		.4byte	0
 5141 0d80 00000000 		.4byte	0
 5142              	.LLST71:
 5143 0d84 00000000 		.4byte	.LVL167
 5144 0d88 04000000 		.4byte	.LVL168
 5145 0d8c 0500     		.2byte	0x5
 5146 0d8e 71       		.byte	0x71
 5147 0d8f 00       		.sleb128 0
 5148 0d90 38       		.byte	0x38
 5149 0d91 25       		.byte	0x25
 5150 0d92 9F       		.byte	0x9f
 5151 0d93 04000000 		.4byte	.LVL168
 5152 0d97 08000000 		.4byte	.LFE147
 5153 0d9b 0600     		.2byte	0x6
 5154 0d9d F3       		.byte	0xf3
 5155 0d9e 01       		.uleb128 0x1
 5156 0d9f 51       		.byte	0x51
 5157 0da0 38       		.byte	0x38
 5158 0da1 25       		.byte	0x25
 5159 0da2 9F       		.byte	0x9f
 5160 0da3 00000000 		.4byte	0
 5161 0da7 00000000 		.4byte	0
 5162              		.section	.debug_aranges,"",%progbits
 5163 0000 44010000 		.4byte	0x144
 5164 0004 0200     		.2byte	0x2
 5165 0006 00000000 		.4byte	.Ldebug_info0
 5166 000a 04       		.byte	0x4
 5167 000b 00       		.byte	0
 5168 000c 0000     		.2byte	0
 5169 000e 0000     		.2byte	0
 5170 0010 00000000 		.4byte	.LFB110
 5171 0014 1A000000 		.4byte	.LFE110-.LFB110
 5172 0018 00000000 		.4byte	.LFB111
 5173 001c 50000000 		.4byte	.LFE111-.LFB111
 5174 0020 00000000 		.4byte	.LFB112
 5175 0024 14000000 		.4byte	.LFE112-.LFB112
 5176 0028 00000000 		.4byte	.LFB113
 5177 002c 2E000000 		.4byte	.LFE113-.LFB113
 5178 0030 00000000 		.4byte	.LFB114
 5179 0034 0C000000 		.4byte	.LFE114-.LFB114
 5180 0038 00000000 		.4byte	.LFB115
 5181 003c 14000000 		.4byte	.LFE115-.LFB115
 5182 0040 00000000 		.4byte	.LFB116
 5183 0044 10000000 		.4byte	.LFE116-.LFB116
 5184 0048 00000000 		.4byte	.LFB117
 5185 004c 06000000 		.4byte	.LFE117-.LFB117
 5186 0050 00000000 		.4byte	.LFB118
 5187 0054 0C000000 		.4byte	.LFE118-.LFB118
 5188 0058 00000000 		.4byte	.LFB119
 5189 005c 1C000000 		.4byte	.LFE119-.LFB119
 5190 0060 00000000 		.4byte	.LFB120
 5191 0064 1C000000 		.4byte	.LFE120-.LFB120
 5192 0068 00000000 		.4byte	.LFB121
 5193 006c 9C000000 		.4byte	.LFE121-.LFB121
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 124


 5194 0070 00000000 		.4byte	.LFB122
 5195 0074 0A000000 		.4byte	.LFE122-.LFB122
 5196 0078 00000000 		.4byte	.LFB123
 5197 007c 08000000 		.4byte	.LFE123-.LFB123
 5198 0080 00000000 		.4byte	.LFB124
 5199 0084 14000000 		.4byte	.LFE124-.LFB124
 5200 0088 00000000 		.4byte	.LFB125
 5201 008c 14000000 		.4byte	.LFE125-.LFB125
 5202 0090 00000000 		.4byte	.LFB126
 5203 0094 10000000 		.4byte	.LFE126-.LFB126
 5204 0098 00000000 		.4byte	.LFB127
 5205 009c 14000000 		.4byte	.LFE127-.LFB127
 5206 00a0 00000000 		.4byte	.LFB128
 5207 00a4 06000000 		.4byte	.LFE128-.LFB128
 5208 00a8 00000000 		.4byte	.LFB129
 5209 00ac 0C000000 		.4byte	.LFE129-.LFB129
 5210 00b0 00000000 		.4byte	.LFB130
 5211 00b4 14000000 		.4byte	.LFE130-.LFB130
 5212 00b8 00000000 		.4byte	.LFB131
 5213 00bc 14000000 		.4byte	.LFE131-.LFB131
 5214 00c0 00000000 		.4byte	.LFB132
 5215 00c4 1C000000 		.4byte	.LFE132-.LFB132
 5216 00c8 00000000 		.4byte	.LFB133
 5217 00cc 64000000 		.4byte	.LFE133-.LFB133
 5218 00d0 00000000 		.4byte	.LFB134
 5219 00d4 10000000 		.4byte	.LFE134-.LFB134
 5220 00d8 00000000 		.4byte	.LFB135
 5221 00dc 16000000 		.4byte	.LFE135-.LFB135
 5222 00e0 00000000 		.4byte	.LFB136
 5223 00e4 0C000000 		.4byte	.LFE136-.LFB136
 5224 00e8 00000000 		.4byte	.LFB137
 5225 00ec 0C000000 		.4byte	.LFE137-.LFB137
 5226 00f0 00000000 		.4byte	.LFB138
 5227 00f4 0A000000 		.4byte	.LFE138-.LFB138
 5228 00f8 00000000 		.4byte	.LFB139
 5229 00fc 08000000 		.4byte	.LFE139-.LFB139
 5230 0100 00000000 		.4byte	.LFB140
 5231 0104 14000000 		.4byte	.LFE140-.LFB140
 5232 0108 00000000 		.4byte	.LFB141
 5233 010c 14000000 		.4byte	.LFE141-.LFB141
 5234 0110 00000000 		.4byte	.LFB142
 5235 0114 1A000000 		.4byte	.LFE142-.LFB142
 5236 0118 00000000 		.4byte	.LFB143
 5237 011c 1A000000 		.4byte	.LFE143-.LFB143
 5238 0120 00000000 		.4byte	.LFB144
 5239 0124 0C000000 		.4byte	.LFE144-.LFB144
 5240 0128 00000000 		.4byte	.LFB145
 5241 012c 06000000 		.4byte	.LFE145-.LFB145
 5242 0130 00000000 		.4byte	.LFB146
 5243 0134 1C000000 		.4byte	.LFE146-.LFB146
 5244 0138 00000000 		.4byte	.LFB147
 5245 013c 08000000 		.4byte	.LFE147-.LFB147
 5246 0140 00000000 		.4byte	0
 5247 0144 00000000 		.4byte	0
 5248              		.section	.debug_ranges,"",%progbits
 5249              	.Ldebug_ranges0:
 5250 0000 00000000 		.4byte	.LFB110
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 125


 5251 0004 1A000000 		.4byte	.LFE110
 5252 0008 00000000 		.4byte	.LFB111
 5253 000c 50000000 		.4byte	.LFE111
 5254 0010 00000000 		.4byte	.LFB112
 5255 0014 14000000 		.4byte	.LFE112
 5256 0018 00000000 		.4byte	.LFB113
 5257 001c 2E000000 		.4byte	.LFE113
 5258 0020 00000000 		.4byte	.LFB114
 5259 0024 0C000000 		.4byte	.LFE114
 5260 0028 00000000 		.4byte	.LFB115
 5261 002c 14000000 		.4byte	.LFE115
 5262 0030 00000000 		.4byte	.LFB116
 5263 0034 10000000 		.4byte	.LFE116
 5264 0038 00000000 		.4byte	.LFB117
 5265 003c 06000000 		.4byte	.LFE117
 5266 0040 00000000 		.4byte	.LFB118
 5267 0044 0C000000 		.4byte	.LFE118
 5268 0048 00000000 		.4byte	.LFB119
 5269 004c 1C000000 		.4byte	.LFE119
 5270 0050 00000000 		.4byte	.LFB120
 5271 0054 1C000000 		.4byte	.LFE120
 5272 0058 00000000 		.4byte	.LFB121
 5273 005c 9C000000 		.4byte	.LFE121
 5274 0060 00000000 		.4byte	.LFB122
 5275 0064 0A000000 		.4byte	.LFE122
 5276 0068 00000000 		.4byte	.LFB123
 5277 006c 08000000 		.4byte	.LFE123
 5278 0070 00000000 		.4byte	.LFB124
 5279 0074 14000000 		.4byte	.LFE124
 5280 0078 00000000 		.4byte	.LFB125
 5281 007c 14000000 		.4byte	.LFE125
 5282 0080 00000000 		.4byte	.LFB126
 5283 0084 10000000 		.4byte	.LFE126
 5284 0088 00000000 		.4byte	.LFB127
 5285 008c 14000000 		.4byte	.LFE127
 5286 0090 00000000 		.4byte	.LFB128
 5287 0094 06000000 		.4byte	.LFE128
 5288 0098 00000000 		.4byte	.LFB129
 5289 009c 0C000000 		.4byte	.LFE129
 5290 00a0 00000000 		.4byte	.LFB130
 5291 00a4 14000000 		.4byte	.LFE130
 5292 00a8 00000000 		.4byte	.LFB131
 5293 00ac 14000000 		.4byte	.LFE131
 5294 00b0 00000000 		.4byte	.LFB132
 5295 00b4 1C000000 		.4byte	.LFE132
 5296 00b8 00000000 		.4byte	.LFB133
 5297 00bc 64000000 		.4byte	.LFE133
 5298 00c0 00000000 		.4byte	.LFB134
 5299 00c4 10000000 		.4byte	.LFE134
 5300 00c8 00000000 		.4byte	.LFB135
 5301 00cc 16000000 		.4byte	.LFE135
 5302 00d0 00000000 		.4byte	.LFB136
 5303 00d4 0C000000 		.4byte	.LFE136
 5304 00d8 00000000 		.4byte	.LFB137
 5305 00dc 0C000000 		.4byte	.LFE137
 5306 00e0 00000000 		.4byte	.LFB138
 5307 00e4 0A000000 		.4byte	.LFE138
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 126


 5308 00e8 00000000 		.4byte	.LFB139
 5309 00ec 08000000 		.4byte	.LFE139
 5310 00f0 00000000 		.4byte	.LFB140
 5311 00f4 14000000 		.4byte	.LFE140
 5312 00f8 00000000 		.4byte	.LFB141
 5313 00fc 14000000 		.4byte	.LFE141
 5314 0100 00000000 		.4byte	.LFB142
 5315 0104 1A000000 		.4byte	.LFE142
 5316 0108 00000000 		.4byte	.LFB143
 5317 010c 1A000000 		.4byte	.LFE143
 5318 0110 00000000 		.4byte	.LFB144
 5319 0114 0C000000 		.4byte	.LFE144
 5320 0118 00000000 		.4byte	.LFB145
 5321 011c 06000000 		.4byte	.LFE145
 5322 0120 00000000 		.4byte	.LFB146
 5323 0124 1C000000 		.4byte	.LFE146
 5324 0128 00000000 		.4byte	.LFB147
 5325 012c 08000000 		.4byte	.LFE147
 5326 0130 00000000 		.4byte	0
 5327 0134 00000000 		.4byte	0
 5328              		.section	.debug_line,"",%progbits
 5329              	.Ldebug_line0:
 5330 0000 BE040000 		.section	.debug_str,"MS",%progbits,1
 5330      02000501 
 5330      00000201 
 5330      FB0E0D00 
 5330      01010101 
 5331              	.LASF60:
 5332 0000 4E657753 		.ascii	"NewState\000"
 5332      74617465 
 5332      00
 5333              	.LASF103:
 5334 0009 4144435F 		.ascii	"ADC_IT\000"
 5334      495400
 5335              	.LASF40:
 5336 0010 4144435F 		.ascii	"ADC_ExternalTrigConv\000"
 5336      45787465 
 5336      726E616C 
 5336      54726967 
 5336      436F6E76 
 5337              	.LASF15:
 5338 0025 466C6167 		.ascii	"FlagStatus\000"
 5338      53746174 
 5338      757300
 5339              	.LASF48:
 5340 0030 4144435F 		.ascii	"ADC_CommonInitTypeDef\000"
 5340      436F6D6D 
 5340      6F6E496E 
 5340      69745479 
 5340      70654465 
 5341              	.LASF21:
 5342 0046 534D5052 		.ascii	"SMPR2\000"
 5342      3200
 5343              	.LASF51:
 5344 004c 41444378 		.ascii	"ADCx\000"
 5344      00
 5345              	.LASF50:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 127


 5346 0051 4144435F 		.ascii	"ADC_Init\000"
 5346      496E6974 
 5346      00
 5347              	.LASF17:
 5348 005a 44495341 		.ascii	"DISABLE\000"
 5348      424C4500 
 5349              	.LASF11:
 5350 0062 6C6F6E67 		.ascii	"long long unsigned int\000"
 5350      206C6F6E 
 5350      6720756E 
 5350      7369676E 
 5350      65642069 
 5351              	.LASF22:
 5352 0079 4A4F4652 		.ascii	"JOFR1\000"
 5352      3100
 5353              	.LASF42:
 5354 007f 4144435F 		.ascii	"ADC_NbrOfConversion\000"
 5354      4E62724F 
 5354      66436F6E 
 5354      76657273 
 5354      696F6E00 
 5355              	.LASF115:
 5356 0093 49544D5F 		.ascii	"ITM_RxBuffer\000"
 5356      52784275 
 5356      66666572 
 5356      00
 5357              	.LASF29:
 5358 00a0 4A535152 		.ascii	"JSQR\000"
 5358      00
 5359              	.LASF10:
 5360 00a5 6C6F6E67 		.ascii	"long long int\000"
 5360      206C6F6E 
 5360      6720696E 
 5360      7400
 5361              	.LASF0:
 5362 00b3 7369676E 		.ascii	"signed char\000"
 5362      65642063 
 5362      68617200 
 5363              	.LASF64:
 5364 00bf 4144435F 		.ascii	"ADC_AnalogWatchdogThresholdsConfig\000"
 5364      416E616C 
 5364      6F675761 
 5364      74636864 
 5364      6F675468 
 5365              	.LASF96:
 5366 00e2 4144435F 		.ascii	"ADC_ExternalTrigInjecConvEdge\000"
 5366      45787465 
 5366      726E616C 
 5366      54726967 
 5366      496E6A65 
 5367              	.LASF86:
 5368 0100 4144435F 		.ascii	"ADC_InjectedChannelConfig\000"
 5368      496E6A65 
 5368      63746564 
 5368      4368616E 
 5368      6E656C43 
 5369              	.LASF63:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 128


 5370 011a 746D7072 		.ascii	"tmpreg\000"
 5370      656700
 5371              	.LASF82:
 5372 0121 4144435F 		.ascii	"ADC_GetConversionValue\000"
 5372      47657443 
 5372      6F6E7665 
 5372      7273696F 
 5372      6E56616C 
 5373              	.LASF59:
 5374 0138 4144435F 		.ascii	"ADC_Cmd\000"
 5374      436D6400 
 5375              	.LASF38:
 5376 0140 4144435F 		.ascii	"ADC_ContinuousConvMode\000"
 5376      436F6E74 
 5376      696E756F 
 5376      7573436F 
 5376      6E764D6F 
 5377              	.LASF7:
 5378 0157 6C6F6E67 		.ascii	"long int\000"
 5378      20696E74 
 5378      00
 5379              	.LASF106:
 5380 0160 4144435F 		.ascii	"ADC_FLAG\000"
 5380      464C4147 
 5380      00
 5381              	.LASF84:
 5382 0169 4144435F 		.ascii	"ADC_DMARequestAfterLastTransferCmd\000"
 5382      444D4152 
 5382      65717565 
 5382      73744166 
 5382      7465724C 
 5383              	.LASF18:
 5384 018c 454E4142 		.ascii	"ENABLE\000"
 5384      4C4500
 5385              	.LASF4:
 5386 0193 75696E74 		.ascii	"uint16_t\000"
 5386      31365F74 
 5386      00
 5387              	.LASF34:
 5388 019c 4144435F 		.ascii	"ADC_TypeDef\000"
 5388      54797065 
 5388      44656600 
 5389              	.LASF52:
 5390 01a8 4144435F 		.ascii	"ADC_InitStruct\000"
 5390      496E6974 
 5390      53747275 
 5390      637400
 5391              	.LASF78:
 5392 01b7 4144435F 		.ascii	"ADC_DiscModeChannelCountConfig\000"
 5392      44697363 
 5392      4D6F6465 
 5392      4368616E 
 5392      6E656C43 
 5393              	.LASF55:
 5394 01d6 4144435F 		.ascii	"ADC_StructInit\000"
 5394      53747275 
 5394      6374496E 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 129


 5394      697400
 5395              	.LASF67:
 5396 01e5 4144435F 		.ascii	"ADC_AnalogWatchdogSingleChannelConfig\000"
 5396      416E616C 
 5396      6F675761 
 5396      74636864 
 5396      6F675369 
 5397              	.LASF66:
 5398 020b 4C6F7754 		.ascii	"LowThreshold\000"
 5398      68726573 
 5398      686F6C64 
 5398      00
 5399              	.LASF19:
 5400 0218 46756E63 		.ascii	"FunctionalState\000"
 5400      74696F6E 
 5400      616C5374 
 5400      61746500 
 5401              	.LASF16:
 5402 0228 49545374 		.ascii	"ITStatus\000"
 5402      61747573 
 5402      00
 5403              	.LASF100:
 5404 0231 4144435F 		.ascii	"ADC_InjectedDiscModeCmd\000"
 5404      496E6A65 
 5404      63746564 
 5404      44697363 
 5404      4D6F6465 
 5405              	.LASF12:
 5406 0249 756E7369 		.ascii	"unsigned int\000"
 5406      676E6564 
 5406      20696E74 
 5406      00
 5407              	.LASF102:
 5408 0256 4144435F 		.ascii	"ADC_ITConfig\000"
 5408      4954436F 
 5408      6E666967 
 5408      00
 5409              	.LASF111:
 5410 0263 474E5520 		.ascii	"GNU C 4.7.3 20121207 (release) [ARM/embedded-4_7-br"
 5410      4320342E 
 5410      372E3320 
 5410      32303132 
 5410      31323037 
 5411 0296 616E6368 		.ascii	"anch revision 194305]\000"
 5411      20726576 
 5411      6973696F 
 5411      6E203139 
 5411      34333035 
 5412              	.LASF9:
 5413 02ac 6C6F6E67 		.ascii	"long unsigned int\000"
 5413      20756E73 
 5413      69676E65 
 5413      6420696E 
 5413      7400
 5414              	.LASF69:
 5415 02be 4144435F 		.ascii	"ADC_TempSensorVrefintCmd\000"
 5415      54656D70 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 130


 5415      53656E73 
 5415      6F725672 
 5415      6566696E 
 5416              	.LASF46:
 5417 02d7 4144435F 		.ascii	"ADC_DMAAccessMode\000"
 5417      444D4141 
 5417      63636573 
 5417      734D6F64 
 5417      6500
 5418              	.LASF97:
 5419 02e9 4144435F 		.ascii	"ADC_SoftwareStartInjectedConv\000"
 5419      536F6674 
 5419      77617265 
 5419      53746172 
 5419      74496E6A 
 5420              	.LASF5:
 5421 0307 73686F72 		.ascii	"short unsigned int\000"
 5421      7420756E 
 5421      7369676E 
 5421      65642069 
 5421      6E7400
 5422              	.LASF58:
 5423 031a 4144435F 		.ascii	"ADC_CommonStructInit\000"
 5423      436F6D6D 
 5423      6F6E5374 
 5423      72756374 
 5423      496E6974 
 5424              	.LASF71:
 5425 032f 4144435F 		.ascii	"ADC_RegularChannelConfig\000"
 5425      52656775 
 5425      6C617243 
 5425      68616E6E 
 5425      656C436F 
 5426              	.LASF65:
 5427 0348 48696768 		.ascii	"HighThreshold\000"
 5427      54687265 
 5427      73686F6C 
 5427      6400
 5428              	.LASF53:
 5429 0356 746D7072 		.ascii	"tmpreg1\000"
 5429      65673100 
 5430              	.LASF54:
 5431 035e 746D7072 		.ascii	"tmpreg2\000"
 5431      65673200 
 5432              	.LASF87:
 5433 0366 746D7072 		.ascii	"tmpreg3\000"
 5433      65673300 
 5434              	.LASF49:
 5435 036e 4144435F 		.ascii	"ADC_DeInit\000"
 5435      4465496E 
 5435      697400
 5436              	.LASF77:
 5437 0379 4144435F 		.ascii	"ADC_ContinuousModeCmd\000"
 5437      436F6E74 
 5437      696E756F 
 5437      75734D6F 
 5437      6465436D 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 131


 5438              	.LASF107:
 5439 038f 4144435F 		.ascii	"ADC_ClearFlag\000"
 5439      436C6561 
 5439      72466C61 
 5439      6700
 5440              	.LASF23:
 5441 039d 4A4F4652 		.ascii	"JOFR2\000"
 5441      3200
 5442              	.LASF24:
 5443 03a3 4A4F4652 		.ascii	"JOFR3\000"
 5443      3300
 5444              	.LASF95:
 5445 03a9 4144435F 		.ascii	"ADC_ExternalTrigInjectedConvEdgeConfig\000"
 5445      45787465 
 5445      726E616C 
 5445      54726967 
 5445      496E6A65 
 5446              	.LASF79:
 5447 03d0 4E756D62 		.ascii	"Number\000"
 5447      657200
 5448              	.LASF114:
 5449 03d7 4144435F 		.ascii	"ADC_GetMultiModeConversionValue\000"
 5449      4765744D 
 5449      756C7469 
 5449      4D6F6465 
 5449      436F6E76 
 5450              	.LASF13:
 5451 03f7 73697A65 		.ascii	"sizetype\000"
 5451      74797065 
 5451      00
 5452              	.LASF83:
 5453 0400 4144435F 		.ascii	"ADC_DMACmd\000"
 5453      444D4143 
 5453      6D6400
 5454              	.LASF35:
 5455 040b 4144435F 		.ascii	"ADC_Common_TypeDef\000"
 5455      436F6D6D 
 5455      6F6E5F54 
 5455      79706544 
 5455      656600
 5456              	.LASF94:
 5457 041e 4144435F 		.ascii	"ADC_ExternalTrigInjecConv\000"
 5457      45787465 
 5457      726E616C 
 5457      54726967 
 5457      496E6A65 
 5458              	.LASF62:
 5459 0438 4144435F 		.ascii	"ADC_AnalogWatchdog\000"
 5459      416E616C 
 5459      6F675761 
 5459      74636864 
 5459      6F6700
 5460              	.LASF20:
 5461 044b 534D5052 		.ascii	"SMPR1\000"
 5461      3100
 5462              	.LASF73:
 5463 0451 4144435F 		.ascii	"ADC_SampleTime\000"
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 132


 5463      53616D70 
 5463      6C655469 
 5463      6D6500
 5464              	.LASF116:
 5465 0460 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 5465      41504232 
 5465      50657269 
 5465      70685265 
 5465      73657443 
 5466              	.LASF90:
 5467 0477 4144435F 		.ascii	"ADC_SetInjectedOffset\000"
 5467      53657449 
 5467      6E6A6563 
 5467      7465644F 
 5467      66667365 
 5468              	.LASF26:
 5469 048d 53515231 		.ascii	"SQR1\000"
 5469      00
 5470              	.LASF27:
 5471 0492 53515232 		.ascii	"SQR2\000"
 5471      00
 5472              	.LASF28:
 5473 0497 53515233 		.ascii	"SQR3\000"
 5473      00
 5474              	.LASF104:
 5475 049c 69746D61 		.ascii	"itmask\000"
 5475      736B00
 5476              	.LASF110:
 5477 04a3 4144435F 		.ascii	"ADC_ClearITPendingBit\000"
 5477      436C6561 
 5477      72495450 
 5477      656E6469 
 5477      6E674269 
 5478              	.LASF72:
 5479 04b9 52616E6B 		.ascii	"Rank\000"
 5479      00
 5480              	.LASF68:
 5481 04be 4144435F 		.ascii	"ADC_Channel\000"
 5481      4368616E 
 5481      6E656C00 
 5482              	.LASF14:
 5483 04ca 52455345 		.ascii	"RESET\000"
 5483      5400
 5484              	.LASF91:
 5485 04d0 4144435F 		.ascii	"ADC_InjectedChannel\000"
 5485      496E6A65 
 5485      63746564 
 5485      4368616E 
 5485      6E656C00 
 5486              	.LASF98:
 5487 04e4 4144435F 		.ascii	"ADC_GetSoftwareStartInjectedConvCmdStatus\000"
 5487      47657453 
 5487      6F667477 
 5487      61726553 
 5487      74617274 
 5488              	.LASF93:
 5489 050e 4144435F 		.ascii	"ADC_ExternalTrigInjectedConvConfig\000"
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 133


 5489      45787465 
 5489      726E616C 
 5489      54726967 
 5489      496E6A65 
 5490              	.LASF57:
 5491 0531 4144435F 		.ascii	"ADC_CommonInitStruct\000"
 5491      436F6D6D 
 5491      6F6E496E 
 5491      69745374 
 5491      72756374 
 5492              	.LASF6:
 5493 0546 696E7433 		.ascii	"int32_t\000"
 5493      325F7400 
 5494              	.LASF1:
 5495 054e 756E7369 		.ascii	"unsigned char\000"
 5495      676E6564 
 5495      20636861 
 5495      7200
 5496              	.LASF2:
 5497 055c 73686F72 		.ascii	"short int\000"
 5497      7420696E 
 5497      7400
 5498              	.LASF44:
 5499 0566 4144435F 		.ascii	"ADC_Mode\000"
 5499      4D6F6465 
 5499      00
 5500              	.LASF88:
 5501 056f 4144435F 		.ascii	"ADC_InjectedSequencerLengthConfig\000"
 5501      496E6A65 
 5501      63746564 
 5501      53657175 
 5501      656E6365 
 5502              	.LASF39:
 5503 0591 4144435F 		.ascii	"ADC_ExternalTrigConvEdge\000"
 5503      45787465 
 5503      726E616C 
 5503      54726967 
 5503      436F6E76 
 5504              	.LASF37:
 5505 05aa 4144435F 		.ascii	"ADC_ScanConvMode\000"
 5505      5363616E 
 5505      436F6E76 
 5505      4D6F6465 
 5505      00
 5506              	.LASF25:
 5507 05bb 4A4F4652 		.ascii	"JOFR4\000"
 5507      3400
 5508              	.LASF43:
 5509 05c1 4144435F 		.ascii	"ADC_InitTypeDef\000"
 5509      496E6974 
 5509      54797065 
 5509      44656600 
 5510              	.LASF108:
 5511 05d1 4144435F 		.ascii	"ADC_GetITStatus\000"
 5511      47657449 
 5511      54537461 
 5511      74757300 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 134


 5512              	.LASF8:
 5513 05e1 75696E74 		.ascii	"uint32_t\000"
 5513      33325F74 
 5513      00
 5514              	.LASF41:
 5515 05ea 4144435F 		.ascii	"ADC_DataAlign\000"
 5515      44617461 
 5515      416C6967 
 5515      6E00
 5516              	.LASF99:
 5517 05f8 4144435F 		.ascii	"ADC_AutoInjectedConvCmd\000"
 5517      4175746F 
 5517      496E6A65 
 5517      63746564 
 5517      436F6E76 
 5518              	.LASF76:
 5519 0610 4144435F 		.ascii	"ADC_EOCOnEachRegularChannelCmd\000"
 5519      454F434F 
 5519      6E456163 
 5519      68526567 
 5519      756C6172 
 5520              	.LASF45:
 5521 062f 4144435F 		.ascii	"ADC_Prescaler\000"
 5521      50726573 
 5521      63616C65 
 5521      7200
 5522              	.LASF56:
 5523 063d 4144435F 		.ascii	"ADC_CommonInit\000"
 5523      436F6D6D 
 5523      6F6E496E 
 5523      697400
 5524              	.LASF109:
 5525 064c 656E6162 		.ascii	"enablestatus\000"
 5525      6C657374 
 5525      61747573 
 5525      00
 5526              	.LASF81:
 5527 0659 4144435F 		.ascii	"ADC_GetSoftwareStartConvStatus\000"
 5527      47657453 
 5527      6F667477 
 5527      61726553 
 5527      74617274 
 5528              	.LASF85:
 5529 0678 4144435F 		.ascii	"ADC_MultiModeDMARequestAfterLastTransferCmd\000"
 5529      4D756C74 
 5529      694D6F64 
 5529      65444D41 
 5529      52657175 
 5530              	.LASF89:
 5531 06a4 4C656E67 		.ascii	"Length\000"
 5531      746800
 5532              	.LASF80:
 5533 06ab 4144435F 		.ascii	"ADC_DiscModeCmd\000"
 5533      44697363 
 5533      4D6F6465 
 5533      436D6400 
 5534              	.LASF113:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 135


 5535 06bb 433A5C78 		.ascii	"C:\\xav_dev\\eclipse\\ambiantiseur-make\000"
 5535      61765F64 
 5535      65765C65 
 5535      636C6970 
 5535      73655C61 
 5536              	.LASF61:
 5537 06e0 4144435F 		.ascii	"ADC_AnalogWatchdogCmd\000"
 5537      416E616C 
 5537      6F675761 
 5537      74636864 
 5537      6F67436D 
 5538              	.LASF92:
 5539 06f6 4F666673 		.ascii	"Offset\000"
 5539      657400
 5540              	.LASF3:
 5541 06fd 75696E74 		.ascii	"uint8_t\000"
 5541      385F7400 
 5542              	.LASF112:
 5543 0705 636D7369 		.ascii	"cmsis/device/stm32f4xx_adc.c\000"
 5543      732F6465 
 5543      76696365 
 5543      2F73746D 
 5543      33326634 
 5544              	.LASF105:
 5545 0722 4144435F 		.ascii	"ADC_GetFlagStatus\000"
 5545      47657446 
 5545      6C616753 
 5545      74617475 
 5545      7300
 5546              	.LASF30:
 5547 0734 4A445231 		.ascii	"JDR1\000"
 5547      00
 5548              	.LASF31:
 5549 0739 4A445232 		.ascii	"JDR2\000"
 5549      00
 5550              	.LASF32:
 5551 073e 4A445233 		.ascii	"JDR3\000"
 5551      00
 5552              	.LASF33:
 5553 0743 4A445234 		.ascii	"JDR4\000"
 5553      00
 5554              	.LASF75:
 5555 0748 62697473 		.ascii	"bitstatus\000"
 5555      74617475 
 5555      7300
 5556              	.LASF36:
 5557 0752 4144435F 		.ascii	"ADC_Resolution\000"
 5557      5265736F 
 5557      6C757469 
 5557      6F6E00
 5558              	.LASF101:
 5559 0761 4144435F 		.ascii	"ADC_GetInjectedConversionValue\000"
 5559      47657449 
 5559      6E6A6563 
 5559      74656443 
 5559      6F6E7665 
 5560              	.LASF74:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 136


 5561 0780 4144435F 		.ascii	"ADC_SoftwareStartConv\000"
 5561      536F6674 
 5561      77617265 
 5561      53746172 
 5561      74436F6E 
 5562              	.LASF47:
 5563 0796 4144435F 		.ascii	"ADC_TwoSamplingDelay\000"
 5563      54776F53 
 5563      616D706C 
 5563      696E6744 
 5563      656C6179 
 5564              	.LASF70:
 5565 07ab 4144435F 		.ascii	"ADC_VBATCmd\000"
 5565      56424154 
 5565      436D6400 
 5566              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20121207 (release) [ARM/embedded-4_7-br
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 137


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_adc.c
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:71     .text.ADC_DeInit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:76     .text.ADC_DeInit:00000000 ADC_DeInit
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:105    .text.ADC_Init:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:110    .text.ADC_Init:00000000 ADC_Init
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:194    .text.ADC_StructInit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:199    .text.ADC_StructInit:00000000 ADC_StructInit
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:230    .text.ADC_CommonInit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:235    .text.ADC_CommonInit:00000000 ADC_CommonInit
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:288    .text.ADC_CommonStructInit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:293    .text.ADC_CommonStructInit:00000000 ADC_CommonStructInit
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:315    .text.ADC_Cmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:320    .text.ADC_Cmd:00000000 ADC_Cmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:347    .text.ADC_AnalogWatchdogCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:352    .text.ADC_AnalogWatchdogCmd:00000000 ADC_AnalogWatchdogCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:377    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:382    .text.ADC_AnalogWatchdogThresholdsConfig:00000000 ADC_AnalogWatchdogThresholdsConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:399    .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:404    .text.ADC_AnalogWatchdogSingleChannelConfig:00000000 ADC_AnalogWatchdogSingleChannelConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:428    .text.ADC_TempSensorVrefintCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:433    .text.ADC_TempSensorVrefintCmd:00000000 ADC_TempSensorVrefintCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:462    .text.ADC_VBATCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:467    .text.ADC_VBATCmd:00000000 ADC_VBATCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:496    .text.ADC_RegularChannelConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:501    .text.ADC_RegularChannelConfig:00000000 ADC_RegularChannelConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:655    .text.ADC_SoftwareStartConv:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:660    .text.ADC_SoftwareStartConv:00000000 ADC_SoftwareStartConv
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:677    .text.ADC_GetSoftwareStartConvStatus:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:682    .text.ADC_GetSoftwareStartConvStatus:00000000 ADC_GetSoftwareStartConvStatus
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:701    .text.ADC_EOCOnEachRegularChannelCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:706    .text.ADC_EOCOnEachRegularChannelCmd:00000000 ADC_EOCOnEachRegularChannelCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:733    .text.ADC_ContinuousModeCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:738    .text.ADC_ContinuousModeCmd:00000000 ADC_ContinuousModeCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:765    .text.ADC_DiscModeChannelCountConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:770    .text.ADC_DiscModeChannelCountConfig:00000000 ADC_DiscModeChannelCountConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:797    .text.ADC_DiscModeCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:802    .text.ADC_DiscModeCmd:00000000 ADC_DiscModeCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:829    .text.ADC_GetConversionValue:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:834    .text.ADC_GetConversionValue:00000000 ADC_GetConversionValue
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:852    .text.ADC_GetMultiModeConversionValue:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:857    .text.ADC_GetMultiModeConversionValue:00000000 ADC_GetMultiModeConversionValue
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:874    .text.ADC_DMACmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:879    .text.ADC_DMACmd:00000000 ADC_DMACmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:906    .text.ADC_DMARequestAfterLastTransferCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:911    .text.ADC_DMARequestAfterLastTransferCmd:00000000 ADC_DMARequestAfterLastTransferCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:938    .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:943    .text.ADC_MultiModeDMARequestAfterLastTransferCmd:00000000 ADC_MultiModeDMARequestAfterLastTransferCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:972    .text.ADC_InjectedChannelConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:977    .text.ADC_InjectedChannelConfig:00000000 ADC_InjectedChannelConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1074   .text.ADC_InjectedSequencerLengthConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1079   .text.ADC_InjectedSequencerLengthConfig:00000000 ADC_InjectedSequencerLengthConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1106   .text.ADC_SetInjectedOffset:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1111   .text.ADC_SetInjectedOffset:00000000 ADC_SetInjectedOffset
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1145   .text.ADC_ExternalTrigInjectedConvConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1150   .text.ADC_ExternalTrigInjectedConvConfig:00000000 ADC_ExternalTrigInjectedConvConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1174   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 $t
ARM GAS  C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s 			page 138


C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1179   .text.ADC_ExternalTrigInjectedConvEdgeConfig:00000000 ADC_ExternalTrigInjectedConvEdgeConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1203   .text.ADC_SoftwareStartInjectedConv:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1208   .text.ADC_SoftwareStartInjectedConv:00000000 ADC_SoftwareStartInjectedConv
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1225   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1230   .text.ADC_GetSoftwareStartInjectedConvCmdStatus:00000000 ADC_GetSoftwareStartInjectedConvCmdStatus
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1249   .text.ADC_AutoInjectedConvCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1254   .text.ADC_AutoInjectedConvCmd:00000000 ADC_AutoInjectedConvCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1281   .text.ADC_InjectedDiscModeCmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1286   .text.ADC_InjectedDiscModeCmd:00000000 ADC_InjectedDiscModeCmd
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1313   .text.ADC_GetInjectedConversionValue:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1318   .text.ADC_GetInjectedConversionValue:00000000 ADC_GetInjectedConversionValue
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1354   .text.ADC_ITConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1359   .text.ADC_ITConfig:00000000 ADC_ITConfig
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1393   .text.ADC_GetFlagStatus:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1398   .text.ADC_GetFlagStatus:00000000 ADC_GetFlagStatus
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1420   .text.ADC_ClearFlag:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1425   .text.ADC_ClearFlag:00000000 ADC_ClearFlag
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1442   .text.ADC_GetITStatus:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1447   .text.ADC_GetITStatus:00000000 ADC_GetITStatus
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1482   .text.ADC_ClearITPendingBit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\ccumeAVv.s:1487   .text.ADC_ClearITPendingBit:00000000 ADC_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
