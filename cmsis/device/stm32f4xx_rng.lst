ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 2	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_rng.c"
  16              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.7.3 20121207 (release) [ARM/embedded-4_7-
  17              	@	compiled by GNU C version 4.2.1-sjlj (mingw32-2), GMP version 4.3.2, MPFR version 2.4.2, MPC vers
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I ./inc -I ./cmsis/core -I ./cmsis/device
  20              	@ -imultilib armv7e-m/fpu
  21              	@ -iprefix c:\gnutoolsarmembedded\4.7-2012q4\bin\../lib/gcc/arm-none-eabi/4.7.3/
  22              	@ -isysroot c:\gnutoolsarmembedded\4.7-2012q4\bin\../arm-none-eabi
  23              	@ -MD cmsis/device/stm32f4xx_rng.d -MF .dep/stm32f4xx_rng.o.d -MP
  24              	@ -MQ cmsis/device/stm32f4xx_rng.o -D__USES_INITFINI__ -D __FPU_USED=1
  25              	@ -D __arm__ -D __ASSEMBLY__ -D USE_STDPERIPH_DRIVER -D STM32F4XX
  26              	@ -D HSE_VALUE=8000000 -D __FPU_PRESENT=1 -D STM32F407VG
  27              	@ -D RUN_FROM_FLASH=1 cmsis/device/stm32f4xx_rng.c -mthumb -mcpu=cortex-m4
  28              	@ -mfloat-abi=hard -mfpu=fpv4-sp-d16
  29              	@ -auxbase-strip cmsis/device/stm32f4xx_rng.o -gdwarf-2 -O2 -Wall
  30              	@ -Wstrict-prototypes -fverbose-asm -ffunction-sections -fdata-sections
  31              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  32              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  33              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdebug-types-section
  34              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  35              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  36              	@ -fforward-propagate -ffunction-cse -ffunction-sections -fgcse -fgcse-lm
  37              	@ -fgnu-runtime -fguess-branch-probability -fident -fif-conversion
  38              	@ -fif-conversion2 -findirect-inlining -finline -finline-atomics
  39              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  40              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  41              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  42              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  43              	@ -fmerge-debug-strings -fmove-loop-invariants -fomit-frame-pointer
  44              	@ -foptimize-register-move -foptimize-sibling-calls -foptimize-strlen
  45              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  46              	@ -freg-struct-return -fregmove -frename-registers -freorder-blocks
  47              	@ -freorder-functions -frerun-cse-after-loop
  48              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  49              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  50              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  51              	@ -fsched-stalled-insns-dep -fschedule-insns -fschedule-insns2
  52              	@ -fsection-anchors -fshow-column -fshrink-wrap -fsigned-zeros
  53              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstrict-aliasing
  54              	@ -fstrict-overflow -fstrict-volatile-bitfields -fthread-jumps
  55              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  56              	@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
  57              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 2


  58              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  59              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  60              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  61              	@ -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  62              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  63              	@ -funit-at-a-time -funroll-loops -fvar-tracking -fvar-tracking-assignments
  64              	@ -fverbose-asm -fweb -fzero-initialized-in-bss -mlittle-endian
  65              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  66              	
  67              		.text
  68              	.Ltext0:
  69              		.cfi_sections	.debug_frame
  70              		.section	.text.RNG_DeInit,"ax",%progbits
  71              		.align	2
  72              		.global	RNG_DeInit
  73              		.thumb
  74              		.thumb_func
  75              		.type	RNG_DeInit, %function
  76              	RNG_DeInit:
  77              	.LFB110:
  78              		.file 1 "cmsis/device/stm32f4xx_rng.c"
   1:cmsis/device/stm32f4xx_rng.c **** /**
   2:cmsis/device/stm32f4xx_rng.c ****   ******************************************************************************
   3:cmsis/device/stm32f4xx_rng.c ****   * @file    stm32f4xx_rng.c
   4:cmsis/device/stm32f4xx_rng.c ****   * @author  MCD Application Team
   5:cmsis/device/stm32f4xx_rng.c ****   * @version V1.0.0
   6:cmsis/device/stm32f4xx_rng.c ****   * @date    30-September-2011
   7:cmsis/device/stm32f4xx_rng.c ****     * @brief This file provides firmware functions to manage the following 
   8:cmsis/device/stm32f4xx_rng.c ****   *          functionalities of the Random Number Generator (RNG) peripheral:           
   9:cmsis/device/stm32f4xx_rng.c ****   *           - Initialization and Configuration 
  10:cmsis/device/stm32f4xx_rng.c ****   *           - Get 32 bit Random number      
  11:cmsis/device/stm32f4xx_rng.c ****   *           - Interrupts and flags management       
  12:cmsis/device/stm32f4xx_rng.c ****   *         
  13:cmsis/device/stm32f4xx_rng.c ****   *  @verbatim
  14:cmsis/device/stm32f4xx_rng.c ****   *                               
  15:cmsis/device/stm32f4xx_rng.c ****   *          ===================================================================      
  16:cmsis/device/stm32f4xx_rng.c ****   *                                   How to use this driver
  17:cmsis/device/stm32f4xx_rng.c ****   *          ===================================================================          
  18:cmsis/device/stm32f4xx_rng.c ****   *          1. Enable The RNG controller clock using 
  19:cmsis/device/stm32f4xx_rng.c ****   *            RCC_AHB2PeriphClockCmd(RCC_AHB2Periph_RNG, ENABLE) function.
  20:cmsis/device/stm32f4xx_rng.c ****   *              
  21:cmsis/device/stm32f4xx_rng.c ****   *          2. Activate the RNG peripheral using RNG_Cmd() function.
  22:cmsis/device/stm32f4xx_rng.c ****   *          
  23:cmsis/device/stm32f4xx_rng.c ****   *          3. Wait until the 32 bit Random number Generator contains a valid 
  24:cmsis/device/stm32f4xx_rng.c ****   *            random data (using polling/interrupt mode). For more details, 
  25:cmsis/device/stm32f4xx_rng.c ****   *            refer to "Interrupts and flags management functions" module 
  26:cmsis/device/stm32f4xx_rng.c ****   *            description.
  27:cmsis/device/stm32f4xx_rng.c ****   *           
  28:cmsis/device/stm32f4xx_rng.c ****   *          4. Get the 32 bit Random number using RNG_GetRandomNumber() function
  29:cmsis/device/stm32f4xx_rng.c ****   *          
  30:cmsis/device/stm32f4xx_rng.c ****   *          5. To get another 32 bit Random number, go to step 3.       
  31:cmsis/device/stm32f4xx_rng.c ****   *
  32:cmsis/device/stm32f4xx_rng.c ****   *         
  33:cmsis/device/stm32f4xx_rng.c ****   *              
  34:cmsis/device/stm32f4xx_rng.c ****   *  @endverbatim
  35:cmsis/device/stm32f4xx_rng.c ****   *         
  36:cmsis/device/stm32f4xx_rng.c ****   ******************************************************************************
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 3


  37:cmsis/device/stm32f4xx_rng.c ****   * @attention
  38:cmsis/device/stm32f4xx_rng.c ****   *
  39:cmsis/device/stm32f4xx_rng.c ****   * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
  40:cmsis/device/stm32f4xx_rng.c ****   * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
  41:cmsis/device/stm32f4xx_rng.c ****   * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
  42:cmsis/device/stm32f4xx_rng.c ****   * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
  43:cmsis/device/stm32f4xx_rng.c ****   * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
  44:cmsis/device/stm32f4xx_rng.c ****   * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  45:cmsis/device/stm32f4xx_rng.c ****   *
  46:cmsis/device/stm32f4xx_rng.c ****   * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
  47:cmsis/device/stm32f4xx_rng.c ****   ******************************************************************************  
  48:cmsis/device/stm32f4xx_rng.c ****   */
  49:cmsis/device/stm32f4xx_rng.c **** 
  50:cmsis/device/stm32f4xx_rng.c **** /* Includes ------------------------------------------------------------------*/
  51:cmsis/device/stm32f4xx_rng.c **** #include "stm32f4xx_rng.h"
  52:cmsis/device/stm32f4xx_rng.c **** #include "stm32f4xx_rcc.h"
  53:cmsis/device/stm32f4xx_rng.c **** 
  54:cmsis/device/stm32f4xx_rng.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  55:cmsis/device/stm32f4xx_rng.c ****   * @{
  56:cmsis/device/stm32f4xx_rng.c ****   */
  57:cmsis/device/stm32f4xx_rng.c **** 
  58:cmsis/device/stm32f4xx_rng.c **** /** @defgroup RNG 
  59:cmsis/device/stm32f4xx_rng.c ****   * @brief RNG driver modules
  60:cmsis/device/stm32f4xx_rng.c ****   * @{
  61:cmsis/device/stm32f4xx_rng.c ****   */ 
  62:cmsis/device/stm32f4xx_rng.c **** 
  63:cmsis/device/stm32f4xx_rng.c **** /* Private typedef -----------------------------------------------------------*/
  64:cmsis/device/stm32f4xx_rng.c **** /* Private define ------------------------------------------------------------*/
  65:cmsis/device/stm32f4xx_rng.c **** /* Private macro -------------------------------------------------------------*/
  66:cmsis/device/stm32f4xx_rng.c **** /* Private variables ---------------------------------------------------------*/
  67:cmsis/device/stm32f4xx_rng.c **** /* Private function prototypes -----------------------------------------------*/
  68:cmsis/device/stm32f4xx_rng.c **** /* Private functions ---------------------------------------------------------*/
  69:cmsis/device/stm32f4xx_rng.c **** 
  70:cmsis/device/stm32f4xx_rng.c **** /** @defgroup RNG_Private_Functions
  71:cmsis/device/stm32f4xx_rng.c ****   * @{
  72:cmsis/device/stm32f4xx_rng.c ****   */ 
  73:cmsis/device/stm32f4xx_rng.c **** 
  74:cmsis/device/stm32f4xx_rng.c **** /** @defgroup RNG_Group1 Initialization and Configuration functions
  75:cmsis/device/stm32f4xx_rng.c ****  *  @brief    Initialization and Configuration functions 
  76:cmsis/device/stm32f4xx_rng.c ****  *
  77:cmsis/device/stm32f4xx_rng.c **** @verbatim    
  78:cmsis/device/stm32f4xx_rng.c ****  ===============================================================================
  79:cmsis/device/stm32f4xx_rng.c ****                       Initialization and Configuration functions
  80:cmsis/device/stm32f4xx_rng.c ****  ===============================================================================  
  81:cmsis/device/stm32f4xx_rng.c ****   This section provides functions allowing to 
  82:cmsis/device/stm32f4xx_rng.c ****    - Initialize the RNG peripheral
  83:cmsis/device/stm32f4xx_rng.c ****    - Enable or disable the RNG peripheral
  84:cmsis/device/stm32f4xx_rng.c ****    
  85:cmsis/device/stm32f4xx_rng.c **** @endverbatim
  86:cmsis/device/stm32f4xx_rng.c ****   * @{
  87:cmsis/device/stm32f4xx_rng.c ****   */
  88:cmsis/device/stm32f4xx_rng.c **** 
  89:cmsis/device/stm32f4xx_rng.c **** /**
  90:cmsis/device/stm32f4xx_rng.c ****   * @brief  Deinitializes the RNG peripheral registers to their default reset values.
  91:cmsis/device/stm32f4xx_rng.c ****   * @param  None
  92:cmsis/device/stm32f4xx_rng.c ****   * @retval None
  93:cmsis/device/stm32f4xx_rng.c ****   */
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 4


  94:cmsis/device/stm32f4xx_rng.c **** void RNG_DeInit(void)
  95:cmsis/device/stm32f4xx_rng.c **** {
  79              		.loc 1 95 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 08B5     		push	{r3, lr}	@
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 3, -8
  87              		.cfi_offset 14, -4
  96:cmsis/device/stm32f4xx_rng.c ****   /* Enable RNG reset state */
  97:cmsis/device/stm32f4xx_rng.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_RNG, ENABLE);
  88              		.loc 1 97 0
  89 0002 4020     		movs	r0, #64	@,
  90 0004 0121     		movs	r1, #1	@,
  91 0006 FFF7FEFF 		bl	RCC_AHB2PeriphResetCmd	@
  92              	.LVL0:
  98:cmsis/device/stm32f4xx_rng.c **** 
  99:cmsis/device/stm32f4xx_rng.c ****   /* Release RNG from reset state */
 100:cmsis/device/stm32f4xx_rng.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_RNG, DISABLE);
  93              		.loc 1 100 0
  94 000a 4020     		movs	r0, #64	@,
  95 000c 0021     		movs	r1, #0	@,
 101:cmsis/device/stm32f4xx_rng.c **** }
  96              		.loc 1 101 0
  97 000e BDE80840 		pop	{r3, lr}	@
 100:cmsis/device/stm32f4xx_rng.c ****   RCC_AHB2PeriphResetCmd(RCC_AHB2Periph_RNG, DISABLE);
  98              		.loc 1 100 0
  99 0012 FFF7FEBF 		b	RCC_AHB2PeriphResetCmd	@
 100              	.LVL1:
 101              		.cfi_endproc
 102              	.LFE110:
 103              		.size	RNG_DeInit, .-RNG_DeInit
 104 0016 00BF     		.section	.text.RNG_Cmd,"ax",%progbits
 105              		.align	2
 106              		.global	RNG_Cmd
 107              		.thumb
 108              		.thumb_func
 109              		.type	RNG_Cmd, %function
 110              	RNG_Cmd:
 111              	.LFB111:
 102:cmsis/device/stm32f4xx_rng.c **** 
 103:cmsis/device/stm32f4xx_rng.c **** /**
 104:cmsis/device/stm32f4xx_rng.c ****   * @brief  Enables or disables the RNG peripheral.
 105:cmsis/device/stm32f4xx_rng.c ****   * @param  NewState: new state of the RNG peripheral.
 106:cmsis/device/stm32f4xx_rng.c ****   *          This parameter can be: ENABLE or DISABLE.
 107:cmsis/device/stm32f4xx_rng.c ****   * @retval None
 108:cmsis/device/stm32f4xx_rng.c ****   */
 109:cmsis/device/stm32f4xx_rng.c **** void RNG_Cmd(FunctionalState NewState)
 110:cmsis/device/stm32f4xx_rng.c **** {
 112              		.loc 1 110 0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
 117              	.LVL2:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 5


 111:cmsis/device/stm32f4xx_rng.c ****   /* Check the parameters */
 112:cmsis/device/stm32f4xx_rng.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 113:cmsis/device/stm32f4xx_rng.c **** 
 114:cmsis/device/stm32f4xx_rng.c ****   if (NewState != DISABLE)
 115:cmsis/device/stm32f4xx_rng.c ****   {
 116:cmsis/device/stm32f4xx_rng.c ****     /* Enable the RNG */
 117:cmsis/device/stm32f4xx_rng.c ****     RNG->CR |= RNG_CR_RNGEN;
 118              		.loc 1 117 0
 119 0000 4FF40063 		mov	r3, #2048	@ tmp139,
 120 0004 C5F20603 		movt	r3, 20486	@ tmp139,
 121 0008 1A68     		ldr	r2, [r3, #0]	@ D.6572,
 114:cmsis/device/stm32f4xx_rng.c ****   if (NewState != DISABLE)
 122              		.loc 1 114 0
 123 000a 18B9     		cbnz	r0, .L6	@ NewState,
 118:cmsis/device/stm32f4xx_rng.c ****   }
 119:cmsis/device/stm32f4xx_rng.c ****   else
 120:cmsis/device/stm32f4xx_rng.c ****   {
 121:cmsis/device/stm32f4xx_rng.c ****     /* Disable the RNG */
 122:cmsis/device/stm32f4xx_rng.c ****     RNG->CR &= ~RNG_CR_RNGEN;
 124              		.loc 1 122 0
 125 000c 22F00400 		bic	r0, r2, #4	@ D.6576, D.6575,
 126              	.LVL3:
 127 0010 1860     		str	r0, [r3, #0]	@ D.6576,
 128 0012 7047     		bx	lr	@
 129              	.LVL4:
 130              	.L6:
 117:cmsis/device/stm32f4xx_rng.c ****     RNG->CR |= RNG_CR_RNGEN;
 131              		.loc 1 117 0
 132 0014 42F00401 		orr	r1, r2, #4	@ D.6573, D.6572,
 133 0018 1960     		str	r1, [r3, #0]	@ D.6573,
 134 001a 7047     		bx	lr	@
 135              		.cfi_endproc
 136              	.LFE111:
 137              		.size	RNG_Cmd, .-RNG_Cmd
 138              		.section	.text.RNG_GetRandomNumber,"ax",%progbits
 139              		.align	2
 140              		.global	RNG_GetRandomNumber
 141              		.thumb
 142              		.thumb_func
 143              		.type	RNG_GetRandomNumber, %function
 144              	RNG_GetRandomNumber:
 145              	.LFB112:
 123:cmsis/device/stm32f4xx_rng.c ****   }
 124:cmsis/device/stm32f4xx_rng.c **** }
 125:cmsis/device/stm32f4xx_rng.c **** /**
 126:cmsis/device/stm32f4xx_rng.c ****   * @}
 127:cmsis/device/stm32f4xx_rng.c ****   */
 128:cmsis/device/stm32f4xx_rng.c **** 
 129:cmsis/device/stm32f4xx_rng.c **** /** @defgroup RNG_Group2 Get 32 bit Random number function
 130:cmsis/device/stm32f4xx_rng.c ****  *  @brief    Get 32 bit Random number function 
 131:cmsis/device/stm32f4xx_rng.c ****  *
 132:cmsis/device/stm32f4xx_rng.c **** 
 133:cmsis/device/stm32f4xx_rng.c **** @verbatim    
 134:cmsis/device/stm32f4xx_rng.c ****  ===============================================================================
 135:cmsis/device/stm32f4xx_rng.c ****                       Get 32 bit Random number function
 136:cmsis/device/stm32f4xx_rng.c ****  ===============================================================================  
 137:cmsis/device/stm32f4xx_rng.c ****   This section provides a function allowing to get the 32 bit Random number  
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 6


 138:cmsis/device/stm32f4xx_rng.c ****   
 139:cmsis/device/stm32f4xx_rng.c ****   @note  Before to call this function you have to wait till DRDY flag is set,
 140:cmsis/device/stm32f4xx_rng.c ****          using RNG_GetFlagStatus(RNG_FLAG_DRDY) function. 
 141:cmsis/device/stm32f4xx_rng.c ****    
 142:cmsis/device/stm32f4xx_rng.c **** @endverbatim
 143:cmsis/device/stm32f4xx_rng.c ****   * @{
 144:cmsis/device/stm32f4xx_rng.c ****   */
 145:cmsis/device/stm32f4xx_rng.c **** 
 146:cmsis/device/stm32f4xx_rng.c **** 
 147:cmsis/device/stm32f4xx_rng.c **** /**
 148:cmsis/device/stm32f4xx_rng.c ****   * @brief  Returns a 32-bit random number.
 149:cmsis/device/stm32f4xx_rng.c ****   *   
 150:cmsis/device/stm32f4xx_rng.c ****   * @note   Before to call this function you have to wait till DRDY (data ready)
 151:cmsis/device/stm32f4xx_rng.c ****   *         flag is set, using RNG_GetFlagStatus(RNG_FLAG_DRDY) function.
 152:cmsis/device/stm32f4xx_rng.c ****   * @note   Each time the the Random number data is read (using RNG_GetRandomNumber()
 153:cmsis/device/stm32f4xx_rng.c ****   *         function), the RNG_FLAG_DRDY flag is automatically cleared.
 154:cmsis/device/stm32f4xx_rng.c ****   * @note   In the case of a seed error, the generation of random numbers is 
 155:cmsis/device/stm32f4xx_rng.c ****   *         interrupted for as long as the SECS bit is '1'. If a number is 
 156:cmsis/device/stm32f4xx_rng.c ****   *         available in the RNG_DR register, it must not be used because it may 
 157:cmsis/device/stm32f4xx_rng.c ****   *         not have enough entropy. In this case, it is recommended to clear the 
 158:cmsis/device/stm32f4xx_rng.c ****   *         SEIS bit(using RNG_ClearFlag(RNG_FLAG_SECS) function), then disable 
 159:cmsis/device/stm32f4xx_rng.c ****   *         and enable the RNG peripheral (using RNG_Cmd() function) to 
 160:cmsis/device/stm32f4xx_rng.c ****   *         reinitialize and restart the RNG.
 161:cmsis/device/stm32f4xx_rng.c ****   * @note   In the case of a clock error, the RNG is no more able to generate 
 162:cmsis/device/stm32f4xx_rng.c ****   *         random numbers because the PLL48CLK clock is not correct. User have 
 163:cmsis/device/stm32f4xx_rng.c ****   *         to check that the clock controller is correctly configured to provide
 164:cmsis/device/stm32f4xx_rng.c ****   *         the RNG clock and clear the CEIS bit (using RNG_ClearFlag(RNG_FLAG_CECS) 
 165:cmsis/device/stm32f4xx_rng.c ****   *         function) . The clock error has no impact on the previously generated 
 166:cmsis/device/stm32f4xx_rng.c ****   *         random numbers, and the RNG_DR register contents can be used.
 167:cmsis/device/stm32f4xx_rng.c ****   *         
 168:cmsis/device/stm32f4xx_rng.c ****   * @param  None
 169:cmsis/device/stm32f4xx_rng.c ****   * @retval 32-bit random number.
 170:cmsis/device/stm32f4xx_rng.c ****   */
 171:cmsis/device/stm32f4xx_rng.c **** uint32_t RNG_GetRandomNumber(void)
 172:cmsis/device/stm32f4xx_rng.c **** {
 146              		.loc 1 172 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
 173:cmsis/device/stm32f4xx_rng.c ****   /* Return the 32 bit random number from the DR register */
 174:cmsis/device/stm32f4xx_rng.c ****   return RNG->DR;
 151              		.loc 1 174 0
 152 0000 4FF40063 		mov	r3, #2048	@ tmp136,
 153 0004 C5F20603 		movt	r3, 20486	@ tmp136,
 154 0008 9868     		ldr	r0, [r3, #8]	@ D.6566, MEM[(struct RNG_TypeDef *)1342572544B].DR
 175:cmsis/device/stm32f4xx_rng.c **** }
 155              		.loc 1 175 0
 156 000a 7047     		bx	lr	@
 157              		.cfi_endproc
 158              	.LFE112:
 159              		.size	RNG_GetRandomNumber, .-RNG_GetRandomNumber
 160              		.section	.text.RNG_ITConfig,"ax",%progbits
 161              		.align	2
 162              		.global	RNG_ITConfig
 163              		.thumb
 164              		.thumb_func
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 7


 165              		.type	RNG_ITConfig, %function
 166              	RNG_ITConfig:
 167              	.LFB113:
 176:cmsis/device/stm32f4xx_rng.c **** 
 177:cmsis/device/stm32f4xx_rng.c **** 
 178:cmsis/device/stm32f4xx_rng.c **** /**
 179:cmsis/device/stm32f4xx_rng.c ****   * @}
 180:cmsis/device/stm32f4xx_rng.c ****   */
 181:cmsis/device/stm32f4xx_rng.c **** 
 182:cmsis/device/stm32f4xx_rng.c **** /** @defgroup RNG_Group3 Interrupts and flags management functions
 183:cmsis/device/stm32f4xx_rng.c ****  *  @brief   Interrupts and flags management functions
 184:cmsis/device/stm32f4xx_rng.c ****  *
 185:cmsis/device/stm32f4xx_rng.c **** @verbatim   
 186:cmsis/device/stm32f4xx_rng.c ****  ===============================================================================
 187:cmsis/device/stm32f4xx_rng.c ****                    Interrupts and flags management functions
 188:cmsis/device/stm32f4xx_rng.c ****  ===============================================================================  
 189:cmsis/device/stm32f4xx_rng.c **** 
 190:cmsis/device/stm32f4xx_rng.c ****   This section provides functions allowing to configure the RNG Interrupts and 
 191:cmsis/device/stm32f4xx_rng.c ****   to get the status and clear flags and Interrupts pending bits.
 192:cmsis/device/stm32f4xx_rng.c ****   
 193:cmsis/device/stm32f4xx_rng.c ****   The RNG provides 3 Interrupts sources and 3 Flags:
 194:cmsis/device/stm32f4xx_rng.c ****   
 195:cmsis/device/stm32f4xx_rng.c ****   Flags :
 196:cmsis/device/stm32f4xx_rng.c ****   ---------- 
 197:cmsis/device/stm32f4xx_rng.c ****      1. RNG_FLAG_DRDY :  In the case of the RNG_DR register contains valid 
 198:cmsis/device/stm32f4xx_rng.c ****                          random data. it is cleared by reading the valid data 
 199:cmsis/device/stm32f4xx_rng.c ****                          (using RNG_GetRandomNumber() function).
 200:cmsis/device/stm32f4xx_rng.c **** 
 201:cmsis/device/stm32f4xx_rng.c ****      2. RNG_FLAG_CECS : In the case of a seed error detection. 
 202:cmsis/device/stm32f4xx_rng.c ****       
 203:cmsis/device/stm32f4xx_rng.c ****      3. RNG_FLAG_SECS : In the case of a clock error detection.
 204:cmsis/device/stm32f4xx_rng.c ****               
 205:cmsis/device/stm32f4xx_rng.c **** 
 206:cmsis/device/stm32f4xx_rng.c ****   Interrupts :
 207:cmsis/device/stm32f4xx_rng.c ****   ------------
 208:cmsis/device/stm32f4xx_rng.c ****    if enabled, an RNG interrupt is pending :
 209:cmsis/device/stm32f4xx_rng.c ****     
 210:cmsis/device/stm32f4xx_rng.c ****    1.  In the case of the RNG_DR register contains valid random data. 
 211:cmsis/device/stm32f4xx_rng.c ****        This interrupt source is cleared once the RNG_DR register has been read 
 212:cmsis/device/stm32f4xx_rng.c ****        (using RNG_GetRandomNumber() function) until a new valid value is 
 213:cmsis/device/stm32f4xx_rng.c ****        computed. 
 214:cmsis/device/stm32f4xx_rng.c ****    
 215:cmsis/device/stm32f4xx_rng.c ****    or 
 216:cmsis/device/stm32f4xx_rng.c ****    2. In the case of a seed error : One of the following faulty sequences has 
 217:cmsis/device/stm32f4xx_rng.c ****       been detected:
 218:cmsis/device/stm32f4xx_rng.c ****       - More than 64 consecutive bits at the same value (0 or 1)
 219:cmsis/device/stm32f4xx_rng.c ****       - More than 32 consecutive alternance of 0 and 1 (0101010101...01)
 220:cmsis/device/stm32f4xx_rng.c ****       This interrupt source is cleared using RNG_ClearITPendingBit(RNG_IT_SEI)
 221:cmsis/device/stm32f4xx_rng.c ****       function.
 222:cmsis/device/stm32f4xx_rng.c ****    
 223:cmsis/device/stm32f4xx_rng.c ****    or
 224:cmsis/device/stm32f4xx_rng.c ****    3. In the case of a clock error : the PLL48CLK (RNG peripheral clock source) 
 225:cmsis/device/stm32f4xx_rng.c ****       was not correctly detected (fPLL48CLK< fHCLK/16).
 226:cmsis/device/stm32f4xx_rng.c ****       This interrupt source is cleared using RNG_ClearITPendingBit(RNG_IT_CEI)
 227:cmsis/device/stm32f4xx_rng.c ****       function.
 228:cmsis/device/stm32f4xx_rng.c ****       @note In this case, User have to check that the clock controller is 
 229:cmsis/device/stm32f4xx_rng.c ****             correctly configured to provide the RNG clock. 
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 8


 230:cmsis/device/stm32f4xx_rng.c **** 
 231:cmsis/device/stm32f4xx_rng.c ****   Managing the RNG controller events :
 232:cmsis/device/stm32f4xx_rng.c ****   ------------------------------------ 
 233:cmsis/device/stm32f4xx_rng.c ****   The user should identify which mode will be used in his application to manage 
 234:cmsis/device/stm32f4xx_rng.c ****   the RNG controller events: Polling mode or Interrupt mode.
 235:cmsis/device/stm32f4xx_rng.c ****   
 236:cmsis/device/stm32f4xx_rng.c ****   1.  In the Polling Mode it is advised to use the following functions:
 237:cmsis/device/stm32f4xx_rng.c ****       - RNG_GetFlagStatus() : to check if flags events occur. 
 238:cmsis/device/stm32f4xx_rng.c ****       - RNG_ClearFlag()     : to clear the flags events.
 239:cmsis/device/stm32f4xx_rng.c ****   
 240:cmsis/device/stm32f4xx_rng.c ****   @note RNG_FLAG_DRDY can not be cleared by RNG_ClearFlag(). it is cleared only 
 241:cmsis/device/stm32f4xx_rng.c ****         by reading the Random number data.      
 242:cmsis/device/stm32f4xx_rng.c ****   
 243:cmsis/device/stm32f4xx_rng.c ****   2.  In the Interrupt Mode it is advised to use the following functions:
 244:cmsis/device/stm32f4xx_rng.c ****       - RNG_ITConfig()       : to enable or disable the interrupt source.
 245:cmsis/device/stm32f4xx_rng.c ****       - RNG_GetITStatus()    : to check if Interrupt occurs.
 246:cmsis/device/stm32f4xx_rng.c ****       - RNG_ClearITPendingBit() : to clear the Interrupt pending Bit 
 247:cmsis/device/stm32f4xx_rng.c ****                                 (corresponding Flag). 
 248:cmsis/device/stm32f4xx_rng.c ****   
 249:cmsis/device/stm32f4xx_rng.c **** 
 250:cmsis/device/stm32f4xx_rng.c **** @endverbatim
 251:cmsis/device/stm32f4xx_rng.c ****   * @{
 252:cmsis/device/stm32f4xx_rng.c ****   */ 
 253:cmsis/device/stm32f4xx_rng.c **** 
 254:cmsis/device/stm32f4xx_rng.c **** /**
 255:cmsis/device/stm32f4xx_rng.c ****   * @brief  Enables or disables the RNG interrupt.
 256:cmsis/device/stm32f4xx_rng.c ****   * @note   The RNG provides 3 interrupt sources,
 257:cmsis/device/stm32f4xx_rng.c ****   *           - Computed data is ready event (DRDY), and           
 258:cmsis/device/stm32f4xx_rng.c ****   *           - Seed error Interrupt (SEI) and 
 259:cmsis/device/stm32f4xx_rng.c ****   *           - Clock error Interrupt (CEI), 
 260:cmsis/device/stm32f4xx_rng.c ****   *         all these interrupts sources are enabled by setting the IE bit in 
 261:cmsis/device/stm32f4xx_rng.c ****   *         CR register. However, each interrupt have its specific status bit
 262:cmsis/device/stm32f4xx_rng.c ****   *         (see RNG_GetITStatus() function) and clear bit except the DRDY event
 263:cmsis/device/stm32f4xx_rng.c ****   *         (see RNG_ClearITPendingBit() function).
 264:cmsis/device/stm32f4xx_rng.c ****   * @param  NewState: new state of the RNG interrupt.
 265:cmsis/device/stm32f4xx_rng.c ****   *          This parameter can be: ENABLE or DISABLE.
 266:cmsis/device/stm32f4xx_rng.c ****   * @retval None
 267:cmsis/device/stm32f4xx_rng.c ****   */
 268:cmsis/device/stm32f4xx_rng.c **** void RNG_ITConfig(FunctionalState NewState)
 269:cmsis/device/stm32f4xx_rng.c **** {
 168              		.loc 1 269 0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		@ link register save eliminated.
 173              	.LVL5:
 270:cmsis/device/stm32f4xx_rng.c ****   /* Check the parameters */
 271:cmsis/device/stm32f4xx_rng.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 272:cmsis/device/stm32f4xx_rng.c **** 
 273:cmsis/device/stm32f4xx_rng.c ****   if (NewState != DISABLE)
 274:cmsis/device/stm32f4xx_rng.c ****   {
 275:cmsis/device/stm32f4xx_rng.c ****     /* Enable the RNG interrupt */
 276:cmsis/device/stm32f4xx_rng.c ****     RNG->CR |= RNG_CR_IE;
 174              		.loc 1 276 0
 175 0000 4FF40063 		mov	r3, #2048	@ tmp139,
 176 0004 C5F20603 		movt	r3, 20486	@ tmp139,
 177 0008 1A68     		ldr	r2, [r3, #0]	@ D.6561,
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 9


 273:cmsis/device/stm32f4xx_rng.c ****   if (NewState != DISABLE)
 178              		.loc 1 273 0
 179 000a 18B9     		cbnz	r0, .L11	@ NewState,
 277:cmsis/device/stm32f4xx_rng.c ****   }
 278:cmsis/device/stm32f4xx_rng.c ****   else
 279:cmsis/device/stm32f4xx_rng.c ****   {
 280:cmsis/device/stm32f4xx_rng.c ****     /* Disable the RNG interrupt */
 281:cmsis/device/stm32f4xx_rng.c ****     RNG->CR &= ~RNG_CR_IE;
 180              		.loc 1 281 0
 181 000c 22F00800 		bic	r0, r2, #8	@ D.6565, D.6564,
 182              	.LVL6:
 183 0010 1860     		str	r0, [r3, #0]	@ D.6565,
 184 0012 7047     		bx	lr	@
 185              	.LVL7:
 186              	.L11:
 276:cmsis/device/stm32f4xx_rng.c ****     RNG->CR |= RNG_CR_IE;
 187              		.loc 1 276 0
 188 0014 42F00801 		orr	r1, r2, #8	@ D.6562, D.6561,
 189 0018 1960     		str	r1, [r3, #0]	@ D.6562,
 190 001a 7047     		bx	lr	@
 191              		.cfi_endproc
 192              	.LFE113:
 193              		.size	RNG_ITConfig, .-RNG_ITConfig
 194              		.section	.text.RNG_GetFlagStatus,"ax",%progbits
 195              		.align	2
 196              		.global	RNG_GetFlagStatus
 197              		.thumb
 198              		.thumb_func
 199              		.type	RNG_GetFlagStatus, %function
 200              	RNG_GetFlagStatus:
 201              	.LFB114:
 282:cmsis/device/stm32f4xx_rng.c ****   }
 283:cmsis/device/stm32f4xx_rng.c **** }
 284:cmsis/device/stm32f4xx_rng.c **** 
 285:cmsis/device/stm32f4xx_rng.c **** /**
 286:cmsis/device/stm32f4xx_rng.c ****   * @brief  Checks whether the specified RNG flag is set or not.
 287:cmsis/device/stm32f4xx_rng.c ****   * @param  RNG_FLAG: specifies the RNG flag to check.
 288:cmsis/device/stm32f4xx_rng.c ****   *          This parameter can be one of the following values:
 289:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_FLAG_DRDY: Data Ready flag.
 290:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_FLAG_CECS: Clock Error Current flag.
 291:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_FLAG_SECS: Seed Error Current flag.
 292:cmsis/device/stm32f4xx_rng.c ****   * @retval The new state of RNG_FLAG (SET or RESET).
 293:cmsis/device/stm32f4xx_rng.c ****   */
 294:cmsis/device/stm32f4xx_rng.c **** FlagStatus RNG_GetFlagStatus(uint8_t RNG_FLAG)
 295:cmsis/device/stm32f4xx_rng.c **** {
 202              		.loc 1 295 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL8:
 296:cmsis/device/stm32f4xx_rng.c ****   FlagStatus bitstatus = RESET;
 297:cmsis/device/stm32f4xx_rng.c ****   /* Check the parameters */
 298:cmsis/device/stm32f4xx_rng.c ****   assert_param(IS_RNG_GET_FLAG(RNG_FLAG));
 299:cmsis/device/stm32f4xx_rng.c **** 
 300:cmsis/device/stm32f4xx_rng.c ****   /* Check the status of the specified RNG flag */
 301:cmsis/device/stm32f4xx_rng.c ****   if ((RNG->SR & RNG_FLAG) != (uint8_t)RESET)
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 10


 208              		.loc 1 301 0
 209 0000 4FF40063 		mov	r3, #2048	@ tmp141,
 210 0004 C5F20603 		movt	r3, 20486	@ tmp141,
 211 0008 5968     		ldr	r1, [r3, #4]	@ D.6550, MEM[(struct RNG_TypeDef *)1342572544B].SR
 212              	.LVL9:
 213 000a 0842     		tst	r0, r1	@ RNG_FLAG, D.6550
 302:cmsis/device/stm32f4xx_rng.c ****   {
 303:cmsis/device/stm32f4xx_rng.c ****     /* RNG_FLAG is set */
 304:cmsis/device/stm32f4xx_rng.c ****     bitstatus = SET;
 305:cmsis/device/stm32f4xx_rng.c ****   }
 306:cmsis/device/stm32f4xx_rng.c ****   else
 307:cmsis/device/stm32f4xx_rng.c ****   {
 308:cmsis/device/stm32f4xx_rng.c ****     /* RNG_FLAG is reset */
 309:cmsis/device/stm32f4xx_rng.c ****     bitstatus = RESET;
 310:cmsis/device/stm32f4xx_rng.c ****   }
 311:cmsis/device/stm32f4xx_rng.c ****   /* Return the RNG_FLAG status */
 312:cmsis/device/stm32f4xx_rng.c ****   return  bitstatus;
 313:cmsis/device/stm32f4xx_rng.c **** }
 214              		.loc 1 313 0
 215 000c 0CBF     		ite	eq	@
 216 000e 0020     		moveq	r0, #0	@,
 217 0010 0120     		movne	r0, #1	@,
 218              	.LVL10:
 219 0012 7047     		bx	lr	@
 220              		.cfi_endproc
 221              	.LFE114:
 222              		.size	RNG_GetFlagStatus, .-RNG_GetFlagStatus
 223              		.section	.text.RNG_ClearFlag,"ax",%progbits
 224              		.align	2
 225              		.global	RNG_ClearFlag
 226              		.thumb
 227              		.thumb_func
 228              		.type	RNG_ClearFlag, %function
 229              	RNG_ClearFlag:
 230              	.LFB115:
 314:cmsis/device/stm32f4xx_rng.c **** 
 315:cmsis/device/stm32f4xx_rng.c **** 
 316:cmsis/device/stm32f4xx_rng.c **** /**
 317:cmsis/device/stm32f4xx_rng.c ****   * @brief  Clears the RNG flags.
 318:cmsis/device/stm32f4xx_rng.c ****   * @param  RNG_FLAG: specifies the flag to clear. 
 319:cmsis/device/stm32f4xx_rng.c ****   *          This parameter can be any combination of the following values:
 320:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_FLAG_CECS: Clock Error Current flag.
 321:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_FLAG_SECS: Seed Error Current flag.
 322:cmsis/device/stm32f4xx_rng.c ****   * @note   RNG_FLAG_DRDY can not be cleared by RNG_ClearFlag() function. 
 323:cmsis/device/stm32f4xx_rng.c ****   *         This flag is cleared only by reading the Random number data (using 
 324:cmsis/device/stm32f4xx_rng.c ****   *         RNG_GetRandomNumber() function).                           
 325:cmsis/device/stm32f4xx_rng.c ****   * @retval None
 326:cmsis/device/stm32f4xx_rng.c ****   */
 327:cmsis/device/stm32f4xx_rng.c **** void RNG_ClearFlag(uint8_t RNG_FLAG)
 328:cmsis/device/stm32f4xx_rng.c **** {
 231              		.loc 1 328 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 0
 234              		@ frame_needed = 0, uses_anonymous_args = 0
 235              		@ link register save eliminated.
 236              	.LVL11:
 329:cmsis/device/stm32f4xx_rng.c ****   /* Check the parameters */
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 11


 330:cmsis/device/stm32f4xx_rng.c ****   assert_param(IS_RNG_CLEAR_FLAG(RNG_FLAG));
 331:cmsis/device/stm32f4xx_rng.c ****   /* Clear the selected RNG flags */
 332:cmsis/device/stm32f4xx_rng.c ****   RNG->SR = ~(uint32_t)(((uint32_t)RNG_FLAG) << 4);
 237              		.loc 1 332 0
 238 0000 4FF40063 		mov	r3, #2048	@ tmp140,
 239 0004 C5F20603 		movt	r3, 20486	@ tmp140,
 240 0008 6FEA0010 		mvn	r0, r0, lsl #4	@ D.6548, RNG_FLAG,
 241              	.LVL12:
 242 000c 5860     		str	r0, [r3, #4]	@ D.6548, MEM[(struct RNG_TypeDef *)1342572544B].SR
 243 000e 7047     		bx	lr	@
 244              		.cfi_endproc
 245              	.LFE115:
 246              		.size	RNG_ClearFlag, .-RNG_ClearFlag
 247              		.section	.text.RNG_GetITStatus,"ax",%progbits
 248              		.align	2
 249              		.global	RNG_GetITStatus
 250              		.thumb
 251              		.thumb_func
 252              		.type	RNG_GetITStatus, %function
 253              	RNG_GetITStatus:
 254              	.LFB116:
 333:cmsis/device/stm32f4xx_rng.c **** }
 334:cmsis/device/stm32f4xx_rng.c **** 
 335:cmsis/device/stm32f4xx_rng.c **** /**
 336:cmsis/device/stm32f4xx_rng.c ****   * @brief  Checks whether the specified RNG interrupt has occurred or not.
 337:cmsis/device/stm32f4xx_rng.c ****   * @param  RNG_IT: specifies the RNG interrupt source to check.
 338:cmsis/device/stm32f4xx_rng.c ****   *          This parameter can be one of the following values:
 339:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_IT_CEI: Clock Error Interrupt.
 340:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_IT_SEI: Seed Error Interrupt.                   
 341:cmsis/device/stm32f4xx_rng.c ****   * @retval The new state of RNG_IT (SET or RESET).
 342:cmsis/device/stm32f4xx_rng.c ****   */
 343:cmsis/device/stm32f4xx_rng.c **** ITStatus RNG_GetITStatus(uint8_t RNG_IT)
 344:cmsis/device/stm32f4xx_rng.c **** {
 255              		.loc 1 344 0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259              		@ link register save eliminated.
 260              	.LVL13:
 345:cmsis/device/stm32f4xx_rng.c ****   ITStatus bitstatus = RESET;
 346:cmsis/device/stm32f4xx_rng.c ****   /* Check the parameters */
 347:cmsis/device/stm32f4xx_rng.c ****   assert_param(IS_RNG_GET_IT(RNG_IT));
 348:cmsis/device/stm32f4xx_rng.c **** 
 349:cmsis/device/stm32f4xx_rng.c ****   /* Check the status of the specified RNG interrupt */
 350:cmsis/device/stm32f4xx_rng.c ****   if ((RNG->SR & RNG_IT) != (uint8_t)RESET)
 261              		.loc 1 350 0
 262 0000 4FF40063 		mov	r3, #2048	@ tmp141,
 263 0004 C5F20603 		movt	r3, 20486	@ tmp141,
 264 0008 5968     		ldr	r1, [r3, #4]	@ D.6537, MEM[(struct RNG_TypeDef *)1342572544B].SR
 265              	.LVL14:
 266 000a 0842     		tst	r0, r1	@ RNG_IT, D.6537
 351:cmsis/device/stm32f4xx_rng.c ****   {
 352:cmsis/device/stm32f4xx_rng.c ****     /* RNG_IT is set */
 353:cmsis/device/stm32f4xx_rng.c ****     bitstatus = SET;
 354:cmsis/device/stm32f4xx_rng.c ****   }
 355:cmsis/device/stm32f4xx_rng.c ****   else
 356:cmsis/device/stm32f4xx_rng.c ****   {
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 12


 357:cmsis/device/stm32f4xx_rng.c ****     /* RNG_IT is reset */
 358:cmsis/device/stm32f4xx_rng.c ****     bitstatus = RESET;
 359:cmsis/device/stm32f4xx_rng.c ****   }
 360:cmsis/device/stm32f4xx_rng.c ****   /* Return the RNG_IT status */
 361:cmsis/device/stm32f4xx_rng.c ****   return bitstatus;
 362:cmsis/device/stm32f4xx_rng.c **** }
 267              		.loc 1 362 0
 268 000c 0CBF     		ite	eq	@
 269 000e 0020     		moveq	r0, #0	@,
 270 0010 0120     		movne	r0, #1	@,
 271              	.LVL15:
 272 0012 7047     		bx	lr	@
 273              		.cfi_endproc
 274              	.LFE116:
 275              		.size	RNG_GetITStatus, .-RNG_GetITStatus
 276              		.section	.text.RNG_ClearITPendingBit,"ax",%progbits
 277              		.align	2
 278              		.global	RNG_ClearITPendingBit
 279              		.thumb
 280              		.thumb_func
 281              		.type	RNG_ClearITPendingBit, %function
 282              	RNG_ClearITPendingBit:
 283              	.LFB117:
 363:cmsis/device/stm32f4xx_rng.c **** 
 364:cmsis/device/stm32f4xx_rng.c **** 
 365:cmsis/device/stm32f4xx_rng.c **** /**
 366:cmsis/device/stm32f4xx_rng.c ****   * @brief  Clears the RNG interrupt pending bit(s).
 367:cmsis/device/stm32f4xx_rng.c ****   * @param  RNG_IT: specifies the RNG interrupt pending bit(s) to clear.
 368:cmsis/device/stm32f4xx_rng.c ****   *          This parameter can be any combination of the following values:
 369:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_IT_CEI: Clock Error Interrupt.
 370:cmsis/device/stm32f4xx_rng.c ****   *            @arg RNG_IT_SEI: Seed Error Interrupt.
 371:cmsis/device/stm32f4xx_rng.c ****   * @retval None
 372:cmsis/device/stm32f4xx_rng.c ****   */
 373:cmsis/device/stm32f4xx_rng.c **** void RNG_ClearITPendingBit(uint8_t RNG_IT)
 374:cmsis/device/stm32f4xx_rng.c **** {
 284              		.loc 1 374 0
 285              		.cfi_startproc
 286              		@ args = 0, pretend = 0, frame = 0
 287              		@ frame_needed = 0, uses_anonymous_args = 0
 288              		@ link register save eliminated.
 289              	.LVL16:
 375:cmsis/device/stm32f4xx_rng.c ****   /* Check the parameters */
 376:cmsis/device/stm32f4xx_rng.c ****   assert_param(IS_RNG_IT(RNG_IT));
 377:cmsis/device/stm32f4xx_rng.c **** 
 378:cmsis/device/stm32f4xx_rng.c ****   /* Clear the selected RNG interrupt pending bit */
 379:cmsis/device/stm32f4xx_rng.c ****   RNG->SR = (uint8_t)~RNG_IT;
 290              		.loc 1 379 0
 291 0000 4FF40063 		mov	r3, #2048	@ tmp139,
 292 0004 C043     		mvns	r0, r0	@ tmp137, RNG_IT
 293              	.LVL17:
 294 0006 C5F20603 		movt	r3, 20486	@ tmp139,
 295 000a C1B2     		uxtb	r1, r0	@ D.6535, tmp137
 296 000c 5960     		str	r1, [r3, #4]	@ D.6535, MEM[(struct RNG_TypeDef *)1342572544B].SR
 297 000e 7047     		bx	lr	@
 298              		.cfi_endproc
 299              	.LFE117:
 300              		.size	RNG_ClearITPendingBit, .-RNG_ClearITPendingBit
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 13


 301              		.text
 302              	.Letext0:
 303              		.file 2 "c:\\gnutoolsarmembedded\\4.7-2012q4\\bin\\../lib/gcc/arm-none-eabi/4.7.3/../../../../arm-
 304              		.file 3 "cmsis/device/stm32f4xx.h"
 305              		.file 4 "./cmsis/core/core_cm4.h"
 306              		.file 5 "./cmsis/device/stm32f4xx_rcc.h"
 307              		.section	.debug_info,"",%progbits
 308              	.Ldebug_info0:
 309 0000 DD020000 		.4byte	0x2dd
 310 0004 0200     		.2byte	0x2
 311 0006 00000000 		.4byte	.Ldebug_abbrev0
 312 000a 04       		.byte	0x4
 313 000b 01       		.uleb128 0x1
 314 000c FB000000 		.4byte	.LASF31
 315 0010 01       		.byte	0x1
 316 0011 89000000 		.4byte	.LASF32
 317 0015 D5010000 		.4byte	.LASF33
 318 0019 00000000 		.4byte	.Ldebug_ranges0+0
 319 001d 00000000 		.4byte	0
 320 0021 00000000 		.4byte	0
 321 0025 00000000 		.4byte	.Ldebug_line0
 322 0029 02       		.uleb128 0x2
 323 002a 01       		.byte	0x1
 324 002b 06       		.byte	0x6
 325 002c 03020000 		.4byte	.LASF0
 326 0030 03       		.uleb128 0x3
 327 0031 7D010000 		.4byte	.LASF4
 328 0035 02       		.byte	0x2
 329 0036 2A       		.byte	0x2a
 330 0037 3B000000 		.4byte	0x3b
 331 003b 02       		.uleb128 0x2
 332 003c 01       		.byte	0x1
 333 003d 08       		.byte	0x8
 334 003e 7B000000 		.4byte	.LASF1
 335 0042 02       		.uleb128 0x2
 336 0043 02       		.byte	0x2
 337 0044 05       		.byte	0x5
 338 0045 A4010000 		.4byte	.LASF2
 339 0049 02       		.uleb128 0x2
 340 004a 02       		.byte	0x2
 341 004b 07       		.byte	0x7
 342 004c 20000000 		.4byte	.LASF3
 343 0050 03       		.uleb128 0x3
 344 0051 85010000 		.4byte	.LASF5
 345 0055 02       		.byte	0x2
 346 0056 4F       		.byte	0x4f
 347 0057 5B000000 		.4byte	0x5b
 348 005b 02       		.uleb128 0x2
 349 005c 04       		.byte	0x4
 350 005d 05       		.byte	0x5
 351 005e FA010000 		.4byte	.LASF6
 352 0062 03       		.uleb128 0x3
 353 0063 DD000000 		.4byte	.LASF7
 354 0067 02       		.byte	0x2
 355 0068 50       		.byte	0x50
 356 0069 6D000000 		.4byte	0x6d
 357 006d 02       		.uleb128 0x2
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 14


 358 006e 04       		.byte	0x4
 359 006f 07       		.byte	0x7
 360 0070 BA000000 		.4byte	.LASF8
 361 0074 02       		.uleb128 0x2
 362 0075 08       		.byte	0x8
 363 0076 05       		.byte	0x5
 364 0077 96010000 		.4byte	.LASF9
 365 007b 02       		.uleb128 0x2
 366 007c 08       		.byte	0x8
 367 007d 07       		.byte	0x7
 368 007e 66010000 		.4byte	.LASF10
 369 0082 04       		.uleb128 0x4
 370 0083 04       		.byte	0x4
 371 0084 05       		.byte	0x5
 372 0085 696E7400 		.ascii	"int\000"
 373 0089 02       		.uleb128 0x2
 374 008a 04       		.byte	0x4
 375 008b 07       		.byte	0x7
 376 008c 50010000 		.4byte	.LASF11
 377 0090 02       		.uleb128 0x2
 378 0091 04       		.byte	0x4
 379 0092 07       		.byte	0x7
 380 0093 8D010000 		.4byte	.LASF12
 381 0097 05       		.uleb128 0x5
 382 0098 62000000 		.4byte	0x62
 383 009c 05       		.uleb128 0x5
 384 009d 50000000 		.4byte	0x50
 385 00a1 06       		.uleb128 0x6
 386 00a2 01       		.byte	0x1
 387 00a3 03       		.byte	0x3
 388 00a4 1801     		.2byte	0x118
 389 00a6 B7000000 		.4byte	0xb7
 390 00aa 07       		.uleb128 0x7
 391 00ab D7000000 		.4byte	.LASF13
 392 00af 00       		.sleb128 0
 393 00b0 08       		.uleb128 0x8
 394 00b1 53455400 		.ascii	"SET\000"
 395 00b5 01       		.sleb128 1
 396 00b6 00       		.byte	0
 397 00b7 09       		.uleb128 0x9
 398 00b8 62000000 		.4byte	.LASF14
 399 00bc 03       		.byte	0x3
 400 00bd 1801     		.2byte	0x118
 401 00bf A1000000 		.4byte	0xa1
 402 00c3 09       		.uleb128 0x9
 403 00c4 00000000 		.4byte	.LASF15
 404 00c8 03       		.byte	0x3
 405 00c9 1801     		.2byte	0x118
 406 00cb A1000000 		.4byte	0xa1
 407 00cf 06       		.uleb128 0x6
 408 00d0 01       		.byte	0x1
 409 00d1 03       		.byte	0x3
 410 00d2 1A01     		.2byte	0x11a
 411 00d4 E5000000 		.4byte	0xe5
 412 00d8 07       		.uleb128 0x7
 413 00d9 E6000000 		.4byte	.LASF16
 414 00dd 00       		.sleb128 0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 15


 415 00de 07       		.uleb128 0x7
 416 00df 74000000 		.4byte	.LASF17
 417 00e3 01       		.sleb128 1
 418 00e4 00       		.byte	0
 419 00e5 09       		.uleb128 0x9
 420 00e6 33000000 		.4byte	.LASF18
 421 00ea 03       		.byte	0x3
 422 00eb 1A01     		.2byte	0x11a
 423 00ed CF000000 		.4byte	0xcf
 424 00f1 0A       		.uleb128 0xa
 425 00f2 0C       		.byte	0xc
 426 00f3 03       		.byte	0x3
 427 00f4 DD03     		.2byte	0x3dd
 428 00f6 25010000 		.4byte	0x125
 429 00fa 0B       		.uleb128 0xb
 430 00fb 435200   		.ascii	"CR\000"
 431 00fe 03       		.byte	0x3
 432 00ff DF03     		.2byte	0x3df
 433 0101 97000000 		.4byte	0x97
 434 0105 02       		.byte	0x2
 435 0106 23       		.byte	0x23
 436 0107 00       		.uleb128 0
 437 0108 0B       		.uleb128 0xb
 438 0109 535200   		.ascii	"SR\000"
 439 010c 03       		.byte	0x3
 440 010d E003     		.2byte	0x3e0
 441 010f 97000000 		.4byte	0x97
 442 0113 02       		.byte	0x2
 443 0114 23       		.byte	0x23
 444 0115 04       		.uleb128 0x4
 445 0116 0B       		.uleb128 0xb
 446 0117 445200   		.ascii	"DR\000"
 447 011a 03       		.byte	0x3
 448 011b E103     		.2byte	0x3e1
 449 011d 97000000 		.4byte	0x97
 450 0121 02       		.byte	0x2
 451 0122 23       		.byte	0x23
 452 0123 08       		.uleb128 0x8
 453 0124 00       		.byte	0
 454 0125 09       		.uleb128 0x9
 455 0126 44010000 		.4byte	.LASF19
 456 012a 03       		.byte	0x3
 457 012b E203     		.2byte	0x3e2
 458 012d F1000000 		.4byte	0xf1
 459 0131 0C       		.uleb128 0xc
 460 0132 01       		.byte	0x1
 461 0133 CC000000 		.4byte	.LASF20
 462 0137 01       		.byte	0x1
 463 0138 5E       		.byte	0x5e
 464 0139 01       		.byte	0x1
 465 013a 00000000 		.4byte	.LFB110
 466 013e 16000000 		.4byte	.LFE110
 467 0142 00000000 		.4byte	.LLST0
 468 0146 01       		.byte	0x1
 469 0147 7B010000 		.4byte	0x17b
 470 014b 0D       		.uleb128 0xd
 471 014c 0A000000 		.4byte	.LVL0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 16


 472 0150 CA020000 		.4byte	0x2ca
 473 0154 64010000 		.4byte	0x164
 474 0158 0E       		.uleb128 0xe
 475 0159 01       		.byte	0x1
 476 015a 51       		.byte	0x51
 477 015b 01       		.byte	0x1
 478 015c 31       		.byte	0x31
 479 015d 0E       		.uleb128 0xe
 480 015e 01       		.byte	0x1
 481 015f 50       		.byte	0x50
 482 0160 02       		.byte	0x2
 483 0161 08       		.byte	0x8
 484 0162 40       		.byte	0x40
 485 0163 00       		.byte	0
 486 0164 0F       		.uleb128 0xf
 487 0165 16000000 		.4byte	.LVL1
 488 0169 01       		.byte	0x1
 489 016a CA020000 		.4byte	0x2ca
 490 016e 0E       		.uleb128 0xe
 491 016f 01       		.byte	0x1
 492 0170 51       		.byte	0x51
 493 0171 01       		.byte	0x1
 494 0172 30       		.byte	0x30
 495 0173 0E       		.uleb128 0xe
 496 0174 01       		.byte	0x1
 497 0175 50       		.byte	0x50
 498 0176 02       		.byte	0x2
 499 0177 08       		.byte	0x8
 500 0178 40       		.byte	0x40
 501 0179 00       		.byte	0
 502 017a 00       		.byte	0
 503 017b 10       		.uleb128 0x10
 504 017c 01       		.byte	0x1
 505 017d 50000000 		.4byte	.LASF21
 506 0181 01       		.byte	0x1
 507 0182 6D       		.byte	0x6d
 508 0183 01       		.byte	0x1
 509 0184 00000000 		.4byte	.LFB111
 510 0188 1C000000 		.4byte	.LFE111
 511 018c 02       		.byte	0x2
 512 018d 7D       		.byte	0x7d
 513 018e 00       		.sleb128 0
 514 018f 01       		.byte	0x1
 515 0190 A4010000 		.4byte	0x1a4
 516 0194 11       		.uleb128 0x11
 517 0195 BC010000 		.4byte	.LASF23
 518 0199 01       		.byte	0x1
 519 019a 6D       		.byte	0x6d
 520 019b E5000000 		.4byte	0xe5
 521 019f 20000000 		.4byte	.LLST1
 522 01a3 00       		.byte	0
 523 01a4 12       		.uleb128 0x12
 524 01a5 01       		.byte	0x1
 525 01a6 A6000000 		.4byte	.LASF34
 526 01aa 01       		.byte	0x1
 527 01ab AB       		.byte	0xab
 528 01ac 01       		.byte	0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 17


 529 01ad 62000000 		.4byte	0x62
 530 01b1 00000000 		.4byte	.LFB112
 531 01b5 0C000000 		.4byte	.LFE112
 532 01b9 02       		.byte	0x2
 533 01ba 7D       		.byte	0x7d
 534 01bb 00       		.sleb128 0
 535 01bc 01       		.byte	0x1
 536 01bd 13       		.uleb128 0x13
 537 01be 01       		.byte	0x1
 538 01bf 43000000 		.4byte	.LASF22
 539 01c3 01       		.byte	0x1
 540 01c4 0C01     		.2byte	0x10c
 541 01c6 01       		.byte	0x1
 542 01c7 00000000 		.4byte	.LFB113
 543 01cb 1C000000 		.4byte	.LFE113
 544 01cf 02       		.byte	0x2
 545 01d0 7D       		.byte	0x7d
 546 01d1 00       		.sleb128 0
 547 01d2 01       		.byte	0x1
 548 01d3 E8010000 		.4byte	0x1e8
 549 01d7 14       		.uleb128 0x14
 550 01d8 BC010000 		.4byte	.LASF23
 551 01dc 01       		.byte	0x1
 552 01dd 0C01     		.2byte	0x10c
 553 01df E5000000 		.4byte	0xe5
 554 01e3 4C000000 		.4byte	.LLST2
 555 01e7 00       		.byte	0
 556 01e8 15       		.uleb128 0x15
 557 01e9 01       		.byte	0x1
 558 01ea 25020000 		.4byte	.LASF26
 559 01ee 01       		.byte	0x1
 560 01ef 2601     		.2byte	0x126
 561 01f1 01       		.byte	0x1
 562 01f2 B7000000 		.4byte	0xb7
 563 01f6 00000000 		.4byte	.LFB114
 564 01fa 14000000 		.4byte	.LFE114
 565 01fe 02       		.byte	0x2
 566 01ff 7D       		.byte	0x7d
 567 0200 00       		.sleb128 0
 568 0201 01       		.byte	0x1
 569 0202 27020000 		.4byte	0x227
 570 0206 14       		.uleb128 0x14
 571 0207 5D010000 		.4byte	.LASF24
 572 020b 01       		.byte	0x1
 573 020c 2601     		.2byte	0x126
 574 020e 30000000 		.4byte	0x30
 575 0212 78000000 		.4byte	.LLST3
 576 0216 16       		.uleb128 0x16
 577 0217 58000000 		.4byte	.LASF29
 578 021b 01       		.byte	0x1
 579 021c 2801     		.2byte	0x128
 580 021e B7000000 		.4byte	0xb7
 581 0222 99000000 		.4byte	.LLST4
 582 0226 00       		.byte	0
 583 0227 13       		.uleb128 0x13
 584 0228 01       		.byte	0x1
 585 0229 AE010000 		.4byte	.LASF25
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 18


 586 022d 01       		.byte	0x1
 587 022e 4701     		.2byte	0x147
 588 0230 01       		.byte	0x1
 589 0231 00000000 		.4byte	.LFB115
 590 0235 10000000 		.4byte	.LFE115
 591 0239 02       		.byte	0x2
 592 023a 7D       		.byte	0x7d
 593 023b 00       		.sleb128 0
 594 023c 01       		.byte	0x1
 595 023d 52020000 		.4byte	0x252
 596 0241 14       		.uleb128 0x14
 597 0242 5D010000 		.4byte	.LASF24
 598 0246 01       		.byte	0x1
 599 0247 4701     		.2byte	0x147
 600 0249 30000000 		.4byte	0x30
 601 024d D8000000 		.4byte	.LLST5
 602 0251 00       		.byte	0
 603 0252 15       		.uleb128 0x15
 604 0253 01       		.byte	0x1
 605 0254 C5010000 		.4byte	.LASF27
 606 0258 01       		.byte	0x1
 607 0259 5701     		.2byte	0x157
 608 025b 01       		.byte	0x1
 609 025c C3000000 		.4byte	0xc3
 610 0260 00000000 		.4byte	.LFB116
 611 0264 14000000 		.4byte	.LFE116
 612 0268 02       		.byte	0x2
 613 0269 7D       		.byte	0x7d
 614 026a 00       		.sleb128 0
 615 026b 01       		.byte	0x1
 616 026c 91020000 		.4byte	0x291
 617 0270 14       		.uleb128 0x14
 618 0271 6D000000 		.4byte	.LASF28
 619 0275 01       		.byte	0x1
 620 0276 5701     		.2byte	0x157
 621 0278 30000000 		.4byte	0x30
 622 027c F9000000 		.4byte	.LLST6
 623 0280 16       		.uleb128 0x16
 624 0281 58000000 		.4byte	.LASF29
 625 0285 01       		.byte	0x1
 626 0286 5901     		.2byte	0x159
 627 0288 C3000000 		.4byte	0xc3
 628 028c 1A010000 		.4byte	.LLST7
 629 0290 00       		.byte	0
 630 0291 13       		.uleb128 0x13
 631 0292 01       		.byte	0x1
 632 0293 0F020000 		.4byte	.LASF30
 633 0297 01       		.byte	0x1
 634 0298 7501     		.2byte	0x175
 635 029a 01       		.byte	0x1
 636 029b 00000000 		.4byte	.LFB117
 637 029f 10000000 		.4byte	.LFE117
 638 02a3 02       		.byte	0x2
 639 02a4 7D       		.byte	0x7d
 640 02a5 00       		.sleb128 0
 641 02a6 01       		.byte	0x1
 642 02a7 BC020000 		.4byte	0x2bc
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 19


 643 02ab 14       		.uleb128 0x14
 644 02ac 6D000000 		.4byte	.LASF28
 645 02b0 01       		.byte	0x1
 646 02b1 7501     		.2byte	0x175
 647 02b3 30000000 		.4byte	0x30
 648 02b7 59010000 		.4byte	.LLST8
 649 02bb 00       		.byte	0
 650 02bc 17       		.uleb128 0x17
 651 02bd EE000000 		.4byte	.LASF35
 652 02c1 04       		.byte	0x4
 653 02c2 1A05     		.2byte	0x51a
 654 02c4 9C000000 		.4byte	0x9c
 655 02c8 01       		.byte	0x1
 656 02c9 01       		.byte	0x1
 657 02ca 18       		.uleb128 0x18
 658 02cb 01       		.byte	0x1
 659 02cc 09000000 		.4byte	.LASF36
 660 02d0 05       		.byte	0x5
 661 02d1 DE01     		.2byte	0x1de
 662 02d3 01       		.byte	0x1
 663 02d4 01       		.byte	0x1
 664 02d5 19       		.uleb128 0x19
 665 02d6 62000000 		.4byte	0x62
 666 02da 19       		.uleb128 0x19
 667 02db E5000000 		.4byte	0xe5
 668 02df 00       		.byte	0
 669 02e0 00       		.byte	0
 670              		.section	.debug_abbrev,"",%progbits
 671              	.Ldebug_abbrev0:
 672 0000 01       		.uleb128 0x1
 673 0001 11       		.uleb128 0x11
 674 0002 01       		.byte	0x1
 675 0003 25       		.uleb128 0x25
 676 0004 0E       		.uleb128 0xe
 677 0005 13       		.uleb128 0x13
 678 0006 0B       		.uleb128 0xb
 679 0007 03       		.uleb128 0x3
 680 0008 0E       		.uleb128 0xe
 681 0009 1B       		.uleb128 0x1b
 682 000a 0E       		.uleb128 0xe
 683 000b 55       		.uleb128 0x55
 684 000c 06       		.uleb128 0x6
 685 000d 11       		.uleb128 0x11
 686 000e 01       		.uleb128 0x1
 687 000f 52       		.uleb128 0x52
 688 0010 01       		.uleb128 0x1
 689 0011 10       		.uleb128 0x10
 690 0012 06       		.uleb128 0x6
 691 0013 00       		.byte	0
 692 0014 00       		.byte	0
 693 0015 02       		.uleb128 0x2
 694 0016 24       		.uleb128 0x24
 695 0017 00       		.byte	0
 696 0018 0B       		.uleb128 0xb
 697 0019 0B       		.uleb128 0xb
 698 001a 3E       		.uleb128 0x3e
 699 001b 0B       		.uleb128 0xb
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 20


 700 001c 03       		.uleb128 0x3
 701 001d 0E       		.uleb128 0xe
 702 001e 00       		.byte	0
 703 001f 00       		.byte	0
 704 0020 03       		.uleb128 0x3
 705 0021 16       		.uleb128 0x16
 706 0022 00       		.byte	0
 707 0023 03       		.uleb128 0x3
 708 0024 0E       		.uleb128 0xe
 709 0025 3A       		.uleb128 0x3a
 710 0026 0B       		.uleb128 0xb
 711 0027 3B       		.uleb128 0x3b
 712 0028 0B       		.uleb128 0xb
 713 0029 49       		.uleb128 0x49
 714 002a 13       		.uleb128 0x13
 715 002b 00       		.byte	0
 716 002c 00       		.byte	0
 717 002d 04       		.uleb128 0x4
 718 002e 24       		.uleb128 0x24
 719 002f 00       		.byte	0
 720 0030 0B       		.uleb128 0xb
 721 0031 0B       		.uleb128 0xb
 722 0032 3E       		.uleb128 0x3e
 723 0033 0B       		.uleb128 0xb
 724 0034 03       		.uleb128 0x3
 725 0035 08       		.uleb128 0x8
 726 0036 00       		.byte	0
 727 0037 00       		.byte	0
 728 0038 05       		.uleb128 0x5
 729 0039 35       		.uleb128 0x35
 730 003a 00       		.byte	0
 731 003b 49       		.uleb128 0x49
 732 003c 13       		.uleb128 0x13
 733 003d 00       		.byte	0
 734 003e 00       		.byte	0
 735 003f 06       		.uleb128 0x6
 736 0040 04       		.uleb128 0x4
 737 0041 01       		.byte	0x1
 738 0042 0B       		.uleb128 0xb
 739 0043 0B       		.uleb128 0xb
 740 0044 3A       		.uleb128 0x3a
 741 0045 0B       		.uleb128 0xb
 742 0046 3B       		.uleb128 0x3b
 743 0047 05       		.uleb128 0x5
 744 0048 01       		.uleb128 0x1
 745 0049 13       		.uleb128 0x13
 746 004a 00       		.byte	0
 747 004b 00       		.byte	0
 748 004c 07       		.uleb128 0x7
 749 004d 28       		.uleb128 0x28
 750 004e 00       		.byte	0
 751 004f 03       		.uleb128 0x3
 752 0050 0E       		.uleb128 0xe
 753 0051 1C       		.uleb128 0x1c
 754 0052 0D       		.uleb128 0xd
 755 0053 00       		.byte	0
 756 0054 00       		.byte	0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 21


 757 0055 08       		.uleb128 0x8
 758 0056 28       		.uleb128 0x28
 759 0057 00       		.byte	0
 760 0058 03       		.uleb128 0x3
 761 0059 08       		.uleb128 0x8
 762 005a 1C       		.uleb128 0x1c
 763 005b 0D       		.uleb128 0xd
 764 005c 00       		.byte	0
 765 005d 00       		.byte	0
 766 005e 09       		.uleb128 0x9
 767 005f 16       		.uleb128 0x16
 768 0060 00       		.byte	0
 769 0061 03       		.uleb128 0x3
 770 0062 0E       		.uleb128 0xe
 771 0063 3A       		.uleb128 0x3a
 772 0064 0B       		.uleb128 0xb
 773 0065 3B       		.uleb128 0x3b
 774 0066 05       		.uleb128 0x5
 775 0067 49       		.uleb128 0x49
 776 0068 13       		.uleb128 0x13
 777 0069 00       		.byte	0
 778 006a 00       		.byte	0
 779 006b 0A       		.uleb128 0xa
 780 006c 13       		.uleb128 0x13
 781 006d 01       		.byte	0x1
 782 006e 0B       		.uleb128 0xb
 783 006f 0B       		.uleb128 0xb
 784 0070 3A       		.uleb128 0x3a
 785 0071 0B       		.uleb128 0xb
 786 0072 3B       		.uleb128 0x3b
 787 0073 05       		.uleb128 0x5
 788 0074 01       		.uleb128 0x1
 789 0075 13       		.uleb128 0x13
 790 0076 00       		.byte	0
 791 0077 00       		.byte	0
 792 0078 0B       		.uleb128 0xb
 793 0079 0D       		.uleb128 0xd
 794 007a 00       		.byte	0
 795 007b 03       		.uleb128 0x3
 796 007c 08       		.uleb128 0x8
 797 007d 3A       		.uleb128 0x3a
 798 007e 0B       		.uleb128 0xb
 799 007f 3B       		.uleb128 0x3b
 800 0080 05       		.uleb128 0x5
 801 0081 49       		.uleb128 0x49
 802 0082 13       		.uleb128 0x13
 803 0083 38       		.uleb128 0x38
 804 0084 0A       		.uleb128 0xa
 805 0085 00       		.byte	0
 806 0086 00       		.byte	0
 807 0087 0C       		.uleb128 0xc
 808 0088 2E       		.uleb128 0x2e
 809 0089 01       		.byte	0x1
 810 008a 3F       		.uleb128 0x3f
 811 008b 0C       		.uleb128 0xc
 812 008c 03       		.uleb128 0x3
 813 008d 0E       		.uleb128 0xe
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 22


 814 008e 3A       		.uleb128 0x3a
 815 008f 0B       		.uleb128 0xb
 816 0090 3B       		.uleb128 0x3b
 817 0091 0B       		.uleb128 0xb
 818 0092 27       		.uleb128 0x27
 819 0093 0C       		.uleb128 0xc
 820 0094 11       		.uleb128 0x11
 821 0095 01       		.uleb128 0x1
 822 0096 12       		.uleb128 0x12
 823 0097 01       		.uleb128 0x1
 824 0098 40       		.uleb128 0x40
 825 0099 06       		.uleb128 0x6
 826 009a 9742     		.uleb128 0x2117
 827 009c 0C       		.uleb128 0xc
 828 009d 01       		.uleb128 0x1
 829 009e 13       		.uleb128 0x13
 830 009f 00       		.byte	0
 831 00a0 00       		.byte	0
 832 00a1 0D       		.uleb128 0xd
 833 00a2 898201   		.uleb128 0x4109
 834 00a5 01       		.byte	0x1
 835 00a6 11       		.uleb128 0x11
 836 00a7 01       		.uleb128 0x1
 837 00a8 31       		.uleb128 0x31
 838 00a9 13       		.uleb128 0x13
 839 00aa 01       		.uleb128 0x1
 840 00ab 13       		.uleb128 0x13
 841 00ac 00       		.byte	0
 842 00ad 00       		.byte	0
 843 00ae 0E       		.uleb128 0xe
 844 00af 8A8201   		.uleb128 0x410a
 845 00b2 00       		.byte	0
 846 00b3 02       		.uleb128 0x2
 847 00b4 0A       		.uleb128 0xa
 848 00b5 9142     		.uleb128 0x2111
 849 00b7 0A       		.uleb128 0xa
 850 00b8 00       		.byte	0
 851 00b9 00       		.byte	0
 852 00ba 0F       		.uleb128 0xf
 853 00bb 898201   		.uleb128 0x4109
 854 00be 01       		.byte	0x1
 855 00bf 11       		.uleb128 0x11
 856 00c0 01       		.uleb128 0x1
 857 00c1 9542     		.uleb128 0x2115
 858 00c3 0C       		.uleb128 0xc
 859 00c4 31       		.uleb128 0x31
 860 00c5 13       		.uleb128 0x13
 861 00c6 00       		.byte	0
 862 00c7 00       		.byte	0
 863 00c8 10       		.uleb128 0x10
 864 00c9 2E       		.uleb128 0x2e
 865 00ca 01       		.byte	0x1
 866 00cb 3F       		.uleb128 0x3f
 867 00cc 0C       		.uleb128 0xc
 868 00cd 03       		.uleb128 0x3
 869 00ce 0E       		.uleb128 0xe
 870 00cf 3A       		.uleb128 0x3a
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 23


 871 00d0 0B       		.uleb128 0xb
 872 00d1 3B       		.uleb128 0x3b
 873 00d2 0B       		.uleb128 0xb
 874 00d3 27       		.uleb128 0x27
 875 00d4 0C       		.uleb128 0xc
 876 00d5 11       		.uleb128 0x11
 877 00d6 01       		.uleb128 0x1
 878 00d7 12       		.uleb128 0x12
 879 00d8 01       		.uleb128 0x1
 880 00d9 40       		.uleb128 0x40
 881 00da 0A       		.uleb128 0xa
 882 00db 9742     		.uleb128 0x2117
 883 00dd 0C       		.uleb128 0xc
 884 00de 01       		.uleb128 0x1
 885 00df 13       		.uleb128 0x13
 886 00e0 00       		.byte	0
 887 00e1 00       		.byte	0
 888 00e2 11       		.uleb128 0x11
 889 00e3 05       		.uleb128 0x5
 890 00e4 00       		.byte	0
 891 00e5 03       		.uleb128 0x3
 892 00e6 0E       		.uleb128 0xe
 893 00e7 3A       		.uleb128 0x3a
 894 00e8 0B       		.uleb128 0xb
 895 00e9 3B       		.uleb128 0x3b
 896 00ea 0B       		.uleb128 0xb
 897 00eb 49       		.uleb128 0x49
 898 00ec 13       		.uleb128 0x13
 899 00ed 02       		.uleb128 0x2
 900 00ee 06       		.uleb128 0x6
 901 00ef 00       		.byte	0
 902 00f0 00       		.byte	0
 903 00f1 12       		.uleb128 0x12
 904 00f2 2E       		.uleb128 0x2e
 905 00f3 00       		.byte	0
 906 00f4 3F       		.uleb128 0x3f
 907 00f5 0C       		.uleb128 0xc
 908 00f6 03       		.uleb128 0x3
 909 00f7 0E       		.uleb128 0xe
 910 00f8 3A       		.uleb128 0x3a
 911 00f9 0B       		.uleb128 0xb
 912 00fa 3B       		.uleb128 0x3b
 913 00fb 0B       		.uleb128 0xb
 914 00fc 27       		.uleb128 0x27
 915 00fd 0C       		.uleb128 0xc
 916 00fe 49       		.uleb128 0x49
 917 00ff 13       		.uleb128 0x13
 918 0100 11       		.uleb128 0x11
 919 0101 01       		.uleb128 0x1
 920 0102 12       		.uleb128 0x12
 921 0103 01       		.uleb128 0x1
 922 0104 40       		.uleb128 0x40
 923 0105 0A       		.uleb128 0xa
 924 0106 9742     		.uleb128 0x2117
 925 0108 0C       		.uleb128 0xc
 926 0109 00       		.byte	0
 927 010a 00       		.byte	0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 24


 928 010b 13       		.uleb128 0x13
 929 010c 2E       		.uleb128 0x2e
 930 010d 01       		.byte	0x1
 931 010e 3F       		.uleb128 0x3f
 932 010f 0C       		.uleb128 0xc
 933 0110 03       		.uleb128 0x3
 934 0111 0E       		.uleb128 0xe
 935 0112 3A       		.uleb128 0x3a
 936 0113 0B       		.uleb128 0xb
 937 0114 3B       		.uleb128 0x3b
 938 0115 05       		.uleb128 0x5
 939 0116 27       		.uleb128 0x27
 940 0117 0C       		.uleb128 0xc
 941 0118 11       		.uleb128 0x11
 942 0119 01       		.uleb128 0x1
 943 011a 12       		.uleb128 0x12
 944 011b 01       		.uleb128 0x1
 945 011c 40       		.uleb128 0x40
 946 011d 0A       		.uleb128 0xa
 947 011e 9742     		.uleb128 0x2117
 948 0120 0C       		.uleb128 0xc
 949 0121 01       		.uleb128 0x1
 950 0122 13       		.uleb128 0x13
 951 0123 00       		.byte	0
 952 0124 00       		.byte	0
 953 0125 14       		.uleb128 0x14
 954 0126 05       		.uleb128 0x5
 955 0127 00       		.byte	0
 956 0128 03       		.uleb128 0x3
 957 0129 0E       		.uleb128 0xe
 958 012a 3A       		.uleb128 0x3a
 959 012b 0B       		.uleb128 0xb
 960 012c 3B       		.uleb128 0x3b
 961 012d 05       		.uleb128 0x5
 962 012e 49       		.uleb128 0x49
 963 012f 13       		.uleb128 0x13
 964 0130 02       		.uleb128 0x2
 965 0131 06       		.uleb128 0x6
 966 0132 00       		.byte	0
 967 0133 00       		.byte	0
 968 0134 15       		.uleb128 0x15
 969 0135 2E       		.uleb128 0x2e
 970 0136 01       		.byte	0x1
 971 0137 3F       		.uleb128 0x3f
 972 0138 0C       		.uleb128 0xc
 973 0139 03       		.uleb128 0x3
 974 013a 0E       		.uleb128 0xe
 975 013b 3A       		.uleb128 0x3a
 976 013c 0B       		.uleb128 0xb
 977 013d 3B       		.uleb128 0x3b
 978 013e 05       		.uleb128 0x5
 979 013f 27       		.uleb128 0x27
 980 0140 0C       		.uleb128 0xc
 981 0141 49       		.uleb128 0x49
 982 0142 13       		.uleb128 0x13
 983 0143 11       		.uleb128 0x11
 984 0144 01       		.uleb128 0x1
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 25


 985 0145 12       		.uleb128 0x12
 986 0146 01       		.uleb128 0x1
 987 0147 40       		.uleb128 0x40
 988 0148 0A       		.uleb128 0xa
 989 0149 9742     		.uleb128 0x2117
 990 014b 0C       		.uleb128 0xc
 991 014c 01       		.uleb128 0x1
 992 014d 13       		.uleb128 0x13
 993 014e 00       		.byte	0
 994 014f 00       		.byte	0
 995 0150 16       		.uleb128 0x16
 996 0151 34       		.uleb128 0x34
 997 0152 00       		.byte	0
 998 0153 03       		.uleb128 0x3
 999 0154 0E       		.uleb128 0xe
 1000 0155 3A       		.uleb128 0x3a
 1001 0156 0B       		.uleb128 0xb
 1002 0157 3B       		.uleb128 0x3b
 1003 0158 05       		.uleb128 0x5
 1004 0159 49       		.uleb128 0x49
 1005 015a 13       		.uleb128 0x13
 1006 015b 02       		.uleb128 0x2
 1007 015c 06       		.uleb128 0x6
 1008 015d 00       		.byte	0
 1009 015e 00       		.byte	0
 1010 015f 17       		.uleb128 0x17
 1011 0160 34       		.uleb128 0x34
 1012 0161 00       		.byte	0
 1013 0162 03       		.uleb128 0x3
 1014 0163 0E       		.uleb128 0xe
 1015 0164 3A       		.uleb128 0x3a
 1016 0165 0B       		.uleb128 0xb
 1017 0166 3B       		.uleb128 0x3b
 1018 0167 05       		.uleb128 0x5
 1019 0168 49       		.uleb128 0x49
 1020 0169 13       		.uleb128 0x13
 1021 016a 3F       		.uleb128 0x3f
 1022 016b 0C       		.uleb128 0xc
 1023 016c 3C       		.uleb128 0x3c
 1024 016d 0C       		.uleb128 0xc
 1025 016e 00       		.byte	0
 1026 016f 00       		.byte	0
 1027 0170 18       		.uleb128 0x18
 1028 0171 2E       		.uleb128 0x2e
 1029 0172 01       		.byte	0x1
 1030 0173 3F       		.uleb128 0x3f
 1031 0174 0C       		.uleb128 0xc
 1032 0175 03       		.uleb128 0x3
 1033 0176 0E       		.uleb128 0xe
 1034 0177 3A       		.uleb128 0x3a
 1035 0178 0B       		.uleb128 0xb
 1036 0179 3B       		.uleb128 0x3b
 1037 017a 05       		.uleb128 0x5
 1038 017b 27       		.uleb128 0x27
 1039 017c 0C       		.uleb128 0xc
 1040 017d 3C       		.uleb128 0x3c
 1041 017e 0C       		.uleb128 0xc
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 26


 1042 017f 00       		.byte	0
 1043 0180 00       		.byte	0
 1044 0181 19       		.uleb128 0x19
 1045 0182 05       		.uleb128 0x5
 1046 0183 00       		.byte	0
 1047 0184 49       		.uleb128 0x49
 1048 0185 13       		.uleb128 0x13
 1049 0186 00       		.byte	0
 1050 0187 00       		.byte	0
 1051 0188 00       		.byte	0
 1052              		.section	.debug_loc,"",%progbits
 1053              	.Ldebug_loc0:
 1054              	.LLST0:
 1055 0000 00000000 		.4byte	.LFB110
 1056 0004 02000000 		.4byte	.LCFI0
 1057 0008 0200     		.2byte	0x2
 1058 000a 7D       		.byte	0x7d
 1059 000b 00       		.sleb128 0
 1060 000c 02000000 		.4byte	.LCFI0
 1061 0010 16000000 		.4byte	.LFE110
 1062 0014 0200     		.2byte	0x2
 1063 0016 7D       		.byte	0x7d
 1064 0017 08       		.sleb128 8
 1065 0018 00000000 		.4byte	0
 1066 001c 00000000 		.4byte	0
 1067              	.LLST1:
 1068 0020 00000000 		.4byte	.LVL2
 1069 0024 10000000 		.4byte	.LVL3
 1070 0028 0100     		.2byte	0x1
 1071 002a 50       		.byte	0x50
 1072 002b 10000000 		.4byte	.LVL3
 1073 002f 14000000 		.4byte	.LVL4
 1074 0033 0400     		.2byte	0x4
 1075 0035 F3       		.byte	0xf3
 1076 0036 01       		.uleb128 0x1
 1077 0037 50       		.byte	0x50
 1078 0038 9F       		.byte	0x9f
 1079 0039 14000000 		.4byte	.LVL4
 1080 003d 1C000000 		.4byte	.LFE111
 1081 0041 0100     		.2byte	0x1
 1082 0043 50       		.byte	0x50
 1083 0044 00000000 		.4byte	0
 1084 0048 00000000 		.4byte	0
 1085              	.LLST2:
 1086 004c 00000000 		.4byte	.LVL5
 1087 0050 10000000 		.4byte	.LVL6
 1088 0054 0100     		.2byte	0x1
 1089 0056 50       		.byte	0x50
 1090 0057 10000000 		.4byte	.LVL6
 1091 005b 14000000 		.4byte	.LVL7
 1092 005f 0400     		.2byte	0x4
 1093 0061 F3       		.byte	0xf3
 1094 0062 01       		.uleb128 0x1
 1095 0063 50       		.byte	0x50
 1096 0064 9F       		.byte	0x9f
 1097 0065 14000000 		.4byte	.LVL7
 1098 0069 1C000000 		.4byte	.LFE113
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 27


 1099 006d 0100     		.2byte	0x1
 1100 006f 50       		.byte	0x50
 1101 0070 00000000 		.4byte	0
 1102 0074 00000000 		.4byte	0
 1103              	.LLST3:
 1104 0078 00000000 		.4byte	.LVL8
 1105 007c 12000000 		.4byte	.LVL10
 1106 0080 0100     		.2byte	0x1
 1107 0082 50       		.byte	0x50
 1108 0083 12000000 		.4byte	.LVL10
 1109 0087 14000000 		.4byte	.LFE114
 1110 008b 0400     		.2byte	0x4
 1111 008d F3       		.byte	0xf3
 1112 008e 01       		.uleb128 0x1
 1113 008f 50       		.byte	0x50
 1114 0090 9F       		.byte	0x9f
 1115 0091 00000000 		.4byte	0
 1116 0095 00000000 		.4byte	0
 1117              	.LLST4:
 1118 0099 00000000 		.4byte	.LVL8
 1119 009d 0A000000 		.4byte	.LVL9
 1120 00a1 0200     		.2byte	0x2
 1121 00a3 30       		.byte	0x30
 1122 00a4 9F       		.byte	0x9f
 1123 00a5 0A000000 		.4byte	.LVL9
 1124 00a9 12000000 		.4byte	.LVL10
 1125 00ad 0B00     		.2byte	0xb
 1126 00af 70       		.byte	0x70
 1127 00b0 00       		.sleb128 0
 1128 00b1 08       		.byte	0x8
 1129 00b2 FF       		.byte	0xff
 1130 00b3 1A       		.byte	0x1a
 1131 00b4 71       		.byte	0x71
 1132 00b5 00       		.sleb128 0
 1133 00b6 1A       		.byte	0x1a
 1134 00b7 30       		.byte	0x30
 1135 00b8 2E       		.byte	0x2e
 1136 00b9 9F       		.byte	0x9f
 1137 00ba 12000000 		.4byte	.LVL10
 1138 00be 14000000 		.4byte	.LFE114
 1139 00c2 0C00     		.2byte	0xc
 1140 00c4 F3       		.byte	0xf3
 1141 00c5 01       		.uleb128 0x1
 1142 00c6 50       		.byte	0x50
 1143 00c7 08       		.byte	0x8
 1144 00c8 FF       		.byte	0xff
 1145 00c9 1A       		.byte	0x1a
 1146 00ca 71       		.byte	0x71
 1147 00cb 00       		.sleb128 0
 1148 00cc 1A       		.byte	0x1a
 1149 00cd 30       		.byte	0x30
 1150 00ce 2E       		.byte	0x2e
 1151 00cf 9F       		.byte	0x9f
 1152 00d0 00000000 		.4byte	0
 1153 00d4 00000000 		.4byte	0
 1154              	.LLST5:
 1155 00d8 00000000 		.4byte	.LVL11
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 28


 1156 00dc 0C000000 		.4byte	.LVL12
 1157 00e0 0100     		.2byte	0x1
 1158 00e2 50       		.byte	0x50
 1159 00e3 0C000000 		.4byte	.LVL12
 1160 00e7 10000000 		.4byte	.LFE115
 1161 00eb 0400     		.2byte	0x4
 1162 00ed F3       		.byte	0xf3
 1163 00ee 01       		.uleb128 0x1
 1164 00ef 50       		.byte	0x50
 1165 00f0 9F       		.byte	0x9f
 1166 00f1 00000000 		.4byte	0
 1167 00f5 00000000 		.4byte	0
 1168              	.LLST6:
 1169 00f9 00000000 		.4byte	.LVL13
 1170 00fd 12000000 		.4byte	.LVL15
 1171 0101 0100     		.2byte	0x1
 1172 0103 50       		.byte	0x50
 1173 0104 12000000 		.4byte	.LVL15
 1174 0108 14000000 		.4byte	.LFE116
 1175 010c 0400     		.2byte	0x4
 1176 010e F3       		.byte	0xf3
 1177 010f 01       		.uleb128 0x1
 1178 0110 50       		.byte	0x50
 1179 0111 9F       		.byte	0x9f
 1180 0112 00000000 		.4byte	0
 1181 0116 00000000 		.4byte	0
 1182              	.LLST7:
 1183 011a 00000000 		.4byte	.LVL13
 1184 011e 0A000000 		.4byte	.LVL14
 1185 0122 0200     		.2byte	0x2
 1186 0124 30       		.byte	0x30
 1187 0125 9F       		.byte	0x9f
 1188 0126 0A000000 		.4byte	.LVL14
 1189 012a 12000000 		.4byte	.LVL15
 1190 012e 0B00     		.2byte	0xb
 1191 0130 70       		.byte	0x70
 1192 0131 00       		.sleb128 0
 1193 0132 08       		.byte	0x8
 1194 0133 FF       		.byte	0xff
 1195 0134 1A       		.byte	0x1a
 1196 0135 71       		.byte	0x71
 1197 0136 00       		.sleb128 0
 1198 0137 1A       		.byte	0x1a
 1199 0138 30       		.byte	0x30
 1200 0139 2E       		.byte	0x2e
 1201 013a 9F       		.byte	0x9f
 1202 013b 12000000 		.4byte	.LVL15
 1203 013f 14000000 		.4byte	.LFE116
 1204 0143 0C00     		.2byte	0xc
 1205 0145 F3       		.byte	0xf3
 1206 0146 01       		.uleb128 0x1
 1207 0147 50       		.byte	0x50
 1208 0148 08       		.byte	0x8
 1209 0149 FF       		.byte	0xff
 1210 014a 1A       		.byte	0x1a
 1211 014b 71       		.byte	0x71
 1212 014c 00       		.sleb128 0
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 29


 1213 014d 1A       		.byte	0x1a
 1214 014e 30       		.byte	0x30
 1215 014f 2E       		.byte	0x2e
 1216 0150 9F       		.byte	0x9f
 1217 0151 00000000 		.4byte	0
 1218 0155 00000000 		.4byte	0
 1219              	.LLST8:
 1220 0159 00000000 		.4byte	.LVL16
 1221 015d 06000000 		.4byte	.LVL17
 1222 0161 0100     		.2byte	0x1
 1223 0163 50       		.byte	0x50
 1224 0164 06000000 		.4byte	.LVL17
 1225 0168 10000000 		.4byte	.LFE117
 1226 016c 0400     		.2byte	0x4
 1227 016e F3       		.byte	0xf3
 1228 016f 01       		.uleb128 0x1
 1229 0170 50       		.byte	0x50
 1230 0171 9F       		.byte	0x9f
 1231 0172 00000000 		.4byte	0
 1232 0176 00000000 		.4byte	0
 1233              		.section	.debug_aranges,"",%progbits
 1234 0000 54000000 		.4byte	0x54
 1235 0004 0200     		.2byte	0x2
 1236 0006 00000000 		.4byte	.Ldebug_info0
 1237 000a 04       		.byte	0x4
 1238 000b 00       		.byte	0
 1239 000c 0000     		.2byte	0
 1240 000e 0000     		.2byte	0
 1241 0010 00000000 		.4byte	.LFB110
 1242 0014 16000000 		.4byte	.LFE110-.LFB110
 1243 0018 00000000 		.4byte	.LFB111
 1244 001c 1C000000 		.4byte	.LFE111-.LFB111
 1245 0020 00000000 		.4byte	.LFB112
 1246 0024 0C000000 		.4byte	.LFE112-.LFB112
 1247 0028 00000000 		.4byte	.LFB113
 1248 002c 1C000000 		.4byte	.LFE113-.LFB113
 1249 0030 00000000 		.4byte	.LFB114
 1250 0034 14000000 		.4byte	.LFE114-.LFB114
 1251 0038 00000000 		.4byte	.LFB115
 1252 003c 10000000 		.4byte	.LFE115-.LFB115
 1253 0040 00000000 		.4byte	.LFB116
 1254 0044 14000000 		.4byte	.LFE116-.LFB116
 1255 0048 00000000 		.4byte	.LFB117
 1256 004c 10000000 		.4byte	.LFE117-.LFB117
 1257 0050 00000000 		.4byte	0
 1258 0054 00000000 		.4byte	0
 1259              		.section	.debug_ranges,"",%progbits
 1260              	.Ldebug_ranges0:
 1261 0000 00000000 		.4byte	.LFB110
 1262 0004 16000000 		.4byte	.LFE110
 1263 0008 00000000 		.4byte	.LFB111
 1264 000c 1C000000 		.4byte	.LFE111
 1265 0010 00000000 		.4byte	.LFB112
 1266 0014 0C000000 		.4byte	.LFE112
 1267 0018 00000000 		.4byte	.LFB113
 1268 001c 1C000000 		.4byte	.LFE113
 1269 0020 00000000 		.4byte	.LFB114
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 30


 1270 0024 14000000 		.4byte	.LFE114
 1271 0028 00000000 		.4byte	.LFB115
 1272 002c 10000000 		.4byte	.LFE115
 1273 0030 00000000 		.4byte	.LFB116
 1274 0034 14000000 		.4byte	.LFE116
 1275 0038 00000000 		.4byte	.LFB117
 1276 003c 10000000 		.4byte	.LFE117
 1277 0040 00000000 		.4byte	0
 1278 0044 00000000 		.4byte	0
 1279              		.section	.debug_line,"",%progbits
 1280              	.Ldebug_line0:
 1281 0000 90010000 		.section	.debug_str,"MS",%progbits,1
 1281      0200F200 
 1281      00000201 
 1281      FB0E0D00 
 1281      01010101 
 1282              	.LASF15:
 1283 0000 49545374 		.ascii	"ITStatus\000"
 1283      61747573 
 1283      00
 1284              	.LASF36:
 1285 0009 5243435F 		.ascii	"RCC_AHB2PeriphResetCmd\000"
 1285      41484232 
 1285      50657269 
 1285      70685265 
 1285      73657443 
 1286              	.LASF3:
 1287 0020 73686F72 		.ascii	"short unsigned int\000"
 1287      7420756E 
 1287      7369676E 
 1287      65642069 
 1287      6E7400
 1288              	.LASF18:
 1289 0033 46756E63 		.ascii	"FunctionalState\000"
 1289      74696F6E 
 1289      616C5374 
 1289      61746500 
 1290              	.LASF22:
 1291 0043 524E475F 		.ascii	"RNG_ITConfig\000"
 1291      4954436F 
 1291      6E666967 
 1291      00
 1292              	.LASF21:
 1293 0050 524E475F 		.ascii	"RNG_Cmd\000"
 1293      436D6400 
 1294              	.LASF29:
 1295 0058 62697473 		.ascii	"bitstatus\000"
 1295      74617475 
 1295      7300
 1296              	.LASF14:
 1297 0062 466C6167 		.ascii	"FlagStatus\000"
 1297      53746174 
 1297      757300
 1298              	.LASF28:
 1299 006d 524E475F 		.ascii	"RNG_IT\000"
 1299      495400
 1300              	.LASF17:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 31


 1301 0074 454E4142 		.ascii	"ENABLE\000"
 1301      4C4500
 1302              	.LASF1:
 1303 007b 756E7369 		.ascii	"unsigned char\000"
 1303      676E6564 
 1303      20636861 
 1303      7200
 1304              	.LASF32:
 1305 0089 636D7369 		.ascii	"cmsis/device/stm32f4xx_rng.c\000"
 1305      732F6465 
 1305      76696365 
 1305      2F73746D 
 1305      33326634 
 1306              	.LASF34:
 1307 00a6 524E475F 		.ascii	"RNG_GetRandomNumber\000"
 1307      47657452 
 1307      616E646F 
 1307      6D4E756D 
 1307      62657200 
 1308              	.LASF8:
 1309 00ba 6C6F6E67 		.ascii	"long unsigned int\000"
 1309      20756E73 
 1309      69676E65 
 1309      6420696E 
 1309      7400
 1310              	.LASF20:
 1311 00cc 524E475F 		.ascii	"RNG_DeInit\000"
 1311      4465496E 
 1311      697400
 1312              	.LASF13:
 1313 00d7 52455345 		.ascii	"RESET\000"
 1313      5400
 1314              	.LASF7:
 1315 00dd 75696E74 		.ascii	"uint32_t\000"
 1315      33325F74 
 1315      00
 1316              	.LASF16:
 1317 00e6 44495341 		.ascii	"DISABLE\000"
 1317      424C4500 
 1318              	.LASF35:
 1319 00ee 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1319      52784275 
 1319      66666572 
 1319      00
 1320              	.LASF31:
 1321 00fb 474E5520 		.ascii	"GNU C 4.7.3 20121207 (release) [ARM/embedded-4_7-br"
 1321      4320342E 
 1321      372E3320 
 1321      32303132 
 1321      31323037 
 1322 012e 616E6368 		.ascii	"anch revision 194305]\000"
 1322      20726576 
 1322      6973696F 
 1322      6E203139 
 1322      34333035 
 1323              	.LASF19:
 1324 0144 524E475F 		.ascii	"RNG_TypeDef\000"
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 32


 1324      54797065 
 1324      44656600 
 1325              	.LASF11:
 1326 0150 756E7369 		.ascii	"unsigned int\000"
 1326      676E6564 
 1326      20696E74 
 1326      00
 1327              	.LASF24:
 1328 015d 524E475F 		.ascii	"RNG_FLAG\000"
 1328      464C4147 
 1328      00
 1329              	.LASF10:
 1330 0166 6C6F6E67 		.ascii	"long long unsigned int\000"
 1330      206C6F6E 
 1330      6720756E 
 1330      7369676E 
 1330      65642069 
 1331              	.LASF4:
 1332 017d 75696E74 		.ascii	"uint8_t\000"
 1332      385F7400 
 1333              	.LASF5:
 1334 0185 696E7433 		.ascii	"int32_t\000"
 1334      325F7400 
 1335              	.LASF12:
 1336 018d 73697A65 		.ascii	"sizetype\000"
 1336      74797065 
 1336      00
 1337              	.LASF9:
 1338 0196 6C6F6E67 		.ascii	"long long int\000"
 1338      206C6F6E 
 1338      6720696E 
 1338      7400
 1339              	.LASF2:
 1340 01a4 73686F72 		.ascii	"short int\000"
 1340      7420696E 
 1340      7400
 1341              	.LASF25:
 1342 01ae 524E475F 		.ascii	"RNG_ClearFlag\000"
 1342      436C6561 
 1342      72466C61 
 1342      6700
 1343              	.LASF23:
 1344 01bc 4E657753 		.ascii	"NewState\000"
 1344      74617465 
 1344      00
 1345              	.LASF27:
 1346 01c5 524E475F 		.ascii	"RNG_GetITStatus\000"
 1346      47657449 
 1346      54537461 
 1346      74757300 
 1347              	.LASF33:
 1348 01d5 433A5C78 		.ascii	"C:\\xav_dev\\eclipse\\ambiantiseur-make\000"
 1348      61765F64 
 1348      65765C65 
 1348      636C6970 
 1348      73655C61 
 1349              	.LASF6:
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 33


 1350 01fa 6C6F6E67 		.ascii	"long int\000"
 1350      20696E74 
 1350      00
 1351              	.LASF0:
 1352 0203 7369676E 		.ascii	"signed char\000"
 1352      65642063 
 1352      68617200 
 1353              	.LASF30:
 1354 020f 524E475F 		.ascii	"RNG_ClearITPendingBit\000"
 1354      436C6561 
 1354      72495450 
 1354      656E6469 
 1354      6E674269 
 1355              	.LASF26:
 1356 0225 524E475F 		.ascii	"RNG_GetFlagStatus\000"
 1356      47657446 
 1356      6C616753 
 1356      74617475 
 1356      7300
 1357              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.3 20121207 (release) [ARM/embedded-4_7-br
ARM GAS  C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s 			page 34


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f4xx_rng.c
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:71     .text.RNG_DeInit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:76     .text.RNG_DeInit:00000000 RNG_DeInit
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:105    .text.RNG_Cmd:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:110    .text.RNG_Cmd:00000000 RNG_Cmd
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:139    .text.RNG_GetRandomNumber:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:144    .text.RNG_GetRandomNumber:00000000 RNG_GetRandomNumber
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:161    .text.RNG_ITConfig:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:166    .text.RNG_ITConfig:00000000 RNG_ITConfig
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:195    .text.RNG_GetFlagStatus:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:200    .text.RNG_GetFlagStatus:00000000 RNG_GetFlagStatus
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:224    .text.RNG_ClearFlag:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:229    .text.RNG_ClearFlag:00000000 RNG_ClearFlag
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:248    .text.RNG_GetITStatus:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:253    .text.RNG_GetITStatus:00000000 RNG_GetITStatus
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:277    .text.RNG_ClearITPendingBit:00000000 $t
C:\Users\CNous\AppData\Local\Temp\cckqqQjH.s:282    .text.RNG_ClearITPendingBit:00000000 RNG_ClearITPendingBit
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_AHB2PeriphResetCmd
